{"version":3,"mappings":"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","names":["routes","path","component","_job_page_page__WEBPACK_IMPORTED_MODULE_0__","loadChildren","Promise","then","m","ApplyPageModule","JobPagePageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","JobPagePageModule","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_components_custom_component_module__WEBPACK_IMPORTED_MODULE_0__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","_ionic_angular__WEBPACK_IMPORTED_MODULE_7__","_job_page_routing_module__WEBPACK_IMPORTED_MODULE_1__","declarations","_job_page_page__WEBPACK_IMPORTED_MODULE_2__","JobPagePage","activatedRoute","router","toastController","profile","favorites","jobs","eventEmitterService","location","profileSub","unsubscribe","favoriteJobsSub","favoritesSub","jobsSub","onPopState","triggerJobPageRefresh","id","snapshot","paramMap","get","title","companyLogo","companyName","companyEmail","summary","fullJobDescription","rateOfPay","jobId","jobTitle","jobLogo","jobCompanyName","jobCompanyEmail","jobSummary","jobFullJobDescription","jobRateOfPay","getFavoriteJobs","getUserDetails","subscribe","favoriteJobs","data","favoriteJobs$","next","console","log","favs","getJobs","Object","values","job","_id","jobObj","getFavorites","favoriteJobsObj","favDetails","navigate","presentToast","onBackAction","create","message","duration","toast","present","_angular_router__WEBPACK_IMPORTED_MODULE_7__","_ionic_angular__WEBPACK_IMPORTED_MODULE_8__","src_app_services_profile_service__WEBPACK_IMPORTED_MODULE_2__","src_app_services_favorites_service__WEBPACK_IMPORTED_MODULE_3__","src_app_services_jobs_service__WEBPACK_IMPORTED_MODULE_4__","src_app_emitters_favorites_event_emitter_service__WEBPACK_IMPORTED_MODULE_5__","_angular_common__WEBPACK_IMPORTED_MODULE_9__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/pages/jobs/job-page/job-page-routing.module.ts","webpack:///src/app/pages/jobs/job-page/job-page.module.ts","webpack:///src/app/pages/jobs/job-page/job-page.page.ts","webpack:///src/app/pages/jobs/job-page/job-page.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { JobPagePage } from './job-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JobPagePage\n  },\n  {\n    path: 'apply/:title/:companyName/:companyEmail/:companyLogo/:rateOfPay',\n    loadChildren: () => import('../apply/apply.module').then( m => m.ApplyPageModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class JobPagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CustomComponentsModule } from '../../../components/custom-component.module';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { JobPagePageRoutingModule } from './job-page-routing.module';\n\nimport { JobPagePage } from './job-page.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CustomComponentsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    JobPagePageRoutingModule\n  ],\n  declarations: [JobPagePage]\n})\nexport class JobPagePageModule {}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { FavoritesService } from 'src/app/services/favorites.service';\nimport { JobsService } from 'src/app/services/jobs.service';\nimport { FavoritesEventEmitterService } from 'src/app/emitters/favorites-event-emitter.service';\nimport { PlatformLocation } from '@angular/common';\n\n\n@Component({\n  selector: 'app-job-page',\n  templateUrl: './job-page.page.html',\n  styleUrls: ['./job-page.page.scss'],\n})\nexport class JobPagePage implements OnInit, OnDestroy {\n\n  jobObj: string;\n  jobId: string;\n  jobTitle: string;\n  jobCompanyName: string;\n  jobCompanyEmail: string;\n  jobSummary: string;\n  jobFullJobDescription: string;\n  jobRateOfPay: string;\n  jobDatePosted: string;\n  favoriteJobsObj;\n  jobLogo: string;\n\n  profileSub: Subscription;\n  favoriteJobsSub: Subscription;\n  jobsSub: Subscription;\n  favoritesSub: Subscription;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private toastController: ToastController,\n    private profile: ProfileService,\n    private favorites: FavoritesService,\n    private jobs: JobsService,\n    private eventEmitterService: FavoritesEventEmitterService,\n    private location: PlatformLocation\n  ) { }\n  ngOnDestroy(): void {\n    this.profileSub.unsubscribe();\n    this.favoriteJobsSub.unsubscribe();\n    this.favoritesSub.unsubscribe();\n    this.jobsSub.unsubscribe();\n  }\n  ngOnInit() {\n\n    this.location.onPopState(() => {\n      this.triggerJobPageRefresh();\n    });\n\n    // tslint:disable-next-line: radix\n    const id  = this.activatedRoute.snapshot.paramMap.get('id');\n    // tslint:disable-next-line: radix\n    const title  = this.activatedRoute.snapshot.paramMap.get('title');\n    // tslint:disable-next-line: radix\n    const companyLogo  = this.activatedRoute.snapshot.paramMap.get('companyLogo');\n    // tslint:disable-next-line: radix\n    const companyName  = this.activatedRoute.snapshot.paramMap.get('companyName');\n    // tslint:disable-next-line: radix\n    const companyEmail  = this.activatedRoute.snapshot.paramMap.get('companyEmail');\n     // tslint:disable-next-line: radix\n    const summary  = this.activatedRoute.snapshot.paramMap.get('summary');\n     // tslint:disable-next-line: radix\n    const fullJobDescription  = this.activatedRoute.snapshot.paramMap.get('fullJobDescription');\n      // tslint:disable-next-line: radix\n    const rateOfPay  = this.activatedRoute.snapshot.paramMap.get('rateOfPay');\n\n    this.jobId = id;\n    this.jobTitle = title;\n    this.jobLogo = companyLogo;\n    // this.jobPosted = posted;\n    this.jobCompanyName = companyName;\n    this.jobCompanyEmail = companyEmail;\n    this.jobSummary = summary;\n    this.jobFullJobDescription = fullJobDescription;\n    this.jobRateOfPay = rateOfPay;\n    this.getFavoriteJobs();\n  }\n\n  getFavoriteJobs() {\n    // getting all the favorite jobs that the user has on their profile\n    this.profileSub = this.profile.getUserDetails().subscribe(\n      data => {\n        let favoriteJobs = data['favoriteJobs']\n\n        this.favorites.favoriteJobs$.next(favoriteJobs);\n        this.favoriteJobsSub = this.favorites.favoriteJobs$.subscribe(\n          favs => {\n            console.log(`Favorite Jobs in Service: ${favs}`);\n            this.jobsSub = this.jobs.getJobs().subscribe( jobs => {\n              for (const job of Object.values(jobs)) {\n                if (this.jobId == job._id) {\n                  this.jobObj = job;\n                }\n              }\n            });\n            this.favoritesSub = this.favorites.getFavorites(data['email']).subscribe( favDetails => {\n              this.favoriteJobsObj = favDetails;\n            });\n          }\n        );\n      }\n    );\n  }\n\n  applyForJob() {\n    // tslint:disable-next-line: max-line-length\n    this.router.navigate(['/home/jobs/job-page/:id/:title/:companyLogo/:companyName/:companyEmail/:summary/:fullJobDescription/:rateOfPay/apply', this.jobTitle, this.jobCompanyName, this.jobCompanyEmail, this.jobLogo, this.jobRateOfPay ]);\n  }\n\n  favoriteThisJob() {\n    console.log('Favoriting this Job');\n    // Check for error before we present the toast\n    this.presentToast();\n  }\n\n  goBack() {\n    this.triggerJobPageRefresh();\n    this.router.navigate(['/home/jobs']);\n  }\n\n  triggerJobPageRefresh() {\n    this.eventEmitterService.onBackAction();\n  }\n\n  async presentToast() {\n    const toast = await this.toastController.create({\n      message: 'This job has been favorited.',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n\n\n}\n","export default \"<ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button (click)=\\\"triggerJobPageRefresh()\\\"></ion-back-button>\\n      <img id=\\\"mobile-toolbar-icon\\\" src=\\\"../../../../assets/logos/White-FYF-LOGO.svg\\\" alt=\\\"White FYF Logo\\\">\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\"> \\n      <app-heart-icon  class=\\\"ion-float-right\\\" id=\\\"heart-icon\\\" [job]=\\\"jobObj\\\" [favoriteJobs]=\\\"favoriteJobsObj\\\" *ngIf=\\\"favoriteJobsObj\\\">\\n      </app-heart-icon>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row id=\\\"job-header-wrapper\\\" class=\\\"ion-justify-content-center\\\">\\n      <ion-col size-xs=\\\"12\\\" size-sm=\\\"8\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\" size-xl=\\\"6\\\">\\n        <div class=\\\"spacer\\\"></div>\\n        <ion-toolbar class=\\\"toolbar-company-info\\\">\\n          <ion-buttons slot=\\\"start\\\">\\n            <img style=\\\"border-radius: 50px;\\\" height=\\\"75\\\" src=\\\"{{this.jobLogo}}\\\">\\n            <div class=\\\"toolbar-company-info\\\">\\n              <h2>{{jobCompanyName}}</h2>\\n              <h3>{{jobTitle}}</h3>\\n              <p>${{jobRateOfPay}} / hr</p>\\n            </div>\\n          </ion-buttons>\\n          <ion-buttons class=\\\"ion-hide-lg-down\\\" slot=\\\"end\\\">\\n            <app-heart-icon  class=\\\"ion-float-right\\\" id=\\\"heart-icon\\\" [job]=\\\"jobObj\\\" [favoriteJobs]=\\\"favoriteJobsObj\\\" *ngIf=\\\"favoriteJobsObj\\\"></app-heart-icon>\\n            <ion-button class=\\\"back-button\\\" (click)=\\\"goBack()\\\">\\n              Back\\n            </ion-button>\\n          </ion-buttons>\\n    </ion-toolbar>\\n        <div class=\\\"spacer\\\"></div>\\n        <div class=\\\"spacer\\\"></div>\\n        <p id=\\\"job-full-description\\\">{{jobFullJobDescription}}</p>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col size=\\\"6\\\"  class=\\\"ion-text-center\\\">\\n        <ion-button (click)=\\\"applyForJob()\\\" class=\\\"blue-button\\\" style=\\\"width: 150px;\\\">Apply</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";"]}