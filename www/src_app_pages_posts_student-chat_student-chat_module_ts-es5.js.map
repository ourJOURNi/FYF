{"version":3,"mappings":"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","names":["routes","path","component","_student_chat_page__WEBPACK_IMPORTED_MODULE_0__","loadChildren","Promise","then","m","ChatPagePageModule","StudentChatPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","StudentChatPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","_ionic_angular__WEBPACK_IMPORTED_MODULE_7__","_student_chat_routing_module__WEBPACK_IMPORTED_MODULE_0__","src_app_modals_new_message_student_new_message_student_module__WEBPACK_IMPORTED_MODULE_2__","declarations","_student_chat_page__WEBPACK_IMPORTED_MODULE_1__","StudentChatPage","router","modal","studentChat","profile","getUserDetails","subscribe","fullName","data","profilePicture","email","conversations$","conversations","Object","values","reverse","convo","messages","message","date","Date","requestingUserEmail","isUser","lastMessage","slice","lastMessageText","text","lastMessageTime","chatId","navigate","create","src_app_modals_new_message_student_new_message_student_page__WEBPACK_IMPORTED_MODULE_2__","componentProps","newMessageModalConfig","present","item","_angular_router__WEBPACK_IMPORTED_MODULE_7__","_ionic_angular__WEBPACK_IMPORTED_MODULE_8__","src_app_services_student_chat_service__WEBPACK_IMPORTED_MODULE_3__","src_app_services_profile_service__WEBPACK_IMPORTED_MODULE_4__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/pages/posts/student-chat/student-chat-routing.module.ts","webpack:///src/app/pages/posts/student-chat/student-chat.module.ts","webpack:///src/app/pages/posts/student-chat/student-chat.page.ts","webpack:///src/app/pages/posts/student-chat/student-chat.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StudentChatPage } from './student-chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StudentChatPage\n  },\n  {\n    path: 'chat-page/:chatId/:fullName/:profilePicture/:email',\n    loadChildren: () => import('./chat-page/chat-page.module').then( m => m.ChatPagePageModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StudentChatPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StudentChatPageRoutingModule } from './student-chat-routing.module';\n\nimport { StudentChatPage } from './student-chat.page';\nimport { NewMessageStudentPageModule } from 'src/app/modals/new-message-student/new-message-student.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StudentChatPageRoutingModule,\n    NewMessageStudentPageModule\n  ],\n  declarations: [StudentChatPage]\n})\nexport class StudentChatPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { NewMessageStudentPage } from 'src/app/modals/new-message-student/new-message-student.page';\nimport { StudentChatService } from 'src/app/services/student-chat.service';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport {formatDistanceToNow } from 'date-fns';\n\n\n@Component({\n  selector: 'app-student-chat',\n  templateUrl: './student-chat.page.html',\n  styleUrls: ['./student-chat.page.scss'],\n})\nexport class StudentChatPage implements OnInit {\n  fullName: string;\n  profilePicture: string;\n  email: string;\n  conversations;\n  mostRecentMessage;\n\n  constructor(\n    private router: Router,\n    private modal: ModalController,\n    private studentChat: StudentChatService,\n    private profile: ProfileService) { }\n\n  ngOnInit() {\n    this.profile.getUserDetails()\n      .subscribe( data => {\n        this.fullName = data['fullName'];\n        this.profilePicture = data['profilePicture'];\n        this.email = data['email'];\n        this.studentChat.conversations$.subscribe(\n          conversations => {\n            this.conversations = Object.values(conversations).reverse();\n            for (let convo of this.conversations) {\n              for (const message of convo.messages) {\n                message.date = formatDistanceToNow(new Date(message.date));\n              }\n              if (convo.requestingUserEmail === this.email) {\n                // console.log('The requesting users is the same user as the one who logged in on this app');\n                convo.isUser = true;\n              }\n              // Get the most recent message information for text and date\n              convo.lastMessage = convo.messages.slice(-1)[0];\n              convo.lastMessageText = convo.lastMessage.text;\n              convo.lastMessageTime = convo.lastMessage.date;\n            }\n        });\n  });\n}\n\n  chatPage(chatId) {\n    this.router.navigate(['home/posts/student-chat/chat-page', chatId, this.fullName, this.profilePicture, this.email]);\n  }\n\n  async newMessage() {\n\n    const newMessageModalConfig = await this.modal.create({\n      component: NewMessageStudentPage,\n      componentProps: {\n\n      }\n    });\n    await newMessageModalConfig.present();\n\n  }\n\n  delete(item) {\n\n  }\n\n}\n","export default \" <!-- Mobile Toolbar -->\\n <ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button></ion-back-button>\\n        <p class=\\\"toolbar-title\\\">Student Chat</p>\\n      </ion-buttons>\\n      <ion-buttons slot=\\\"end\\\">\\n        <ion-button (click)=\\\"newMessage()\\\">\\n          <ion-icon class=\\\"new-message\\\" size=\\\"large\\\" name=\\\"create\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n  <!-- Mobile -->\\n  <!-- Searchbar -->\\n  <ion-toolbar class=\\\"searchbar-wrapper ion-hide-lg-up\\\">\\n    <ion-searchbar></ion-searchbar>\\n  </ion-toolbar>\\n\\n  \\n\\n  <!-- List of Text Items -->\\n<ion-list class=\\\"ion-hide-lg-up\\\">\\n  <!-- If student has no messages in their inbox -->\\n  <div *ngIf=\\\"this.conversations == 0\\\" id=\\\"no-messages\\\" class=\\\"ion-text-center\\\" style=\\\"margin-top: 75px; padding: 15px;\\\">\\n    <p>You have <b>no messages</b> in your inbox. Please press the <ion-icon class=\\\"new-message\\\" size=\\\"small\\\" name=\\\"create\\\"></ion-icon> button to create a new message. </p>\\n  </div>\\n\\n  <ion-item-sliding *ngFor=\\\"let convo of conversations\\\" (click)=\\\"chatPage(convo.chatId)\\\">\\n  <ion-item class=\\\"unread\\\">\\n    <ion-avatar slot=\\\"start\\\">\\n      <!-- Show images are profiles of the other user -->\\n      <img src=\\\"{{convo.isUser ? convo.respondingUserPhoto : convo.requestingUserPhoto}}\\\">\\n    </ion-avatar>\\n    <ion-label>\\n      <h2>{{convo.isUser ? convo.respondingUserFullname : convo.requestingUserFullname}} <span class=\\\"date-sent\\\">&middot; {{convo.lastMessageTime}}</span></h2>\\n      <!-- TODO: Most recent message -->\\n      <p>{{convo.lastMessageText}}</p>\\n    </ion-label>\\n  </ion-item>\\n    <ion-item-options side=\\\"end\\\">\\n      <!-- <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(item)\\\">Delete</ion-item-option> -->\\n    </ion-item-options>\\n  </ion-item-sliding>\\n</ion-list>\\n\\n  <!-- Desktop -->\\n  <!-- <ion-grid class=\\\"ion-hide-lg-down\\\">\\n    <ion-row>\\n      <ion-col size=\\\"6\\\"></ion-col>\\n      <ion-col size=\\\"6\\\"></ion-col>\\n    </ion-row>\\n  </ion-grid> -->\\n</ion-content>\\n\";"]}