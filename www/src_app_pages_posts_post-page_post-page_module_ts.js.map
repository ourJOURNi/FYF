{"version":3,"file":"src_app_pages_posts_post-page_post-page_module_ts.js","mappings":"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","sources":["./src/app/modals/edit-comment/edit-comment-routing.module.ts","./src/app/modals/edit-comment/edit-comment.module.ts","./src/app/modals/edit-comment/edit-comment.page.ts","./src/app/modals/reply-comment/reply-comment-routing.module.ts","./src/app/modals/reply-comment/reply-comment.module.ts","./src/app/modals/reply-comment/reply-comment.page.ts","./src/app/modals/report-comment/report-comment-routing.module.ts","./src/app/modals/report-comment/report-comment.module.ts","./src/app/modals/report-comment/report-comment.page.ts","./src/app/pages/posts/post-page/post-page-routing.module.ts","./src/app/pages/posts/post-page/post-page.module.ts","./src/app/pages/posts/post-page/post-page.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditCommentPage } from './edit-comment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditCommentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditCommentPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditCommentPageRoutingModule } from './edit-comment-routing.module';\n\nimport { EditCommentPage } from './edit-comment.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    EditCommentPageRoutingModule\n  ],\n  declarations: [EditCommentPage]\n})\nexport class EditCommentPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ModalController, NavParams, LoadingController, AlertController } from '@ionic/angular';\nimport { PostsService } from 'src/app/services/post.service';\nimport { PostPageEmitterService } from 'src/app/emitters/post-page-emitter.service';\nimport { formatDistanceToNow } from 'date-fns';\n\n\n@Component({\n  selector: 'app-edit-comment',\n  templateUrl: './edit-comment.page.html',\n  styleUrls: ['./edit-comment.page.scss'],\n})\nexport class EditCommentPage implements OnInit {\n  editCommentForm: FormGroup;\n  postID: string;\n  commentContents: string;\n  commentID: string;\n  userEmail: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController,\n    private navParams: NavParams,\n    private loading: LoadingController,\n    private posts: PostsService,\n    private alert: AlertController,\n    private postEmitterService: PostPageEmitterService\n  ) {\n    }\n\n  ngOnInit() {\n\n     this.commentID = this.navParams.get('commentID');\n     this.commentContents = this.navParams.get('commentCotents');\n     this.postID = this.navParams.get('postID');\n     this.userEmail = this.navParams.get('userEmail');\n\n     console.log('post_id: ' + this.postID );\n     console.log(this.commentID);\n     console.log(this.commentContents );\n     console.log(this.userEmail );\n\n     // To collect comment data\n     this.editCommentForm = this.formBuilder.group({\n      newComment: this.commentContents\n    });\n\n  }\n\n  cancel() {\n    console.log('cancelling');\n    this.modal.dismiss();\n  }\n\n  refreshComment() {\n    this.postEmitterService.postPageRefresh();\n  }\n\n   edit(newComment) {\n    console.log('editting');\n    console.log(newComment);\n    this.posts.editComment(this.commentID, this.postID, newComment.newComment).subscribe(comment => {\n\n      this.posts.getPostInfo(this.postID).subscribe(\n        post => {\n\n          for (let postComments of post['comments']) {\n\n            postComments.isUser = false;\n            postComments.canDeleteComment = false;\n            postComments.canReport = true;\n\n              // If this comment is the logged in user, they can delete and edit\n            if (postComments.userEmail === this.userEmail) {\n                postComments.isUser = true;\n                postComments.canDeleteComment = true;\n                postComments.canReport = false;\n              }\n\n            postComments.repliesLength = postComments.replies.length;\n            postComments.date = formatDistanceToNow( new Date(postComments.date), {\n              includeSeconds: true,\n              addSuffix: false\n            });\n           }\n          this.posts.commentsSubject$.next(post['comments'].reverse());\n        });\n      this.editLoading(comment['newComment']);\n    });\n  }\n\n  async editLoading(comment) {\n    const loading = await this.loading.create({\n      message: 'Editing your comment...',\n      duration: 2000\n    });\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n    await this.modal.dismiss();\n    await this.confirmAlert();\n    console.log('Loading dismissed!');\n  }\n\n  async confirmAlert() {\n    const alert = await this.alert.create({\n      cssClass: 'success-alert',\n      message: 'Your comment has been edited.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ReplyCommentPage } from './reply-comment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReplyCommentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReplyCommentPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReplyCommentPageRoutingModule } from './reply-comment-routing.module';\n\nimport { ReplyCommentPage } from './reply-comment.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ReplyCommentPageRoutingModule\n  ],\n  declarations: [ReplyCommentPage]\n})\nexport class ReplyCommentPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ModalController, NavParams, LoadingController, AlertController } from '@ionic/angular';\nimport { PostsService } from 'src/app/services/post.service';\nimport { PostPageEmitterService } from 'src/app/emitters/post-page-emitter.service';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\n\n@Component({\n  selector: 'app-reply-post',\n  templateUrl: './reply-comment.page.html',\n  styleUrls: ['./reply-comment.page.scss'],\n})\nexport class ReplyCommentPage implements OnInit {\n  replyCommentForm: FormGroup;\n  postID: string;\n  userProfilePicture: string;\n  userEmail: string;\n  userFullName: string;\n  commentID: string;\n  commentUserFullName: string;\n  commentUserEmail: string;\n  comment: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController,\n    private navParams: NavParams,\n    private loading: LoadingController,\n    private alert: AlertController,\n    private posts: PostsService,\n    private postEmitterService: PostPageEmitterService) {\n\n    }\n\n  ngOnInit() {\n    // To collect comment data\n    this.replyCommentForm = this.formBuilder.group({\n     reply: ['']\n   });\n\n    this.commentID = this.navParams.get('commentID');\n    this.postID = this.navParams.get('postID');\n    this.userFullName = this.navParams.get('userFullName');\n    this.userEmail = this.navParams.get('userEmail');\n    this.userProfilePicture = this.navParams.get('userProfilePicture');\n    this.commentUserFullName = this.navParams.get('commentUserFullName');\n    this.commentUserEmail = this.navParams.get('commentUserEmail');\n    this.comment = this.navParams.get('comment');\n\n    console.log(this.commentUserEmail);\n    console.log(this.userEmail)\n\n  }\n\n  async reply(reply) {\n    await console.log('replying to comment...');\n    // tslint:disable-next-line: max-line-length\n    await this.posts.replyComment(this.commentID, this.postID, reply.reply, this.userFullName, this.userEmail, this.userProfilePicture, this.commentUserFullName, this.commentUserEmail)\n      .subscribe(\n        data => {\n          console.log(data);\n          let comments = data['comments'];\n          let userEmail = data['userEmail'];\n          // Give User ability to Edit, Delete, or Report a Comment.\n            // User cannot Report their own comment **\n          for (const comment of comments) {\n\n              // If the Logged in User's Email equals the creatorEmail of the Comment,\n              // they will be given the ability to edit and delete their Comment.\n              // The ability for them to report their own comment is disabled\n\n              comment.repliesLength = comment.replies.length;\n              comment.isUser = false;\n              comment.canDeleteComment = false;\n              comment.canReport = true;\n              comment.date = formatDistanceToNow( new Date(comment.date), {\n                includeSeconds: false,\n                addSuffix: false\n              });\n\n              // If this comment is the logged in user, they can delete and edit\n              if (comment.userEmail === userEmail) {\n                comment.isUser = true;\n                comment.canDeleteComment = true;\n                comment.canReport = false;\n              }\n\n              // Format the Reply Dates\n              for (let i = 0; comment.replies.length > i; i++) {\n                comment.replies[i].date = formatDistanceToNow( new Date(comment.replies[i].date), {\n                  addSuffix: false\n                });\n             }\n\n           }\n          this.posts.commentsSubject$.next(comments.reverse());\n        }\n      );\n    await this.replyLoading();\n  }\n\n  async replyLoading() {\n    const loading = await this.loading.create({\n      message: 'Replying to Comment...',\n      duration: 2000\n    });\n\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n    await this.modal.dismiss();\n    await this.confirmAlert();\n    console.log('Loading dismissed!');\n  }\n\n  async confirmAlert() {\n    const alert = await this.alert.create({\n      cssClass: 'success-alert',\n      message: 'Your comment has been added.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  cancel () {\n    console.log('cancelling reply...');\n    this.modal.dismiss();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ReportCommentPage } from './report-comment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReportCommentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportCommentPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReportCommentPageRoutingModule } from './report-comment-routing.module';\n\nimport { ReportCommentPage } from './report-comment.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ReportCommentPageRoutingModule\n  ],\n  declarations: [ReportCommentPage]\n})\nexport class ReportCommentPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { ModalController, NavParams, LoadingController, AlertController} from '@ionic/angular';\nimport { PostsService } from 'src/app/services/post.service';\n\n@Component({\n  selector: 'app-report-comment',\n  templateUrl: './report-comment.page.html',\n  styleUrls: ['./report-comment.page.scss'],\n})\nexport class ReportCommentPage implements OnInit {\n  reportCommentForm: FormGroup;\n  commentContents: string;\n  commentUserFullName: string;\n  commentUserProfilePicture: string;\n  commentUserEmail: string;\n  commentID: string;\n  commentDate: string;\n  post: string;\n  postID: string;\n  userEmail: string;\n  userFullName: string;\n  reportReason: string;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController,\n    private navParams: NavParams,\n    private loading: LoadingController,\n    private posts: PostsService,\n    private alert: AlertController) {\n\n\n    }\n\n\n  ngOnInit() {\n    // To collect comment data\n    this.reportCommentForm = this.formBuilder.group({\n      reportedReason: ['']\n   });\n\n    this.commentID = this.navParams.get('commentID');\n    this.commentContents = this.navParams.get('commentContents');\n    this.post = this.navParams.get('post');\n    this.postID = this.navParams.get('postID');\n    this.commentUserFullName = this.navParams.get('commentUserFullName');\n    this.commentUserProfilePicture = this.navParams.get('commentUserProfilePicture');\n    this.commentUserEmail = this.navParams.get('commentUserEmail');\n    this.commentDate = this.navParams.get('commentDate');\n    this.userEmail = this.navParams.get('userEmail');\n    this.userFullName = this.navParams.get('userFullName');\n  }\n\n  async report() {\n    await console.log('reporting comment...');\n    await console.log(this.reportCommentForm.value.reportedReason);\n    await this.reportLoading();\n    // tslint:disable-next-line: max-line-length\n    await this.posts.reportComment(this.commentID, this.commentContents, this.post, this.postID, this.commentUserFullName, this.commentUserProfilePicture, this.commentUserEmail, this.commentDate, this.userEmail, this.userFullName, this.reportCommentForm.value.reportedReason )\n      .subscribe();\n  }\n\n  async reportLoading() {\n    const loading = await this.loading.create({\n      message: 'Reporting comment...',\n      duration: 2000\n    });\n\n\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n    await this.modal.dismiss();\n    await this.confirmAlert();\n    console.log('Loading dismissed!');\n  }\n\n  async confirmAlert() {\n    const alert = await this.alert.create({\n      header: 'Report Sent',\n      cssClass: 'success-alert',\n      message: 'Thank you for reporting this user. Find Your Future will notifiy the user and take futher actions if necessary.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n\n  cancel() {\n    console.log('cancelling comment...');\n    this.modal.dismiss();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PostPagePage } from './post-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostPagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PostPagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CustomComponentsModule } from '../../../components/custom-component.module';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PostPagePage } from './post-page.page';\nimport { PostPagePageRoutingModule } from './post-page-routing.module';\nimport { ReplyCommentPageModule } from 'src/app/modals/reply-comment/reply-comment.module';\nimport { ReportCommentPageModule } from 'src/app/modals/report-comment/report-comment.module';\nimport { EditCommentPageModule } from 'src/app/modals/edit-comment/edit-comment.module';\nimport { EditPostPageModule } from 'src/app/modals/edit-post/edit-post.module';\nimport { RepliesPagePageModule } from 'src/app/modals/replies-page/replies-page.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    PostPagePageRoutingModule,\n    CustomComponentsModule,\n    ReplyCommentPageModule,\n    ReportCommentPageModule,\n    EditCommentPageModule,\n    EditPostPageModule,\n    RepliesPagePageModule\n  ],\n  declarations: [PostPagePage]\n})\nexport class PostPagePageModule {}\n","import { Component, OnInit, ViewChild, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { PostsService } from 'src/app/services/post.service';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n// tslint:disable-next-line: max-line-length\nimport { ToastController, AlertController, ModalController, IonContent, LoadingController, IonTextarea } from '@ionic/angular';\nimport { formatDistanceToNow } from 'date-fns';\nimport { ReplyCommentPage } from 'src/app/modals/reply-comment/reply-comment.page';\nimport { ReportCommentPage } from 'src/app/modals/report-comment/report-comment.page';\nimport { EditCommentPage } from 'src/app/modals/edit-comment/edit-comment.page';\nimport { EditPostPage } from 'src/app/modals/edit-post/edit-post.page';\nimport { PostPageEmitterService } from 'src/app/emitters/post-page-emitter.service';\nimport { RepliesPagePage } from 'src/app/modals/replies-page/replies-page.page';\nimport { PlatformLocation } from '@angular/common';\nimport { SinglePostPageEmitterService } from 'src/app/emitters/single-post-page-emitter.service';\nimport { Subscription } from 'rxjs';\n\n\nconst LANGUAGE_FILTER_LIST = [\n  'fuck',\n  'damn',\n  'shit',\n  'ass',\n  'bitch',\n  'slut',\n  'whore',\n  'dick',\n  'pussy',\n  'cunt',\n  'faggot'\n]\n\n@Component({\n  selector: 'app-post-page',\n  templateUrl: './post-page.page.html',\n  styleUrls: ['./post-page.page.scss'],\n})\nexport class PostPagePage implements OnInit, OnDestroy {\n\n  @ViewChild(IonContent, {static: true}) content: IonContent;\n  @ViewChild(IonTextarea, {static: true}) textarea: IonTextarea;\n  @ViewChild('footerCommentInput', {static: true}) footerCommentInput: IonTextarea;\n\n  tabBar = document.getElementById('myTabBar');\n  votes = document.getElementById('votes');\n\n  userEmail: string;\n  userFullName: string;\n  userProfilePicture: string;\n  showFab = false;\n  following = false;\n  isUser = false;\n\n  title: string;\n  post: string;\n  comments;\n  followers: [];\n  hashtags: [];\n  date: string;\n  creatorEmail: string;\n  creatorName: string;\n  creatorProfilePicture: string;\n  commentID: string;\n  postID: string;\n\n  // debugging\n  scroll = '';\n  commentForm: FormGroup;\n  // Footer Comment\n  commentInputValue: any;\n\n  postInfoSub: Subscription;\n  commentsSub: Subscription;\n  postsSub: Subscription;\n  userDetailsSub: Subscription;\n  deletePostSub: Subscription;\n  deleteCommentSub: Subscription;\n  unfollowPostSub: Subscription;\n  followPostSub: Subscription;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private postEmitterService: PostPageEmitterService,\n    private singlePostEmitterService: SinglePostPageEmitterService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private posts: PostsService,\n    private profile: ProfileService,\n    private formBuilder: FormBuilder,\n    private toast: ToastController,\n    private modal: ModalController,\n    private alert: AlertController,\n    private loading: LoadingController,\n    private location: PlatformLocation\n    ) { }\n\n  ngOnDestroy() {\n    this.singlePostEmitterService.subsVar.unsubscribe();\n    this.commentsSub.unsubscribe();\n    this.postsSub.unsubscribe();\n    this.userDetailsSub.unsubscribe();\n    this.postInfoSub.unsubscribe();\n    // this.deletePostSub.unsubscribe();\n    // this.deleteCommentSub.unsubscribe();\n    // this.unfollowPostSub.unsubscribe();\n    // this.followPostSub.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.location.onPopState(() => {\n      this.postEmitterService.onBackAction();\n    });\n\n    // Get Post ID from navigation params on the main posts tab\n    const id  = this.activatedRoute.snapshot.paramMap.get('_id');\n    this.postID = id;\n\n    // Get the user's information to insert into the comment metadata\n    this.getPostInfo();\n\n    if (this.singlePostEmitterService.subsVar == undefined) {\n\n      // For Comment and Reply Refreshes\n      this.singlePostEmitterService.subsVar = this.singlePostEmitterService.invokeSinglePostPageRefresh.subscribe(() => {\n        this.getPostInfo();\n        console.log('Refreshing Replies');\n      });\n    }\n\n\n    // To collect comment data\n    this.commentForm = this.formBuilder.group({\n      comment: ['']\n    });\n\n\n    // Subscribe to comments Behavior subject for live upates, specifically when the user posts a comment on the UI.\n    this.commentsSub = this.posts.commentsSubject$.subscribe(commentsFromSub => {\n      this.comments = commentsFromSub;\n    });\n\n    this.postsSub = this.posts.postsSubject$.subscribe(posts => {\n      let currentPost;\n      console.log(posts);\n\n      for (const post of posts) {\n        if (post._id == this.postID) {\n          currentPost = post;\n        }\n      }\n      this.post = currentPost.post;\n    });\n  }\n\n  back() {\n    this.postEmitterService.onBackAction();\n    this.router.navigate(['/home/posts']);\n  }\n\n  refreshAfterComment() {\n    this.postEmitterService.postPageRefresh();\n  }\n\n  refreshAfterDelete() {\n    this.postEmitterService.postPageRefresh();\n  }\n\n  refreshAfterFollow() {\n    this.postEmitterService.postPageRefresh();\n  }\n\n\n  async follow(postID) {\n    this.followPostSub = this.posts.followPost(postID, this.userEmail);\n    this.following = true;\n    await this.followToast();\n  }\n\n  async followToast() {\n    const followToast = await this.toast.create({\n      cssClass: 'followed-toast',\n      message: 'You are FOLLOWING this post',\n      duration: 2000\n    });\n    // await this.refreshAfterFollow();\n    await this.refreshAfterDelete();\n    await followToast.present();\n  }\n\n  async unFollow(postID) {\n    this.unfollowPostSub = this.posts.unFollowPost(postID, this.userEmail);\n    this.following = false;\n    await this.unFollowToast();\n  }\n\n  async unFollowToast() {\n    const unFollowToast = await this.toast.create({\n      cssClass: 'unfollowed-toast',\n      message: 'You are UNFOLLOWING this post',\n      duration: 2000\n    });\n    // await this.refreshAfterFollow();\n    await this.refreshAfterDelete();\n    await unFollowToast.present();\n  }\n\n  logScrolling(event) {\n\n    // if (event.detail) {\n    //   console.log('ScrollTop: ' + event.detail.scrollTop);\n    //   console.log('Y: ' + event.detail.currentY);\n    //   console.log('Event Details: ' + event.detail);\n    // }\n\n    if (event.detail.currentY >= 480) {\n      this.showFab = true;\n    }\n\n    if (event.detail.currentY <= 480) {\n      this.showFab = false;\n    }\n\n  }\n\n  // Hide the Tab bar when the user is attempting to make a comment\n  ScrollToTop() {\n    this.content.scrollToPoint(0, 200, 100);\n    this.tabBar.style.height = '0px';\n    this.votes.style.height = '0px';\n  }\n\n  fabScrollTop() {\n    this.content.scrollToTop();\n  }\n\n  // When the user submits the comment, the tabar will show up again\n  ScrollToPostedComment() {\n    this.content.scrollToPoint(0, 600, 100);\n    this.textarea.getInputElement()\n      .then((textarea: HTMLTextAreaElement) => {\n        textarea.blur();\n\n    });\n  }\n\n  onBlur() {\n    this.textarea.getInputElement()\n      .then((textarea: HTMLTextAreaElement) => {\n        this.tabBar.style.height = '70px';\n    });\n  }\n  // for when the user un focuses out of the comment textarea but hasnt submitted the comment\n  blur() {\n    this.textarea.getInputElement()\n      .then((textarea: HTMLTextAreaElement) => {\n        textarea.blur();\n        this.tabBar.style.height = '70px';\n    });\n  }\n  filterComments() {\n    \n  }\n  commentInput(e) {\n    console.log(e.detail.value);\n    this.commentInputValue = e.detail.value;\n  }\n  async comment(postID, userFullName, userEmail, userProfilePicture, comment, fromFooterInput) {\n    // Values from Footer Input and Desktop inputs are different.\n    // Making a standardized values to send to commentLoading()\n    let checkedComment;\n    if(!fromFooterInput) {\n      checkedComment = comment.comment\n    } else {\n      checkedComment = comment\n    }\n    // Reset Comment Input\n    console.log(this.footerCommentInput)\n    this.footerCommentInput.value = null;\n    this.commentLoading(postID, userFullName, userEmail, userProfilePicture, checkedComment);\n    const toast = this.toast.create({\n      message: 'Your comment has been added.',\n      duration: 1500\n    });\n\n    toast.then(toast => toast.present());\n  }\n\n  async commentLoading(postID, userFullName, userEmail, userProfilePicture, comment) {\n    console.log(comment);\n    \n    this.postsSub = this.posts.comment(\n      postID,\n      userFullName,\n      userEmail,\n      userProfilePicture,\n      comment\n    ).subscribe( data => {\n      this.postInfoSub = this.posts.getPostInfo(this.postID).subscribe(\n        post => {\n          for (let postComments of post['comments']) {\n\n            console.log(postComments);\n\n            postComments.isUser = false;\n            postComments.canDeleteComment = false;\n            postComments.canReport = true;\n\n              // If this comment is from the logged in user, they can delete and edit\n            if (postComments.userEmail === this.userEmail) {\n                postComments.isUser = true;\n                postComments.canDeleteComment = true;\n                postComments.canReport = false;\n              }\n\n            postComments.repliesLength = postComments.replies.length;\n            postComments.date = formatDistanceToNow( new Date(postComments.date), {\n              includeSeconds: true,\n              addSuffix: false\n            });\n\n            console.log(postComments.comment);\n          }\n\n          this.posts.commentsSubject$.next(post['comments'].reverse());\n        });\n    });\n\n    const loading = await this.loading.create({\n      message: 'Adding Comment...',\n      duration: 1000\n    });\n    await this.refreshAfterComment();\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n  }\n  async report(commentID, commentCotents, post, postID, commentUserFullName, commentUserProfilePicture, commentUserEmail, commentDate) {\n    // Get information from comment\n    await console.log('Attemping to report comment');\n    // tslint:disable-next-line: max-line-length\n    await this.reportModal(commentID, commentCotents, post, postID, commentUserFullName, commentUserProfilePicture, commentUserEmail, commentDate, this.userEmail, this.userFullName);\n\n  }\n  async reportModal(commentID, commentContents, post, postID, commentUserFullName, commentUserProfilePicture, commentUserEmail, commentDate, userEmail, userFullName) {\n\n    const reportModalConfig = await this.modal.create({\n    component: ReportCommentPage,\n    componentProps: {\n      commentID,\n      commentContents,\n      post,\n      postID,\n      commentUserFullName,\n      commentUserProfilePicture,\n      commentUserEmail,\n      commentDate,\n      userEmail,\n      userFullName,\n    }\n    });\n\n    await reportModalConfig.present();\n  }\n  async reply(commentID, userFullName, userEmail, userProfilePicture, commentUserFullName, commentUserEmail, comment) {\n    await console.log('Attemping to reply to comment');\n    await this.replyModal(commentID, this.postID, userFullName, userEmail, userProfilePicture, commentUserFullName, commentUserEmail, comment);\n  }\n  async replyModal(commentID, postID, userFullName, userEmail, userProfilePicture, commentUserFullName, commentUserEmail, comment) {\n    const replyModalConfig = await this.modal.create({\n      component: ReplyCommentPage,\n      componentProps: {\n        commentID,\n        postID,\n        userFullName,\n        userProfilePicture,\n        userEmail,\n        commentUserEmail,\n        commentUserFullName,\n        comment\n      },\n      cssClass: 'reply-modal'\n    });\n\n    await replyModalConfig.present();\n  }\n  // tslint:disable-next-line: max-line-length\n  async repliesModal(postID, replies, comment, commentID, commentUserFullName, commentUserEmail, commentDate, userProfilePicture, userFullName, userEmail) {\n    const repliesPageModalConfig = await this.modal.create({\n      component: RepliesPagePage,\n      componentProps: {\n        postID,\n        replies,\n        comment,\n        commentID,\n        commentUserFullName,\n        commentUserEmail,\n        commentDate,\n        userProfilePicture,\n        userFullName,\n        userEmail\n      },\n      cssClass: 'reply-modal'\n    });\n\n    await repliesPageModalConfig.present();\n  }\n  async editComment(commentID, commentCotents, postID, userEmail) {\n    await console.log(commentID);\n    await console.log('Attemping to edit comment');\n    await this.editCommentModal(commentID,commentCotents, postID, userEmail);\n  }\n  async editCommentModal(commentID, commentCotents, postID, userEmail) {\n    const editAlertConfig = await this.modal.create({\n    component: EditCommentPage,\n    componentProps: {\n      commentID,\n      commentCotents,\n      postID,\n      userEmail\n    }\n    });\n\n    await editAlertConfig.present();\n  }\n  async editPost(postID, post) {\n\n    await console.log('Attemping to edit comment');\n    await this.editPostModal(postID, post);\n  }\n  async editPostModal(postID, post) {\n    const editPostModalConfig = await this.modal.create({\n    component: EditPostPage,\n    componentProps: {\n      postID,\n      post\n    }\n    });\n\n    await editPostModalConfig.present();\n  }\n  async deleteComment(commentID) {\n    console.log('deleting comment..');\n    console.log(this.postID);\n    console.log(commentID);\n    this.deleteCommentAlert(this.postID, commentID);\n  }\n  async deleteCommentAlert(postID, commentID) {\n    const alert = await this.alert.create({\n      header: 'Are you sure you want to delete this comment? This cannot be undone.',\n      cssClass: 'danger-alert',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: (blah) => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Delete',\n          handler: () => {\n            this.deleteCommentLoading(this.postID, commentID)\n            .catch((err) => {\n                console.log(err);\n            });\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n  async deleteCommentLoading(postID, commentID) {\n\n    this.deleteCommentSub = this.posts.deleteComment(this.postID, commentID).subscribe(\n       values  => {\n        let comments = values['comments'];\n\n        for (const comment of comments) {\n\n          // If the Logged in User's Email equals the creatorEmail of the Comment,\n          // they will be given the ability to edit and delete their Comment.\n          // The ability for them to report their own comment is disabled\n\n          comment.repliesLength = comment.replies.length;\n          comment.isUser = false;\n          comment.canDeleteComment = false;\n          comment.canReport = true;\n          comment.date = formatDistanceToNow( new Date(comment.date), {\n            includeSeconds: false,\n            addSuffix: false\n          });\n\n          // If this comment is the logged in user, they can delete and edit\n          if (comment.userEmail === this.userEmail) {\n            console.log('true');\n            comment.isUser = true;\n            comment.canDeleteComment = true;\n            comment.canReport = false;\n          }\n       }\n\n        this.posts.commentsSubject$.next(comments.reverse());\n      }\n\n    );\n\n    const loading = await this.loading.create({\n      message: 'Deleting Comment...',\n      duration: 2000\n    });\n\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n    console.log('Loading dismissed!');\n    this.changeDetectorRef.detectChanges();\n  }\n  async deletePost(postID) {\n    console.log('deleting post..');\n    console.log(postID);\n    this.deletePostAlert(postID);\n  }\n  async deletePostAlert(postID) {\n    const alert = await this.alert.create({\n      header: 'Are you sure you want to delete this post? This cannot be undone.',\n      cssClass: 'danger-alert',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: (blah) => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Delete',\n          handler: async () => {\n            await this.deletePostLoading(postID);\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n  async deletePostLoading(postID) {\n    console.log(postID);\n    this.deletePostSub = this.posts.deletePost(postID).subscribe(\n      remainingPosts => {\n        this.posts.postsSubject$.next(Object.values(remainingPosts).reverse());\n        console.log(this.posts.postsSubject$.getValue());\n      }\n    );\n\n    this.postEmitterService.onBackAction();\n    this.router.navigate(['/home/posts']);\n    console.log('Loading dismissed!');\n\n    const loading = await this.loading.create({\n      message: 'Deleting Comment...',\n      duration: 2000\n    });\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n  }\n  getPostInfo() {\n    this.userDetailsSub = this.profile.getUserDetails().subscribe(\n      details => {\n        let userEmail = details['email'];\n        this.userEmail = userEmail;\n        let userFullName = details['fullName'];\n        let userProfilePicture = details['profilePicture'];\n\n        // Get information about selected post.\n        // Format its date on the front end\n        // initiate this components post metadata from data in Posts Service\n        this.postInfoSub = this.posts.getPostInfo(this.postID).subscribe(\n          postInfo =>  {\n            const creatorEmail = postInfo['creatorEmail'];\n            const creatorName = postInfo['creatorName'];\n            const creatorProfilePicture = postInfo['creatorProfilePicture'];\n            const title = postInfo['title'];\n            const post = postInfo['post'];\n            const followers = postInfo['followers'];\n            const hashtags = postInfo['hashtags'];\n            let comments = postInfo['comments'];\n            let following = false;\n            let date = formatDistanceToNow(\n              new Date(postInfo['date']), {\n                includeSeconds: true,\n                addSuffix: false\n              });\n\n            // Check if the post creator is the same as the User\n            // Enables the user to delete and edit post if true\n            if (creatorEmail === this.userEmail) {\n               this.isUser = true;\n            }\n\n            // See if the Logged in User is following the post on this page\n            followers.find(findFollower);\n\n            function findFollower(follower) {\n              if (!follower) {\n              }\n\n              if (follower === userEmail) {\n                following = true;\n              }\n          }\n\n            // Give User ability to Edit, Delete, or Report a Comment.\n            // User cannot Report their own comment **\n            for (const comment of comments) {\n              console.log(comment);\n\n              // If the Logged in User's Email equals the creatorEmail of the Comment,\n              // they will be given the ability to edit and delete their Comment.\n              // The ability for them to report their own comment is disabled\n\n              comment.repliesLength = comment.replies.length;\n              comment.isUser = false;\n              comment.canDeleteComment = false;\n              comment.canReport = true;\n              comment.date = formatDistanceToNow( new Date(comment.date), {\n                includeSeconds: false,\n                addSuffix: false\n              });\n\n              // If this comment is the logged in user, they can delete and edit\n              if (comment.userEmail === this.userEmail) {\n                comment.isUser = true;\n                comment.canDeleteComment = true;\n                comment.canReport = false;\n              }\n\n              // Format the Reply Dates\n              for (let i = 0; comment.replies.length > i; i++) {\n                comment.replies[i].date = formatDistanceToNow( new Date(comment.replies[i].date), {\n                  addSuffix: false\n                });\n              }\n             // comment.comment = comment.comment.replace(/go/g, \"not go :(\");\n\n           }\n\n            this.creatorName = creatorName;\n            this.creatorEmail = creatorEmail;\n            this.creatorProfilePicture = creatorProfilePicture;\n            this.date = date;\n            this.followers = followers;\n            this.hashtags = hashtags;\n            this.comments = comments;\n            this.following = following;\n            this.post = post;\n            this.title = title;\n            this.userProfilePicture = userProfilePicture;\n            this.userFullName = userFullName;\n          }\n        );\n      }\n    );\n  }\n  filterLanguage(comment) {\n    const updatedComment = comment;\n    updatedComment.replace('fuck',  '****');\n    // LANGUAGE_FILTER_LIST.forEach(word => {\n    //   comment.replace(word, '****');\n    // });\n\n    return updatedComment;\n  }\n  async doRefresh(event) {\n    this.userDetailsSub = this.profile.getUserDetails().subscribe(\n      details => {\n        let userEmail = details['email'];\n        this.userEmail = userEmail;\n        let userFullName = details['fullName'];\n        let userProfilePicture = details['profilePicture'];\n\n        // Get information about selected post.\n        // Format its date on the front end\n        // initiate this components post metadata from data in Posts Service\n        this.postInfoSub = this.posts.getPostInfo(this.postID).subscribe(\n          postInfo =>  {\n            const creatorEmail = postInfo['creatorEmail'];\n            const creatorName = postInfo['creatorName'];\n            const post = postInfo['post'];\n            const title = postInfo['title'];\n            const followers = postInfo['followers'];\n            let comments = postInfo['comments'];\n            let following = false;\n            let date = formatDistanceToNow(\n              new Date(postInfo['date']), {\n                includeSeconds: true,\n                addSuffix: false\n              });\n\n            // See if the Logged in User is following the post on this page\n            followers.find(findFollower);\n\n            function findFollower(follower) {\n              if (!follower) {\n              }\n\n              if (follower === userEmail) {\n                following = true;\n              }\n          }\n\n            // Give User ability to Edit, Delete, or Report a Comment.\n            // User cannot Report their own comment **\n            for (const comment of comments) {\n\n              // If the Logged in User's Email equals the creatorEmail of the Comment,\n              // they will be given the ability to edit and delete their Comment.\n              // The ability for them to report their own comment is disabled\n\n              comment.repliesLength = comment.replies.length;\n              comment.isUser = false;\n              comment.canDeleteComment = false;\n              comment.canReport = true;\n              comment.date = formatDistanceToNow( new Date(comment.date), {\n                includeSeconds: true,\n                addSuffix: false\n              });\n\n              // If this comment is the logged in user, they can delete and edit\n              if (comment.userEmail === this.userEmail) {\n                comment.isUser = true;\n                comment.canDeleteComment = true;\n                comment.canReport = false;\n              }\n\n              // Format the Reply Dates\n              for (let i = 0; comment.replies.length > i; i++) {\n                comment.replies[i].date = formatDistanceToNow( new Date(comment.replies[i].date), {\n                  addSuffix: false\n                });\n              }\n\n              comment.comment = this.filterLanguage(comment.comment);\n              // comment.comment = comment.comment.replace(/go/g, \"not go :(\");\n\n           }\n\n            this.creatorName = creatorName;\n            this.creatorEmail = creatorEmail;\n            this.date = date;\n            this.followers = followers;\n            this.comments = comments;\n            this.following = following;\n            this.post = post;\n            this.title = title;\n            this.userProfilePicture = userProfilePicture;\n            this.userFullName = userFullName;\n\n            this.posts.commentsSubject$.next(comments.reverse());\n\n          }\n        );\n      }\n    );\n\n    await setTimeout(() => {\n      const toast = this.toast.create({\n        message: 'Page has been refreshed',\n        duration: 3000\n      });\n      event.target.complete();\n      toast.then(toast => toast.present());\n    }, 2000);\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}