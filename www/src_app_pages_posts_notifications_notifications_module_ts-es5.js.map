{"version":3,"mappings":"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","names":["routes","path","component","_notifications_page__WEBPACK_IMPORTED_MODULE_0__","NotificationsPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","NotificationsPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_notifications_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_notifications_page__WEBPACK_IMPORTED_MODULE_1__","NotificationsPage","notifications","profile","toast","router","notificationsSub","unsubscribe","initSub","getUserDetails","subscribe","userEmail","userDetails","getNotifications","console","log","allNotifications","Object","values","length","noNotifications","notifications$","next","n","date","Date","includeSeconds","addSuffix","clearNotifications","data","clearedToast","create","message","cssClass","duration","present","navigateByUrl","e","notiID","Error","deleteNotification","deletedToast","src_app_services_notifications_service__WEBPACK_IMPORTED_MODULE_2__","src_app_services_profile_service__WEBPACK_IMPORTED_MODULE_3__","_angular_router__WEBPACK_IMPORTED_MODULE_7__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/pages/posts/notifications/notifications-routing.module.ts","webpack:///src/app/pages/posts/notifications/notifications.module.ts","webpack:///src/app/pages/posts/notifications/notifications.page.ts","webpack:///src/app/pages/posts/notifications/notifications.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotificationsPage } from './notifications.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificationsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationsPageRoutingModule } from './notifications-routing.module';\n\nimport { NotificationsPage } from './notifications.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NotificationsPageRoutingModule\n  ],\n  declarations: [NotificationsPage]\n})\nexport class NotificationsPageModule {}\n","import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { NotificationsService } from 'src/app/services/notifications.service';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.page.html',\n  styleUrls: ['./notifications.page.scss'],\n})\nexport class NotificationsPage implements OnInit, OnDestroy {\n  userEmail;\n  allNotifications;\n  noNotifications = false;\n  initSub: Subscription;\n  notificationsSub: Subscription;\n\n  constructor(\n    private notifications: NotificationsService,\n    private profile: ProfileService,\n    private toast: ToastController,\n    private router: Router\n  ) { }\n\n  ngOnDestroy() {\n    this.notificationsSub.unsubscribe();\n  }\n  ngOnInit() {\n    this.initSub = this.profile.getUserDetails()\n      .subscribe(\n        userDetails => {\n          this.userEmail = userDetails['email'];\n          this.notificationsSub = this.notifications.getNotifications(this.userEmail)\n            .subscribe(\n              notifications => {\n                  console.log(notifications);\n                  this.allNotifications = Object.values(notifications);\n                  // Track if No Notifications\n                  if (this.allNotifications.length <= 0 || this.allNotifications === []) {\n                    this.noNotifications = true;\n                  } else {\n                    this.noNotifications = false;\n                  }\n                  this.notifications.notifications$.next(Object.values(notifications));\n                  this.notifications.notifications$.subscribe( data => {\n                    for (let n of this.allNotifications) {\n                    n.date = formatDistanceToNow( new Date(n.date), {\n                      includeSeconds: true,\n                      addSuffix: false\n                    });\n                    this.allNotifications = Object.values(notifications);\n                    console.log(this.allNotifications)\n                  }\n                });\n\n                  // TODO: replaces 'minutes' with M\n                  // let minutes = ;\n                }\n            );\n        }\n      );\n  }\n  clear() {\n    this.notifications.clearNotifications(this.userEmail)\n    .subscribe(\n      data => {\n\n        this.notificationsSub = this.notifications.getNotifications(this.userEmail)\n          .subscribe(\n            notifications => {\n                console.log(notifications);\n                this.notifications.notifications$.next(Object.values(notifications));\n                this.notifications.notifications$.subscribe( data => {\n                  this.allNotifications = Object.values(data);\n                  for (let n of this.allNotifications) {\n                  n.date = formatDistanceToNow( new Date(n.date), {\n                    includeSeconds: true,\n                    addSuffix: false\n                  });\n                }\n                // Track if No Notifications\n                if (this.allNotifications.length <= 0 || this.allNotifications === []) {\n                  this.noNotifications = true;\n                } else {\n                  this.noNotifications = false;\n                  this.clearedToast();\n                }\n              });\n\n                // TODO: replaces 'minutes' with M\n                // let minutes = ;\n              }\n          );\n      }\n    );\n  }\n  async clearedToast() {\n    const toast = await this.toast.create({\n      message: 'Cleared Notifications.',\n      cssClass: 'danger-toast',\n      duration: 2000\n    });\n    await toast.present();\n  }\n  back() {\n    this.router.navigateByUrl('home/posts');\n  }\n  goTo() {\n    console.log('Going to page from notification');\n  }\n  async deleteSwipe(e, notiID) {\n    console.log(e)\n    if(!e) {\n      throw Error('No Swipe Event returned.')\n    } else {\n      console.log('Delete Swipe ... ');\n      await this.deleteNotification(notiID);\n      await this.deletedToast();\n    }\n  }\n  deleteNotification(notiID) {\n    this.notifications.deleteNotification(this.userEmail, notiID).subscribe(\n      data => {\n        console.log(data)\n        this.allNotifications = Object.values(data);;\n        for (let n of this.allNotifications) {\n          n.date = formatDistanceToNow( new Date(n.date), {\n            includeSeconds: true,\n            addSuffix: false\n          });\n          console.log(this.allNotifications)\n        }\n        // Track if No Notifications\n        if (this.allNotifications.length <= 0 || this.allNotifications === []) {\n          this.noNotifications = true;\n        } else {\n          this.noNotifications = false;\n        }\n      });\n  }\n  async deletedToast() {\n    const toast = await this.toast.create({\n      message: 'Deleted.',\n      cssClass: 'danger-toast',\n      duration: 2000\n    });\n    toast.present();\n  }\n}\n","export default \" <!-- Mobile Toolbar -->\\n <ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n      <ion-title>Notifications</ion-title>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button id=\\\"clear-button\\\" (click)=\\\"clear()\\\">\\n        Clear\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n\\n  <!-- No Messages -->\\n  <ion-row *ngIf=\\\"noNotifications\\\" class=\\\"ion-justify-content-center\\\">\\n    <ion-col class=\\\"margin-top ion-text-center\\\" size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n      <h3 id=\\\"no-notifications\\\">You have no notifications</h3>\\n      <img id=\\\"icon\\\" src=\\\"../../../../assets/icons/no-notifications-icon.svg\\\" alt=\\\"\\\">\\n    </ion-col>\\n  </ion-row>\\n\\n  <ion-row *ngIf=\\\"!noNotifications\\\" class=\\\"ion-justify-content-center\\\">\\n    <ion-col size-xs=\\\"12\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n      <!-- List of Sliding Items -->\\n      <ion-list>\\n        <ion-item-sliding (click)=\\\"goTo()\\\" *ngFor=\\\"let n of allNotifications\\\">\\n          <ion-item lines=\\\"none\\\">\\n            <ion-avatar>\\n              <img [src]=\\\"n.instigatingUserProfilePicture\\\" />\\n            </ion-avatar>\\n            <p id=\\\"message\\\">{{n.message}}</p>\\n            <p id=\\\"date\\\">{{n.date}}</p>\\n          </ion-item>\\n          <ion-item-options (ionSwipe)=\\\"deleteSwipe($event, n.notiID)\\\" side=\\\"end\\\">\\n            <ion-item-option  id=\\\"delete-noti\\\">Slide left to Delete</ion-item-option>\\n          </ion-item-options>\\n        </ion-item-sliding>\\n      </ion-list>\\n    </ion-col>\\n  </ion-row>\\n\\n\\n\\n</ion-content>\\n\";"]}