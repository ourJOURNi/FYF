{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAM6B,cAAc,GAAG,CAAvB;AACA,MAAMC,mBAAmB,GAAG,CAA5B;AACA,MAAMC,oBAAoB,GAAG,CAA7B;;AACA,MAAMC,cAAN,CAAqB;EACnBC,WAAW,CAACC,SAAD,EAAYC,MAAZ,EAAoB;IAC7B,KAAKD,SAAL,GAAiBA,SAAjB;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA,KAAKC,KAAL,GAAaP,cAAb;EACD;;EACKQ,IAAI,CAACC,SAAD,EAAY;IAAA;;IAAA;MACpB,KAAI,CAACF,KAAL,GAAaN,mBAAb;;MACA,IAAI,CAAC,KAAI,CAACS,OAAV,EAAmB;QACjB,MAAML,SAAS,GAAG,KAAI,CAACA,SAAvB;QACA,KAAI,CAACK,OAAL,SAAqBX,kEAAe,CAAC,KAAI,CAACY,QAAN,EAAgBF,SAAhB,EAA2BJ,SAA3B,EAAsC,CAAC,UAAD,EAAa,oBAAb,CAAtC,EAA0E,KAAI,CAACC,MAA/E,CAApC;MACD;IALmB;EAMrB;EACD;AACF;AACA;;;EACEM,QAAQ,GAAG;IACT3B,uDAAM,CAAC,KAAKsB,KAAL,KAAeL,oBAAhB,EAAsC,6BAAtC,CAAN;IACA,MAAMQ,OAAO,GAAG,KAAKA,OAArB;;IACA,IAAIA,OAAJ,EAAa;MACX,IAAI,KAAKC,QAAT,EAAmB;QACjB,KAAKA,QAAL,CAAcE,iBAAd,CAAgCH,OAAO,CAACI,aAAxC,EAAuDJ,OAAvD;MACD,CAFD,MAGK;QACHA,OAAO,CAACK,MAAR;MACD;IACF;;IACD,KAAKC,GAAL,GAAWC,SAAX;IACA,KAAKV,KAAL,GAAaL,oBAAb;EACD;;AA7BkB;;AA+BrB,MAAMgB,OAAO,GAAG,CAACC,IAAD,EAAOC,EAAP,EAAWd,MAAX,KAAsB;EACpC,IAAI,CAACa,IAAL,EAAW;IACT,OAAO,KAAP;EACD;;EACD,IAAIA,IAAI,CAACd,SAAL,KAAmBe,EAAvB,EAA2B;IACzB,OAAO,KAAP;EACD;;EACD,MAAMC,aAAa,GAAGF,IAAI,CAACb,MAA3B;;EACA,IAAIe,aAAa,KAAKf,MAAtB,EAA8B;IAC5B,OAAO,IAAP;EACD;;EACD,IAAI,CAACe,aAAD,IAAkB,CAACf,MAAvB,EAA+B;IAC7B,OAAO,IAAP;EACD;;EACD,IAAI,CAACe,aAAD,IAAkB,CAACf,MAAvB,EAA+B;IAC7B,OAAO,KAAP;EACD;;EACD,MAAMgB,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,aAAZ,CAAd;EACA,MAAMI,KAAK,GAAGF,MAAM,CAACC,IAAP,CAAYlB,MAAZ,CAAd;;EACA,IAAIgB,KAAK,CAACI,MAAN,KAAiBD,KAAK,CAACC,MAA3B,EAAmC;IACjC,OAAO,KAAP;EACD,CArBmC,CAsBpC;;;EACA,KAAK,MAAMC,GAAX,IAAkBL,KAAlB,EAAyB;IACvB,IAAID,aAAa,CAACM,GAAD,CAAb,KAAuBrB,MAAM,CAACqB,GAAD,CAAjC,EAAwC;MACtC,OAAO,KAAP;IACD;EACF;;EACD,OAAO,IAAP;AACD,CA7BD;;AA8BA,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOvB,MAAP,KAAkB;EACtC,IAAI,CAACuB,IAAL,EAAW;IACT,OAAO,IAAP;EACD;;EACD,IAAIA,IAAI,YAAY1B,cAApB,EAAoC;IAClC,OAAO0B,IAAP;EACD;;EACD,OAAO,IAAI1B,cAAJ,CAAmB0B,IAAnB,EAAyBvB,MAAzB,CAAP;AACD,CARD;;AASA,MAAMwB,cAAc,GAAIC,KAAD,IAAW;EAChC,OAAOA,KAAK,CAACC,GAAN,CAAUH,IAAI,IAAI;IACvB,IAAIA,IAAI,YAAY1B,cAApB,EAAoC;MAClC,OAAO0B,IAAP;IACD;;IACD,IAAI,eAAeA,IAAnB,EAAyB;MACvB;AACN;AACA;AACA;AACA;AACA;AACA;MACM,OAAOD,aAAa,CAACC,IAAI,CAACxB,SAAN,EAAkBwB,IAAI,CAACI,cAAL,KAAwB,IAAzB,GAAiChB,SAAjC,GAA6CY,IAAI,CAACI,cAAnE,CAApB;IACD;;IACD,OAAOL,aAAa,CAACC,IAAD,EAAOZ,SAAP,CAApB;EACD,CAfM,EAeJiB,MAfI,CAeGC,CAAC,IAAIA,CAAC,KAAK,IAfd,CAAP;AAgBD,CAjBD;;AAmBA,MAAMC,MAAM,GAAG,4GAAf;AAEA,MAAMC,GAAG,GAAG,MAAM;EAChBjC,WAAW,CAACkC,OAAD,EAAU;IACnBlE,qDAAgB,CAAC,IAAD,EAAOkE,OAAP,CAAhB;IACA,KAAKC,cAAL,GAAsBjE,qDAAW,CAAC,IAAD,EAAO,gBAAP,EAAyB,CAAzB,CAAjC;IACA,KAAKkE,gBAAL,GAAwBlE,qDAAW,CAAC,IAAD,EAAO,kBAAP,EAA2B,CAA3B,CAAnC;IACA,KAAKmE,eAAL,GAAuBnE,qDAAW,CAAC,IAAD,EAAO,iBAAP,EAA0B,CAA1B,CAAlC;IACA,KAAKoE,UAAL,GAAkB,EAAlB;IACA,KAAKC,gBAAL,GAAwB,IAAxB;IACA,KAAKC,SAAL,GAAiB,KAAjB;IACA,KAAKC,eAAL,GAAuB,KAAvB;IACA,KAAKC,SAAL,GAAiB,KAAjB;IACA,KAAKC,KAAL,GAAa,EAAb;IACA;AACJ;AACA;;IACI,KAAKC,QAAL,GAAgB,IAAhB;EACD;;EACDC,mBAAmB,GAAG;IACpB,IAAI,KAAKC,OAAT,EAAkB;MAChB,KAAKA,OAAL,CAAaC,MAAb,CAAoB,KAAKC,YAAL,KAAsB,IAA1C;IACD;EACF;;EACDC,WAAW,GAAG;IACZ,IAAI,KAAKC,IAAL,KAAcrC,SAAlB,EAA6B;MAC3B,IAAI,CAAC,KAAK2B,SAAV,EAAqB;QACnB,KAAKW,OAAL,CAAa,KAAKD,IAAlB,EAAwB,KAAKE,UAA7B;MACD;IACF;EACF;;EACDC,iBAAiB,GAAG;IAClB,KAAKb,SAAL,GACE,CAAC,CAACc,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAF,IACE,CAAC,KAAKC,EAAL,CAAQC,OAAR,CAAgB,aAAhB,CAFL;;IAGA,IAAI,KAAKT,YAAL,KAAsBnC,SAA1B,EAAqC;MACnC,MAAM6C,IAAI,GAAGjF,4DAAU,CAAC,IAAD,CAAvB;MACA,KAAKuE,YAAL,GAAoBrE,mEAAA,CAAkB,kBAAlB,EAAsC+E,IAAI,KAAK,KAA/C,CAApB;IACD;;IACD,KAAKvB,cAAL,CAAoByB,IAApB;EACD;;EACKC,gBAAgB,GAAG;IAAA;;IAAA;MACvB,MAAI,CAACZ,WAAL;;MACA,MAAI,CAACH,OAAL,GAAe,OAAO,2LAAP,EAA2CgB,sBAA3C,CAAkE,MAAI,CAACN,EAAvE,EAA2E,MAAI,CAACO,QAAL,CAAcC,IAAd,CAAmB,MAAnB,CAA3E,EAAqG,MAAI,CAACC,OAAL,CAAaD,IAAb,CAAkB,MAAlB,CAArG,EAA8H,MAAI,CAACE,MAAL,CAAYF,IAAZ,CAAiB,MAAjB,CAA9H,EAAsJ,MAAI,CAACG,KAAL,CAAWH,IAAX,CAAgB,MAAhB,CAAtJ,CAAf;;MACA,MAAI,CAACnB,mBAAL;IAHuB;EAIxB;;EACDuB,oBAAoB,GAAG;IACrB,KAAK,MAAMrD,IAAX,IAAmB,KAAK4B,KAAxB,EAA+B;MAC7B5D,qDAAS,CAACgC,IAAI,CAACT,OAAN,EAAejB,iDAAf,CAAT;;MACA0B,IAAI,CAACP,QAAL;IACD;;IACD,IAAI,KAAKsC,OAAT,EAAkB;MAChB,KAAKA,OAAL,CAAauB,OAAb;MACA,KAAKvB,OAAL,GAAejC,SAAf;IACD,CARoB,CASrB;;;IACA,KAAKyB,UAAL,CAAgBhB,MAAhB,GAAyB,KAAKqB,KAAL,CAAWrB,MAAX,GAAoB,CAA7C;IACA,KAAKoB,SAAL,GAAiB,IAAjB;EACD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACE4B,IAAI,CAACrE,SAAD,EAAY4B,cAAZ,EAA4B0C,IAA5B,EAAkCC,IAAlC,EAAwC;IAC1C,OAAO,KAAKC,SAAL,CAAe;MACpBC,WAAW,EAAE,CAAC,CADM;MAEpBC,WAAW,EAAE,CAAC;QAAE1E,SAAF;QAAa4B;MAAb,CAAD,CAFO;MAGpB0C;IAHoB,CAAf,EAIJC,IAJI,CAAP;EAKD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEI,MAAM,CAACC,WAAD,EAAc5E,SAAd,EAAyB4B,cAAzB,EAAyC0C,IAAzC,EAA+CC,IAA/C,EAAqD;IACzD,OAAO,KAAKC,SAAL,CAAe;MACpBC,WAAW,EAAEG,WADO;MAEpBF,WAAW,EAAE,CAAC;QAAE1E,SAAF;QAAa4B;MAAb,CAAD,CAFO;MAGpB0C;IAHoB,CAAf,EAIJC,IAJI,CAAP;EAKD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEM,WAAW,CAACD,WAAD,EAAcE,gBAAd,EAAgCR,IAAhC,EAAsCC,IAAtC,EAA4C;IACrD,OAAO,KAAKC,SAAL,CAAe;MACpBC,WAAW,EAAEG,WADO;MAEpBF,WAAW,EAAEI,gBAFO;MAGpBR;IAHoB,CAAf,EAIJC,IAJI,CAAP;EAKD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;;;EACEQ,GAAG,CAACT,IAAD,EAAOC,IAAP,EAAa;IACd,OAAO,KAAKC,SAAL,CAAe;MACpBQ,WAAW,EAAE,CAAC,CADM;MAEpBC,WAAW,EAAE,CAFO;MAGpBX;IAHoB,CAAf,EAIJC,IAJI,CAAP;EAKD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;;;EACEW,KAAK,CAACC,eAAD,EAAkBb,IAAlB,EAAwBC,IAAxB,EAA8B;IACjC,MAAMa,QAAQ,GAAG;MACfJ,WAAW,EAAE,CAAC,CADC;MAEfC,WAAW,EAAE,CAAC,CAFC;MAGfX;IAHe,CAAjB;;IAKA,IAAI,OAAOa,eAAP,KAA2B,QAA3B,IAAuCA,eAAe,CAACnF,SAA3D,EAAsE;MACpEoF,QAAQ,CAACC,UAAT,GAAsBF,eAAtB;MACAC,QAAQ,CAACJ,WAAT,GAAuB,CAAvB;IACD,CAHD,MAIK,IAAI,OAAOG,eAAP,KAA2B,QAA/B,EAAyC;MAC5CC,QAAQ,CAACJ,WAAT,GAAuBG,eAAe,GAAG,CAAzC;IACD;;IACD,OAAO,KAAKX,SAAL,CAAeY,QAAf,EAAyBb,IAAzB,CAAP;EACD;EACD;AACF;AACA;AACA;AACA;AACA;;;EACEe,SAAS,CAAChB,IAAD,EAAOC,IAAP,EAAa;IACpB,OAAO,KAAKC,SAAL,CAAe;MACpBQ,WAAW,EAAE,CADO;MAEpBC,WAAW,EAAE,CAAC,CAFM;MAGpBX;IAHoB,CAAf,EAIJC,IAJI,CAAP;EAKD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEgB,WAAW,CAACC,UAAD,EAAaP,WAAW,GAAG,CAA3B,EAA8BX,IAA9B,EAAoCC,IAApC,EAA0C;IACnD,OAAO,KAAKC,SAAL,CAAe;MACpBQ,WAAW,EAAEQ,UADO;MAEpBP,WAFoB;MAGpBX;IAHoB,CAAf,EAIJC,IAJI,CAAP;EAKD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;EACErB,OAAO,CAAClD,SAAD,EAAY4B,cAAZ,EAA4B0C,IAA5B,EAAkCC,IAAlC,EAAwC;IAC7C,OAAO,KAAKkB,QAAL,CAAc,CAAC;MAAEzF,SAAF;MAAa4B;IAAb,CAAD,CAAd,EAA+C0C,IAA/C,EAAqDC,IAArD,CAAP;EACD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEkB,QAAQ,CAAC/C,KAAD,EAAQ4B,IAAR,EAAcC,IAAd,EAAoB;IAC1B,IAAID,IAAI,IAAI,IAAZ,EAAkB;MAChBA,IAAI,GAAG,EAAP;IACD,CAHyB,CAI1B;;;IACA,IAAIA,IAAI,CAAC3B,QAAL,KAAkB,IAAtB,EAA4B;MAC1B2B,IAAI,CAAC3B,QAAL,GAAgB,KAAhB;IACD;;IACD,OAAO,KAAK6B,SAAL,CAAe;MACpBC,WAAW,EAAE,CADO;MAEpBC,WAAW,EAAEhC,KAFO;MAGpBsC,WAAW,EAAE,CAHO;MAIpBC,WAAW,EAAE,CAAC,CAJM;MAKpBX;IALoB,CAAf,EAMJC,IANI,CAAP;EAOD;EACD;;;EACAmB,UAAU,CAAC3E,EAAD,EAAKd,MAAL,EAAa0F,SAAb,EAAwBC,SAAxB,EAAmC;IAC3C,MAAMC,MAAM,GAAG,KAAKC,aAAL,EAAf;;IACA,IAAIjF,OAAO,CAACgF,MAAD,EAAS9E,EAAT,EAAad,MAAb,CAAX,EAAiC;MAC/B,OAAO8F,OAAO,CAACC,OAAR,CAAgB;QACrBC,OAAO,EAAE,KADY;QAErB5F,OAAO,EAAEwF,MAAM,CAACxF;MAFK,CAAhB,CAAP;IAID;;IACD,IAAI2F,OAAJ;IACA,MAAME,OAAO,GAAG,IAAIH,OAAJ,CAAYjI,CAAC,IAAKkI,OAAO,GAAGlI,CAA5B,CAAhB;IACA,IAAIqI,MAAJ;IACA,MAAMC,UAAU,GAAG;MACjBC,SAAS,EAAE,KADM;MAEjBC,WAAW,EAAEC,UAAU,IAAI;QACzB,IAAIC,IAAJ;QACA,MAAMC,CAAC,GAAG,IAAIV,OAAJ,CAAYjI,CAAC,IAAK0I,IAAI,GAAG1I,CAAzB,CAAV;QACAkI,OAAO,CAAC;UACNC,OAAO,EAAE,IADH;UAEN5F,OAAO,EAAEkG,UAFH;UAGNG,WAAW;YAAA,2IAAE,aAAY;cACvBF,IAAI;cACJ,MAAML,MAAN;YACD,CAHU;;YAAA;cAAA;YAAA;UAAA;QAHL,CAAD,CAAP;QAQA,OAAOM,CAAP;MACD;IAdgB,CAAnB;;IAgBA,IAAId,SAAS,KAAK,MAAlB,EAA0B;MACxBQ,MAAM,GAAG,KAAKjD,OAAL,CAAanC,EAAb,EAAiBd,MAAjB,EAAyBmG,UAAzB,CAAT;IACD,CAFD,MAGK;MACH,MAAMO,cAAc,GAAG,KAAKjE,KAAL,CAAWkE,IAAX,CAAgB9E,CAAC,IAAIjB,OAAO,CAACiB,CAAD,EAAIf,EAAJ,EAAQd,MAAR,CAA5B,CAAvB;;MACA,IAAI0G,cAAJ,EAAoB;QAClBR,MAAM,GAAG,KAAKjB,KAAL,CAAWyB,cAAX,EAA2BzF,MAAM,CAAC2F,MAAP,CAAc3F,MAAM,CAAC2F,MAAP,CAAc,EAAd,EAAkBT,UAAlB,CAAd,EAA6C;UAAET,SAAS,EAAE,MAAb;UAAqBmB,gBAAgB,EAAElB;QAAvC,CAA7C,CAA3B,CAAT;MACD,CAFD,MAGK,IAAID,SAAS,KAAK,SAAlB,EAA6B;QAChCQ,MAAM,GAAG,KAAK9B,IAAL,CAAUtD,EAAV,EAAcd,MAAd,EAAsBiB,MAAM,CAAC2F,MAAP,CAAc3F,MAAM,CAAC2F,MAAP,CAAc,EAAd,EAAkBT,UAAlB,CAAd,EAA6C;UAAEU,gBAAgB,EAAElB;QAApB,CAA7C,CAAtB,CAAT;MACD,CAFI,MAGA,IAAID,SAAS,KAAK,MAAlB,EAA0B;QAC7BQ,MAAM,GAAG,KAAKjD,OAAL,CAAanC,EAAb,EAAiBd,MAAjB,EAAyBiB,MAAM,CAAC2F,MAAP,CAAc3F,MAAM,CAAC2F,MAAP,CAAc,EAAd,EAAkBT,UAAlB,CAAd,EAA6C;UAAET,SAAS,EAAE,MAAb;UAAqBhD,QAAQ,EAAE,IAA/B;UAAqCmE,gBAAgB,EAAElB;QAAvD,CAA7C,CAAzB,CAAT;MACD;IACF;;IACD,OAAOM,OAAP;EACD;EACD;;;EACMa,UAAU,GAAG;IAAA;;IAAA;MACjB,MAAMlB,MAAM,GAAG,MAAI,CAACC,aAAL,EAAf;;MACA,OAAOD,MAAM,GACT;QACA9E,EAAE,EAAE8E,MAAM,CAACxF,OAAP,CAAe2G,OADnB;QAEA/G,MAAM,EAAE4F,MAAM,CAAC5F,MAFf;QAGAI,OAAO,EAAEwF,MAAM,CAACxF;MAHhB,CADS,GAMTO,SANJ;IAFiB;EASlB;EACD;AACF;AACA;;;EACEqG,SAAS,GAAG;IACV,OAAOlB,OAAO,CAACC,OAAR,CAAgB,KAAKF,aAAL,EAAhB,CAAP;EACD;EACD;AACF;AACA;AACA;AACA;;;EACEoB,UAAU,CAACC,KAAD,EAAQ;IAChB,OAAOpB,OAAO,CAACC,OAAR,CAAgB,KAAKtD,KAAL,CAAWyE,KAAX,CAAhB,CAAP;EACD;EACD;AACF;AACA;AACA;AACA;;;EACEC,SAAS,CAACtG,IAAD,EAAO;IACd,OAAOiF,OAAO,CAACC,OAAR,CAAgB,KAAKqB,aAAL,CAAmBvG,IAAnB,CAAhB,CAAP;EACD;EACD;AACF;AACA;AACA;AACA;;;EACEwG,WAAW,CAACxG,IAAD,EAAO;IAChB,OAAOiF,OAAO,CAACC,OAAR,CAAgB,KAAKuB,eAAL,CAAqBzG,IAArB,CAAhB,CAAP;EACD;;EACD0G,SAAS,GAAG;IACV,OAAO,KAAK9E,KAAL,CAAWrB,MAAlB;EACD;;EACDyE,aAAa,GAAG;IACd,OAAO,KAAKpD,KAAL,CAAW,KAAKA,KAAL,CAAWrB,MAAX,GAAoB,CAA/B,CAAP;EACD;;EACDgG,aAAa,CAACvG,IAAI,GAAG,KAAKgF,aAAL,EAAR,EAA8B;IACzC,OAAO,CAAC,EAAEhF,IAAI,IAAI,KAAKyG,eAAL,CAAqBzG,IAArB,CAAV,CAAR;EACD;;EACDyG,eAAe,CAACzG,IAAI,GAAG,KAAKgF,aAAL,EAAR,EAA8B;IAC3C,IAAI,CAAChF,IAAL,EAAW;MACT,OAAOF,SAAP;IACD;;IACD,MAAM8B,KAAK,GAAG,KAAKA,KAAnB;IACA,MAAMyE,KAAK,GAAGzE,KAAK,CAAC+E,OAAN,CAAc3G,IAAd,CAAd;IACA,OAAOqG,KAAK,GAAG,CAAR,GAAYzE,KAAK,CAACyE,KAAK,GAAG,CAAT,CAAjB,GAA+BvG,SAAtC;EACD,CAvTe,CAwThB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACM4D,SAAS,CAACkD,EAAD,EAAKnD,IAAL,EAAW;IAAA;;IAAA;MACxB,IAAI,MAAI,CAAC/B,eAAL,IAAwBkF,EAAE,CAACpD,IAAH,IAAW,IAAnC,IAA2CoD,EAAE,CAACpD,IAAH,CAAQqD,UAAvD,EAAmE;QACjE,OAAO5B,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;MACD;;MACD,MAAME,OAAO,GAAG,IAAIH,OAAJ,CAAY,CAACC,OAAD,EAAU4B,MAAV,KAAqB;QAC/CF,EAAE,CAAC1B,OAAH,GAAaA,OAAb;QACA0B,EAAE,CAACE,MAAH,GAAYA,MAAZ;MACD,CAHe,CAAhB;MAIAF,EAAE,CAACnD,IAAH,GAAUA,IAAV;MACA;AACJ;AACA;AACA;AACA;AACA;;MACI,IAAImD,EAAE,CAACpD,IAAH,IAAWoD,EAAE,CAACpD,IAAH,CAAQ+B,SAAR,KAAsB,KAAjC,IAA0C,MAAI,CAAC9D,SAAnD,EAA8D;QAC5D,MAAMsF,MAAM,GAAGxE,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAf;;QACA,IAAIuE,MAAJ,EAAY;UACV,MAAMC,aAAa,SAASD,MAAM,CAACC,aAAP,EAA5B;;UACA,IAAIA,aAAa,KAAK,KAAtB,EAA6B;YAC3B,OAAO/B,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;UACD,CAFD,MAGK,IAAI,OAAO8B,aAAP,KAAyB,QAA7B,EAAuC;YAC1CD,MAAM,CAACxD,IAAP,CAAYyD,aAAZ,EAA2BJ,EAAE,CAACpD,IAAH,CAAQqB,SAAR,IAAqB,MAAhD;YACA,OAAOI,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;UACD;QACF;MACF,CA3BuB,CA4BxB;;;MACA,IAAI0B,EAAE,CAAChD,WAAH,IAAkBgD,EAAE,CAAChD,WAAH,CAAerD,MAAf,KAA0B,CAAhD,EAAmD;QACjDqG,EAAE,CAAChD,WAAH,GAAiB9D,SAAjB;MACD,CA/BuB,CAgCxB;;;MACA,MAAI,CAACyB,UAAL,CAAgBgC,IAAhB,CAAqBqD,EAArB,EAjCwB,CAkCxB;MACA;;;MACA,MAAI,CAACK,QAAL;;MACA,OAAO7B,OAAP;IArCwB;EAsCzB;;EACD8B,OAAO,CAACC,MAAD,EAASP,EAAT,EAAa;IAClB,IAAI,KAAKjF,SAAT,EAAoB;MAClB,KAAKyF,SAAL,CAAe,8BAAf,EAA+CR,EAA/C;MACA;IACD;;IACD,IAAIA,EAAE,CAACnD,IAAP,EAAa;MACXmD,EAAE,CAACnD,IAAH,CAAQ0D,MAAM,CAACE,YAAf,EAA6BF,MAAM,CAACG,kBAApC,EAAwDH,MAAM,CAACI,YAA/D,EAA6EJ,MAAM,CAACK,WAApF,EAAiGL,MAAM,CAACtC,SAAxG;IACD;;IACD+B,EAAE,CAAC1B,OAAH,CAAWiC,MAAM,CAACE,YAAlB;;IACA,IAAIT,EAAE,CAACpD,IAAH,CAAQ+B,SAAR,KAAsB,KAAtB,IAA+B,KAAK9D,SAAxC,EAAmD;MACjD,MAAMsF,MAAM,GAAGxE,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAf;;MACA,IAAIuE,MAAJ,EAAY;QACV,MAAMlC,SAAS,GAAGsC,MAAM,CAACtC,SAAP,KAAqB,MAArB,GAA8B,MAA9B,GAAuC,SAAzD;QACAkC,MAAM,CAACU,UAAP,CAAkB5C,SAAlB;MACD;IACF;EACF;;EACD6C,MAAM,CAACC,YAAD,EAAef,EAAf,EAAmB;IACvB,IAAI,KAAKjF,SAAT,EAAoB;MAClB,KAAKyF,SAAL,CAAe,8BAAf,EAA+CR,EAA/C;MACA;IACD;;IACD,KAAKrF,UAAL,CAAgBhB,MAAhB,GAAyB,CAAzB;IACA,KAAK6G,SAAL,CAAeO,YAAf,EAA6Bf,EAA7B;EACD;;EACDQ,SAAS,CAACO,YAAD,EAAef,EAAf,EAAmB;IAC1B,IAAIA,EAAE,CAACnD,IAAP,EAAa;MACXmD,EAAE,CAACnD,IAAH,CAAQ,KAAR,EAAe,KAAf,EAAsBkE,YAAtB;IACD;;IACD,IAAIf,EAAE,CAACE,MAAH,IAAa,CAAC,KAAKnF,SAAvB,EAAkC;MAChCiF,EAAE,CAACE,MAAH,CAAUa,YAAV;IACD,CAFD,MAGK;MACHf,EAAE,CAAC1B,OAAH,CAAW,KAAX;IACD;EACF;;EACD+B,QAAQ,GAAG;IACT;IACA;IACA,IAAI,KAAKvF,eAAT,EAA0B;MACxB,OAAO,KAAP;IACD,CALQ,CAMT;IACA;;;IACA,MAAMkF,EAAE,GAAG,KAAKrF,UAAL,CAAgBqG,KAAhB,EAAX;;IACA,IAAI,CAAChB,EAAL,EAAS;MACP,OAAO,KAAP;IACD;;IACD,KAAKiB,aAAL,CAAmBjB,EAAnB;IACA,OAAO,IAAP;EACD;;EACKiB,aAAa,CAACjB,EAAD,EAAK;IAAA;;IAAA;MACtB,IAAI;QACF;QACA,MAAI,CAACvF,gBAAL,CAAsBwB,IAAtB;;QACA,MAAI,CAACnB,eAAL,GAAuB,IAAvB;;QACA,MAAI,CAACoG,SAAL,CAAelB,EAAf;;QACA,MAAMY,WAAW,GAAG,MAAI,CAACxC,aAAL,EAApB;;QACA,MAAMuC,YAAY,GAAG,MAAI,CAACQ,eAAL,CAAqBnB,EAArB,EAAyBY,WAAzB,CAArB;;QACA,IAAI,CAACA,WAAD,IAAgB,CAACD,YAArB,EAAmC;UACjC,MAAM,IAAIS,KAAJ,CAAU,qCAAV,CAAN;QACD;;QACD,IAAIT,YAAY,IAAIA,YAAY,CAACnI,KAAb,KAAuBP,cAA3C,EAA2D;UACzD,MAAM0I,YAAY,CAAClI,IAAb,CAAkB,MAAI,CAACoD,EAAvB,CAAN;QACD;;QACD,MAAI,CAACwF,YAAL,CAAkBV,YAAlB,EAAgCC,WAAhC,EAA6CZ,EAA7C,EAbE,CAcF;;;QACA,MAAMU,kBAAkB,GAAG,CAACV,EAAE,CAACsB,0BAAH,IAAiCtB,EAAE,CAACuB,yBAArC,KACzBZ,YAAY,KAAKC,WADnB;;QAEA,IAAIF,kBAAkB,IAAIV,EAAE,CAACpD,IAAzB,IAAiCgE,WAArC,EAAkD;UAChD,MAAMY,eAAe,GAAGxB,EAAE,CAACpD,IAAH,CAAQqB,SAAR,KAAsB,MAA9C;UACA;AACR;AACA;AACA;;UACQ,IAAIuD,eAAJ,EAAqB;YACnBxB,EAAE,CAACpD,IAAH,CAAQwC,gBAAR,GAA2BY,EAAE,CAACpD,IAAH,CAAQwC,gBAAR,IAA6BuB,YAAY,IAAIA,YAAY,CAACvB,gBAArF;UACD;;UACDwB,WAAW,CAACxB,gBAAZ,GAA+BY,EAAE,CAACpD,IAAH,CAAQwC,gBAAvC;QACD;;QACD,MAAMmB,MAAM,GAAGG,kBAAkB,SACvB,MAAI,CAACpJ,UAAL,CAAgBqJ,YAAhB,EAA8BC,WAA9B,EAA2CZ,EAA3C,CADuB,GAE7B;UACA;UACA;UACA;UACA;UACAS,YAAY,EAAE,IALd;UAMAC,kBAAkB,EAAE;QANpB,CAFJ;;QAUA,MAAI,CAACJ,OAAL,CAAaC,MAAb,EAAqBP,EAArB;;QACA,MAAI,CAACtF,eAAL,CAAqBuB,IAArB;MACD,CAxCD,CAyCA,OAAO8E,YAAP,EAAqB;QACnB,MAAI,CAACD,MAAL,CAAYC,YAAZ,EAA0Bf,EAA1B;MACD;;MACD,MAAI,CAAClF,eAAL,GAAuB,KAAvB;;MACA,MAAI,CAACuF,QAAL;IA9CsB;EA+CvB;;EACDa,SAAS,CAAClB,EAAD,EAAK;IACZ,MAAMyB,WAAW,GAAG,KAAKzG,KAAL,CAAWrB,MAA/B;IACAqG,EAAE,CAACpD,IAAH,GAAUoD,EAAE,CAACpD,IAAH,IAAW,EAArB;;IACA,IAAIoD,EAAE,CAACpD,IAAH,CAAQhE,QAAR,KAAqBM,SAAzB,EAAoC;MAClC8G,EAAE,CAACpD,IAAH,CAAQhE,QAAR,GAAmB,KAAKA,QAAxB;IACD;;IACD,IAAIoH,EAAE,CAACrC,UAAH,KAAkBzE,SAAtB,EAAiC;MAC/BhC,uDAAM,CAAC8I,EAAE,CAAC1C,WAAH,KAAmBpE,SAApB,EAA+B,8BAA/B,CAAN;MACAhC,uDAAM,CAAC8I,EAAE,CAACzC,WAAH,KAAmBrE,SAApB,EAA+B,8BAA/B,CAAN;MACA,MAAMuG,KAAK,GAAG,KAAKzE,KAAL,CAAW+E,OAAX,CAAmBC,EAAE,CAACrC,UAAtB,CAAd;;MACA,IAAI8B,KAAK,GAAG,CAAZ,EAAe;QACb,MAAM,IAAI2B,KAAJ,CAAU,0BAAV,CAAN;MACD;;MACDpB,EAAE,CAAC1C,WAAH,IAAkBmC,KAAlB;IACD;;IACD,IAAIO,EAAE,CAAC1C,WAAH,KAAmBpE,SAAvB,EAAkC;MAChC,IAAI8G,EAAE,CAAC1C,WAAH,GAAiB,CAArB,EAAwB;QACtB0C,EAAE,CAAC1C,WAAH,GAAiBmE,WAAW,GAAG,CAA/B;MACD;;MACD,IAAIzB,EAAE,CAACzC,WAAH,GAAiB,CAArB,EAAwB;QACtByC,EAAE,CAACzC,WAAH,GAAiBkE,WAAW,GAAGzB,EAAE,CAAC1C,WAAlC;MACD;;MACD0C,EAAE,CAACuB,yBAAH,GACEvB,EAAE,CAACzC,WAAH,GAAiB,CAAjB,IAAsByC,EAAE,CAAC1C,WAAH,GAAiB0C,EAAE,CAACzC,WAApB,KAAoCkE,WAD5D;IAED;;IACD,IAAIzB,EAAE,CAAChD,WAAP,EAAoB;MAClB;MACA;MACA,IAAIgD,EAAE,CAACjD,WAAH,GAAiB,CAAjB,IAAsBiD,EAAE,CAACjD,WAAH,GAAiB0E,WAA3C,EAAwD;QACtDzB,EAAE,CAACjD,WAAH,GAAiB0E,WAAjB;MACD;;MACDzB,EAAE,CAACsB,0BAAH,GAAgCtB,EAAE,CAACjD,WAAH,KAAmB0E,WAAnD;IACD;;IACD,MAAMzE,WAAW,GAAGgD,EAAE,CAAChD,WAAvB;;IACA,IAAI,CAACA,WAAL,EAAkB;MAChB;IACD;;IACD9F,uDAAM,CAAC8F,WAAW,CAACrD,MAAZ,GAAqB,CAAtB,EAAyB,wBAAzB,CAAN;IACA,MAAM+H,eAAe,GAAG3H,cAAc,CAACiD,WAAD,CAAtC;;IACA,IAAI0E,eAAe,CAAC/H,MAAhB,KAA2B,CAA/B,EAAkC;MAChC,MAAM,IAAIyH,KAAJ,CAAU,yBAAV,CAAN;IACD,CAzCW,CA0CZ;;;IACA,KAAK,MAAMhI,IAAX,IAAmBsI,eAAnB,EAAoC;MAClCtI,IAAI,CAACR,QAAL,GAAgBoH,EAAE,CAACpD,IAAH,CAAQhE,QAAxB;MACA,MAAMK,GAAG,GAAGG,IAAI,CAACH,GAAjB;;MACA,IAAIA,GAAG,IAAIA,GAAG,KAAK,IAAnB,EAAyB;QACvB,MAAM,IAAImI,KAAJ,CAAU,oCAAV,CAAN;MACD;;MACD,IAAIhI,IAAI,CAACZ,KAAL,KAAeL,oBAAnB,EAAyC;QACvC,MAAM,IAAIiJ,KAAJ,CAAU,qCAAV,CAAN;MACD;IACF;;IACDpB,EAAE,CAAChD,WAAH,GAAiB0E,eAAjB;EACD;;EACDP,eAAe,CAACnB,EAAD,EAAKY,WAAL,EAAkB;IAC/B,MAAM5D,WAAW,GAAGgD,EAAE,CAAChD,WAAvB;;IACA,IAAIA,WAAW,KAAK9D,SAApB,EAA+B;MAC7B;MACA;MACA,OAAO8D,WAAW,CAACA,WAAW,CAACrD,MAAZ,GAAqB,CAAtB,CAAlB;IACD;;IACD,MAAM2D,WAAW,GAAG0C,EAAE,CAAC1C,WAAvB;;IACA,IAAIA,WAAW,KAAKpE,SAApB,EAA+B;MAC7B,MAAM8B,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAM2G,SAAS,GAAGrE,WAAW,GAAG0C,EAAE,CAACzC,WAAnC;;MACA,KAAK,IAAI9G,CAAC,GAAGuE,KAAK,CAACrB,MAAN,GAAe,CAA5B,EAA+BlD,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;QAC1C,MAAM2C,IAAI,GAAG4B,KAAK,CAACvE,CAAD,CAAlB;;QACA,IAAI,CAACA,CAAC,GAAG6G,WAAJ,IAAmB7G,CAAC,IAAIkL,SAAzB,KAAuCvI,IAAI,KAAKwH,WAApD,EAAiE;UAC/D,OAAOxH,IAAP;QACD;MACF;IACF;;IACD,OAAOF,SAAP;EACD;;EACDmI,YAAY,CAACV,YAAD,EAAeC,WAAf,EAA4BZ,EAA5B,EAAgC;IAC1C9I,uDAAM,CAAC0J,WAAW,IAAID,YAAhB,EAA8B,4CAA9B,CAAN;IACAzJ,uDAAM,CAAC8I,EAAE,CAAC1B,OAAJ,EAAa,uBAAb,CAAN;IACApH,uDAAM,CAAC8I,EAAE,CAACE,MAAJ,EAAY,sBAAZ,CAAN;IACA,MAAMtD,IAAI,GAAGoD,EAAE,CAACpD,IAAhB;IACA,MAAMI,WAAW,GAAGgD,EAAE,CAAChD,WAAvB;IACA,MAAMM,WAAW,GAAG0C,EAAE,CAAC1C,WAAvB;IACA,MAAMC,WAAW,GAAGyC,EAAE,CAACzC,WAAvB;IACA,IAAIqE,YAAJ,CAR0C,CAS1C;;IACA,IAAItE,WAAW,KAAKpE,SAAhB,IAA6BqE,WAAW,KAAKrE,SAAjD,EAA4D;MAC1DhC,uDAAM,CAACoG,WAAW,IAAI,CAAhB,EAAmB,iCAAnB,CAAN;MACApG,uDAAM,CAACqG,WAAW,IAAI,CAAhB,EAAmB,iCAAnB,CAAN;MACAqE,YAAY,GAAG,EAAf;;MACA,KAAK,IAAInL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8G,WAApB,EAAiC9G,CAAC,EAAlC,EAAsC;QACpC,MAAM2C,IAAI,GAAG,KAAK4B,KAAL,CAAWvE,CAAC,GAAG6G,WAAf,CAAb;;QACA,IAAIlE,IAAI,IAAIA,IAAI,KAAKuH,YAAjB,IAAiCvH,IAAI,KAAKwH,WAA9C,EAA2D;UACzDgB,YAAY,CAACjF,IAAb,CAAkBvD,IAAlB;QACD;MACF,CATyD,CAU1D;;;MACAwD,IAAI,CAACqB,SAAL,GAAiBrB,IAAI,CAACqB,SAAL,IAAkB,MAAnC;IACD;;IACD,MAAM4D,YAAY,GAAG,KAAK7G,KAAL,CAAWrB,MAAX,IAClBqD,WAAW,KAAK9D,SAAhB,GAA4B8D,WAAW,CAACrD,MAAxC,GAAiD,CAD/B,KAElB4D,WAAW,KAAKrE,SAAhB,GAA4BqE,WAA5B,GAA0C,CAFxB,CAArB;IAGArG,uDAAM,CAAC2K,YAAY,IAAI,CAAjB,EAAoB,mCAApB,CAAN;;IACA,IAAIA,YAAY,KAAK,CAArB,EAAwB;MACtBC,OAAO,CAACC,IAAR,CAAc,sGAAd,EAAqH,IAArH,EAA2H,KAAKlG,EAAhI;MACA,MAAM,IAAIuF,KAAJ,CAAU,+CAAV,CAAN;IACD,CA9ByC,CA+B1C;IACA;;;IACA,IAAIpE,WAAJ,EAAiB;MACf;MACA,IAAIE,WAAW,GAAG8C,EAAE,CAACjD,WAArB;;MACA,KAAK,MAAM3D,IAAX,IAAmB4D,WAAnB,EAAgC;QAC9B,KAAKgF,YAAL,CAAkB5I,IAAlB,EAAwB8D,WAAxB;QACAA,WAAW;MACZ;;MACD,IAAI8C,EAAE,CAACsB,0BAAP,EAAmC;QACjC;QACA1E,IAAI,CAACqB,SAAL,GAAiBrB,IAAI,CAACqB,SAAL,IAAkB,SAAnC;MACD;IACF,CA5CyC,CA6C1C;IACA;IACA;IACA;IACA;;;IACA,IAAI2D,YAAY,IAAIA,YAAY,CAACjI,MAAb,GAAsB,CAA1C,EAA6C;MAC3C,KAAK,MAAMP,IAAX,IAAmBwI,YAAnB,EAAiC;QAC/BxK,qDAAS,CAACgC,IAAI,CAACT,OAAN,EAAehB,iDAAf,CAAT;QACAP,qDAAS,CAACgC,IAAI,CAACT,OAAN,EAAef,iDAAf,CAAT;QACAR,qDAAS,CAACgC,IAAI,CAACT,OAAN,EAAejB,iDAAf,CAAT;MACD,CAL0C,CAM3C;;;MACA,KAAK,MAAM0B,IAAX,IAAmBwI,YAAnB,EAAiC;QAC/B,KAAKK,WAAL,CAAiB7I,IAAjB;MACD;IACF;EACF;;EACK9B,UAAU,CAACqJ,YAAD,EAAeC,WAAf,EAA4BZ,EAA5B,EAAgC;IAAA;;IAAA;MAC9C;MACA;MACA,MAAMpD,IAAI,GAAGoD,EAAE,CAACpD,IAAhB;MACA,MAAMsF,gBAAgB,GAAGtF,IAAI,CAACuF,iBAAL,GACpBC,GAAD,IAAS,MAAI,CAACC,KAAL,GAAaD,GADD,GAErBlJ,SAFJ;MAGA,MAAM6C,IAAI,GAAGjF,4DAAU,CAAC,MAAD,CAAvB;MACA,MAAM+H,UAAU,GAAG8B,YAAY,CAAChI,OAAhC;MACA,MAAM2J,SAAS,GAAG1B,WAAW,IAAIA,WAAW,CAACjI,OAA7C;MACA,MAAM4J,aAAa,GAAG/I,MAAM,CAAC2F,MAAP,CAAc;QAAEpD,IAAF;QAAQyG,UAAU,EAAE,MAAI,CAAC7C,aAAL,CAAmBgB,YAAnB,CAApB;QAAsD8B,MAAM,EAAE,MAAI,CAAC5G,EAAnE;QAAuEuD,gBAAgB,EAAE,MAAI,CAAClB,SAAL,IAAkBtB,IAAI,CAACwC,gBAAvB,IAA2CpI,4DAAA,CAAW,cAAX,CAApI;QAAgKkL,gBAAhK;QAAkLjH,QAAQ,EAAE,MAAI,CAACA,QAAL,IAAiBjE,mEAAA,CAAkB,UAAlB,EAA8B,IAA9B,CAA7M;QAAkP6H,UAAlP;QAClCyD;MADkC,CAAd,EACP1F,IADO,CAAtB;MAEA,MAAM;QAAE6D;MAAF,UAAyBnJ,qDAAU,CAACiL,aAAD,CAAzC;MACA,OAAO,MAAI,CAACI,gBAAL,CAAsBlC,YAAtB,EAAoCE,YAApC,EAAkDC,WAAlD,EAA+DhE,IAA/D,CAAP;IAb8C;EAc/C;;EACD+F,gBAAgB,CAAClC,YAAD,EAAeE,YAAf,EAA6BC,WAA7B,EAA0ChE,IAA1C,EAAgD;IAC9D,MAAMgG,WAAW,GAAGnC,YAAY,GAAGE,YAAH,GAAkBC,WAAlD;;IACA,IAAIgC,WAAJ,EAAiB;MACf,KAAKC,OAAL,CAAaD,WAAb;IACD;;IACD,OAAO;MACLnC,YADK;MAELC,kBAAkB,EAAE,IAFf;MAGLC,YAHK;MAILC,WAJK;MAKL3C,SAAS,EAAErB,IAAI,CAACqB;IALX,CAAP;EAOD;;EACD+D,YAAY,CAAC5I,IAAD,EAAOqG,KAAP,EAAc;IACxB,MAAMzE,KAAK,GAAG,KAAKA,KAAnB;IACA,MAAM8H,aAAa,GAAG9H,KAAK,CAAC+E,OAAN,CAAc3G,IAAd,CAAtB;;IACA,IAAI0J,aAAa,GAAG,CAAC,CAArB,EAAwB;MACtB;MACA;MACA5L,uDAAM,CAACkC,IAAI,CAACH,GAAL,KAAa,IAAd,EAAoB,6BAApB,CAAN;MACA+B,KAAK,CAAC+H,MAAN,CAAatD,KAAb,EAAoB,CAApB,EAAuBzE,KAAK,CAAC+H,MAAN,CAAaD,aAAb,EAA4B,CAA5B,EAA+B,CAA/B,CAAvB;IACD,CALD,MAMK;MACH5L,uDAAM,CAAC,CAACkC,IAAI,CAACH,GAAP,EAAY,aAAZ,CAAN,CADG,CAEH;MACA;;MACAG,IAAI,CAACH,GAAL,GAAW,IAAX,CAJG,CAKH;;MACA+B,KAAK,CAAC+H,MAAN,CAAatD,KAAb,EAAoB,CAApB,EAAuBrG,IAAvB;IACD;EACF;;EACDuE,UAAU,CAACvE,IAAD,EAAO;IACflC,uDAAM,CAACkC,IAAI,CAACZ,KAAL,KAAeN,mBAAf,IAAsCkB,IAAI,CAACZ,KAAL,KAAeL,oBAAtD,EAA4E,0CAA5E,CAAN;IACA,MAAM6C,KAAK,GAAG,KAAKA,KAAnB;IACA,MAAMyE,KAAK,GAAGzE,KAAK,CAAC+E,OAAN,CAAc3G,IAAd,CAAd;IACAlC,uDAAM,CAACuI,KAAK,GAAG,CAAC,CAAV,EAAa,gCAAb,CAAN;;IACA,IAAIA,KAAK,IAAI,CAAb,EAAgB;MACdzE,KAAK,CAAC+H,MAAN,CAAatD,KAAb,EAAoB,CAApB;IACD;EACF;;EACDwC,WAAW,CAAC7I,IAAD,EAAO;IAChBA,IAAI,CAACP,QAAL;;IACA,KAAK8E,UAAL,CAAgBvE,IAAhB;EACD;EACD;AACF;AACA;;;EACEyJ,OAAO,CAACG,UAAD,EAAa;IAClB;IACA;IACA;IACA,IAAI,KAAKjI,SAAT,EAAoB;MAClB;IACD;;IACD,MAAMC,KAAK,GAAG,KAAKA,KAAnB;IACA,MAAMiI,eAAe,GAAGjI,KAAK,CAAC+E,OAAN,CAAciD,UAAd,CAAxB;;IACA,KAAK,IAAIvM,CAAC,GAAGuE,KAAK,CAACrB,MAAN,GAAe,CAA5B,EAA+BlD,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;MAC1C,MAAM2C,IAAI,GAAG4B,KAAK,CAACvE,CAAD,CAAlB;MACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;MACM,MAAMkC,OAAO,GAAGS,IAAI,CAACT,OAArB;;MACA,IAAIA,OAAJ,EAAa;QACX,IAAIlC,CAAC,GAAGwM,eAAR,EAAyB;UACvB;UACA;UACA7L,qDAAS,CAACuB,OAAD,EAAUjB,iDAAV,CAAT;UACA,KAAKuK,WAAL,CAAiB7I,IAAjB;QACD,CALD,MAMK,IAAI3C,CAAC,GAAGwM,eAAR,EAAyB;UAC5B;UACA;UACAzL,qDAAa,CAACmB,OAAD,EAAU,IAAV,CAAb;QACD;MACF;IACF;EACF;;EACDyD,QAAQ,GAAG;IACT,OAAQ,CAAC,CAAC,KAAKf,YAAP,IACN,CAAC,KAAKP,eADA,IAEN,KAAKH,UAAL,CAAgBhB,MAAhB,KAA2B,CAFrB,IAGN,KAAKiB,gBAHC,IAIN,KAAK+E,aAAL,EAJF;EAKD;;EACDrD,OAAO,GAAG;IACR,KAAKQ,SAAL,CAAe;MACbQ,WAAW,EAAE,CAAC,CADD;MAEbC,WAAW,EAAE,CAFA;MAGbX,IAAI,EAAE;QACJqB,SAAS,EAAE,MADP;QAEJkE,iBAAiB,EAAE;MAFf;IAHO,CAAf,EAOGjJ,SAPH;EAQD;;EACDqD,MAAM,CAAC2G,SAAD,EAAY;IAChB,IAAI,KAAKb,KAAT,EAAgB;MACd,KAAKA,KAAL,CAAWc,YAAX,CAAwBD,SAAxB;IACD;EACF;;EACD1G,KAAK,CAAC4G,cAAD,EAAiBF,SAAjB,EAA4BG,GAA5B,EAAiC;IACpC,IAAI,KAAKhB,KAAT,EAAgB;MACd,KAAKzH,gBAAL,GAAwB,KAAxB;MACA,KAAKyH,KAAL,CAAWiB,QAAX,CAAoB,MAAM;QACxB,KAAK1I,gBAAL,GAAwB,IAAxB;MACD,CAFD,EAEG;QAAE2I,eAAe,EAAE;MAAnB,CAFH,EAFc,CAKd;;MACA,IAAIC,YAAY,GAAIJ,cAAD,GAAmB,CAAC,KAApB,GAA4B,KAA/C;MACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;MACM,IAAI,CAACA,cAAL,EAAqB;QACnB,KAAKf,KAAL,CAAWoB,MAAX,CAAkB,gCAAlB;QACAD,YAAY,IAAI1L,4DAAuB,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,IAAD,EAAO,IAAP,CAAjB,EAA+B,CAAC,CAAD,EAAI,CAAJ,CAA/B,EAAuCoL,SAAvC,CAAvB,CAAyE,CAAzE,CAAhB;MACD,CAHD,MAIK;QACHM,YAAY,IAAI1L,4DAAuB,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,IAAD,EAAO,IAAP,CAAT,EAAuB,CAAC,CAAD,EAAI,CAAJ,CAAvB,EAA+B,CAAC,CAAD,EAAI,CAAJ,CAA/B,EAAuCoL,SAAvC,CAAvB,CAAyE,CAAzE,CAAhB;MACD;;MACD,KAAKb,KAAL,CAAWqB,WAAX,CAAuBN,cAAc,GAAG,CAAH,GAAO,CAA5C,EAA+CI,YAA/C,EAA6DH,GAA7D;IACD;EACF;;EACDM,MAAM,GAAG;IACP,OAAQnN,qDAAC,CAAC,MAAD,EAAS,IAAT,CAAT;EACD;;EACK,IAAFqF,EAAE,GAAG;IAAE,OAAOnF,qDAAU,CAAC,IAAD,CAAjB;EAA0B;;EAClB,WAARkN,QAAQ,GAAG;IAAE,OAAO;MAC7B,gBAAgB,CAAC,qBAAD,CADa;MAE7B,QAAQ,CAAC,aAAD;IAFqB,CAAP;EAGpB;;AA7uBY,CAAlB;AA+uBAtJ,GAAG,CAACuJ,KAAJ,GAAYxJ,MAAZ;;AAEA,MAAMyJ,OAAO,GAAG,CAACjI,EAAD,EAAKkI,eAAL,EAAsBzL,SAAtB,EAAiC4B,cAAjC,EAAiD8J,eAAjD,KAAqE;EACnF,MAAM/K,GAAG,GAAG4C,EAAE,CAACC,OAAH,CAAW,SAAX,CAAZ;;EACA,IAAI7C,GAAJ,EAAS;IACP,IAAI8K,eAAe,KAAK,SAAxB,EAAmC;MACjC,IAAIzL,SAAS,KAAKY,SAAlB,EAA6B;QAC3B,OAAOD,GAAG,CAAC0D,IAAJ,CAASrE,SAAT,EAAoB4B,cAApB,EAAoC;UAAE+F,UAAU,EAAE,IAAd;UAAoBb,gBAAgB,EAAE4E;QAAtC,CAApC,CAAP;MACD;IACF,CAJD,MAKK,IAAID,eAAe,KAAK,MAAxB,EAAgC;MACnC,IAAIzL,SAAS,KAAKY,SAAlB,EAA6B;QAC3B,OAAOD,GAAG,CAACuC,OAAJ,CAAYlD,SAAZ,EAAuB4B,cAAvB,EAAuC;UAAE+F,UAAU,EAAE,IAAd;UAAoBb,gBAAgB,EAAE4E;QAAtC,CAAvC,CAAP;MACD;IACF,CAJI,MAKA,IAAID,eAAe,KAAK,MAAxB,EAAgC;MACnC,OAAO9K,GAAG,CAACoE,GAAJ,CAAQ;QAAE4C,UAAU,EAAE,IAAd;QAAoBb,gBAAgB,EAAE4E;MAAtC,CAAR,CAAP;IACD;EACF;;EACD,OAAO3F,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACD,CAlBD;;AAoBA,MAAM2F,OAAO,GAAG,MAAM;EACpB5L,WAAW,CAACkC,OAAD,EAAU;IACnBlE,qDAAgB,CAAC,IAAD,EAAOkE,OAAP,CAAhB;IACA;AACJ;AACA;;IACI,KAAKwJ,eAAL,GAAuB,SAAvB;;IACA,KAAKG,OAAL,GAAe,MAAM;MACnB,OAAOJ,OAAO,CAAC,KAAKjI,EAAN,EAAU,KAAKkI,eAAf,EAAgC,KAAKzL,SAArC,EAAgD,KAAK4B,cAArD,EAAqE,KAAK8J,eAA1E,CAAd;IACD,CAFD;EAGD;;EACDL,MAAM,GAAG;IACP,OAAQnN,qDAAC,CAACI,iDAAD,EAAO;MAAEsN,OAAO,EAAE,KAAKA;IAAhB,CAAP,CAAT;EACD;;EACK,IAAFrI,EAAE,GAAG;IAAE,OAAOnF,qDAAU,CAAC,IAAD,CAAjB;EAA0B;;AAdjB,CAAtB","sources":["./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js"],"sourcesContent":["import { r as registerInstance, e as createEvent, h, i as getElement, H as Host } from './index-e806d1f6.js';\nimport { b as getIonMode, c as config } from './ionic-global-9d5c8ee3.js';\nimport { k as assert } from './helpers-90f46169.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-1eeeab2e.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { a as attachComponent } from './framework-delegate-4584ab5a.js';\n\nconst VIEW_STATE_NEW = 1;\nconst VIEW_STATE_ATTACHED = 2;\nconst VIEW_STATE_DESTROYED = 3;\nclass ViewController {\n  constructor(component, params) {\n    this.component = component;\n    this.params = params;\n    this.state = VIEW_STATE_NEW;\n  }\n  async init(container) {\n    this.state = VIEW_STATE_ATTACHED;\n    if (!this.element) {\n      const component = this.component;\n      this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\n    }\n  }\n  /**\n   * DOM WRITE\n   */\n  _destroy() {\n    assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n    const element = this.element;\n    if (element) {\n      if (this.delegate) {\n        this.delegate.removeViewFromDom(element.parentElement, element);\n      }\n      else {\n        element.remove();\n      }\n    }\n    this.nav = undefined;\n    this.state = VIEW_STATE_DESTROYED;\n  }\n}\nconst matches = (view, id, params) => {\n  if (!view) {\n    return false;\n  }\n  if (view.component !== id) {\n    return false;\n  }\n  const currentParams = view.params;\n  if (currentParams === params) {\n    return true;\n  }\n  if (!currentParams && !params) {\n    return true;\n  }\n  if (!currentParams || !params) {\n    return false;\n  }\n  const keysA = Object.keys(currentParams);\n  const keysB = Object.keys(params);\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n  // Test for A's keys different from B.\n  for (const key of keysA) {\n    if (currentParams[key] !== params[key]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst convertToView = (page, params) => {\n  if (!page) {\n    return null;\n  }\n  if (page instanceof ViewController) {\n    return page;\n  }\n  return new ViewController(page, params);\n};\nconst convertToViews = (pages) => {\n  return pages.map(page => {\n    if (page instanceof ViewController) {\n      return page;\n    }\n    if ('component' in page) {\n      /**\n       * TODO Ionic 6:\n       * Consider switching to just using `undefined` here\n       * as well as on the public interfaces and on\n       * `NavComponentWithProps`. Previously `pages` was\n       * of type `any[]` so TypeScript did not catch this.\n       */\n      return convertToView(page.component, (page.componentProps === null) ? undefined : page.componentProps);\n    }\n    return convertToView(page, undefined);\n  }).filter(v => v !== null);\n};\n\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\n\nconst Nav = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n    this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n    this.transInstr = [];\n    this.animationEnabled = true;\n    this.useRouter = false;\n    this.isTransitioning = false;\n    this.destroyed = false;\n    this.views = [];\n    /**\n     * If `true`, the nav should animate the transition of components.\n     */\n    this.animated = true;\n  }\n  swipeGestureChanged() {\n    if (this.gesture) {\n      this.gesture.enable(this.swipeGesture === true);\n    }\n  }\n  rootChanged() {\n    if (this.root !== undefined) {\n      if (!this.useRouter) {\n        this.setRoot(this.root, this.rootParams);\n      }\n    }\n  }\n  componentWillLoad() {\n    this.useRouter =\n      !!document.querySelector('ion-router') &&\n        !this.el.closest('[no-router]');\n    if (this.swipeGesture === undefined) {\n      const mode = getIonMode(this);\n      this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n    }\n    this.ionNavWillLoad.emit();\n  }\n  async componentDidLoad() {\n    this.rootChanged();\n    this.gesture = (await import('./swipe-back-2154c9a7.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n    this.swipeGestureChanged();\n  }\n  disconnectedCallback() {\n    for (const view of this.views) {\n      lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      view._destroy();\n    }\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    // release swipe back gesture and transition\n    this.transInstr.length = this.views.length = 0;\n    this.destroyed = true;\n  }\n  /**\n   * Push a new component onto the current navigation stack. Pass any additional\n   * information along as an object. This additional information is accessible\n   * through NavParams.\n   *\n   * @param component The component to push onto the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  push(component, componentProps, opts, done) {\n    return this.queueTrns({\n      insertStart: -1,\n      insertViews: [{ component, componentProps }],\n      opts\n    }, done);\n  }\n  /**\n   * Inserts a component into the navigation stack at the specified index.\n   * This is useful to add a component at any point in the navigation stack.\n   *\n   * @param insertIndex The index to insert the component at in the stack.\n   * @param component The component to insert into the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insert(insertIndex, component, componentProps, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: [{ component, componentProps }],\n      opts\n    }, done);\n  }\n  /**\n   * Inserts an array of components into the navigation stack at the specified index.\n   * The last component in the array will become instantiated as a view, and animate\n   * in to become the active view.\n   *\n   * @param insertIndex The index to insert the components at in the stack.\n   * @param insertComponents The components to insert into the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insertPages(insertIndex, insertComponents, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: insertComponents,\n      opts\n    }, done);\n  }\n  /**\n   * Pop a component off of the navigation stack. Navigates back from the current\n   * component.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  pop(opts, done) {\n    return this.queueTrns({\n      removeStart: -1,\n      removeCount: 1,\n      opts\n    }, done);\n  }\n  /**\n   * Pop to a specific index in the navigation stack.\n   *\n   * @param indexOrViewCtrl The index or view controller to pop to.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popTo(indexOrViewCtrl, opts, done) {\n    const tiConfig = {\n      removeStart: -1,\n      removeCount: -1,\n      opts\n    };\n    if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n      tiConfig.removeView = indexOrViewCtrl;\n      tiConfig.removeStart = 1;\n    }\n    else if (typeof indexOrViewCtrl === 'number') {\n      tiConfig.removeStart = indexOrViewCtrl + 1;\n    }\n    return this.queueTrns(tiConfig, done);\n  }\n  /**\n   * Navigate back to the root of the stack, no matter how far back that is.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popToRoot(opts, done) {\n    return this.queueTrns({\n      removeStart: 1,\n      removeCount: -1,\n      opts\n    }, done);\n  }\n  /**\n   * Removes a component from the navigation stack at the specified index.\n   *\n   * @param startIndex The number to begin removal at.\n   * @param removeCount The number of components to remove.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  removeIndex(startIndex, removeCount = 1, opts, done) {\n    return this.queueTrns({\n      removeStart: startIndex,\n      removeCount,\n      opts\n    }, done);\n  }\n  /**\n   * Set the root for the current navigation stack to a component.\n   *\n   * @param component The component to set as the root of the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setRoot(component, componentProps, opts, done) {\n    return this.setPages([{ component, componentProps }], opts, done);\n  }\n  /**\n   * Set the views of the current navigation stack and navigate to the last view.\n   * By default animations are disabled, but they can be enabled by passing options\n   * to the navigation controller. Navigation parameters can also be passed to the\n   * individual pages in the array.\n   *\n   * @param views The list of views to set as the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setPages(views, opts, done) {\n    if (opts == null) {\n      opts = {};\n    }\n    // if animation wasn't set to true then default it to NOT animate\n    if (opts.animated !== true) {\n      opts.animated = false;\n    }\n    return this.queueTrns({\n      insertStart: 0,\n      insertViews: views,\n      removeStart: 0,\n      removeCount: -1,\n      opts\n    }, done);\n  }\n  /** @internal */\n  setRouteId(id, params, direction, animation) {\n    const active = this.getActiveSync();\n    if (matches(active, id, params)) {\n      return Promise.resolve({\n        changed: false,\n        element: active.element\n      });\n    }\n    let resolve;\n    const promise = new Promise(r => (resolve = r));\n    let finish;\n    const commonOpts = {\n      updateURL: false,\n      viewIsReady: enteringEl => {\n        let mark;\n        const p = new Promise(r => (mark = r));\n        resolve({\n          changed: true,\n          element: enteringEl,\n          markVisible: async () => {\n            mark();\n            await finish;\n          }\n        });\n        return p;\n      }\n    };\n    if (direction === 'root') {\n      finish = this.setRoot(id, params, commonOpts);\n    }\n    else {\n      const viewController = this.views.find(v => matches(v, id, params));\n      if (viewController) {\n        finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n      }\n      else if (direction === 'forward') {\n        finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n      }\n      else if (direction === 'back') {\n        finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n      }\n    }\n    return promise;\n  }\n  /** @internal */\n  async getRouteId() {\n    const active = this.getActiveSync();\n    return active\n      ? {\n        id: active.element.tagName,\n        params: active.params,\n        element: active.element\n      }\n      : undefined;\n  }\n  /**\n   * Get the active view.\n   */\n  getActive() {\n    return Promise.resolve(this.getActiveSync());\n  }\n  /**\n   * Get the view at the specified index.\n   *\n   * @param index The index of the view.\n   */\n  getByIndex(index) {\n    return Promise.resolve(this.views[index]);\n  }\n  /**\n   * Returns `true` if the current view can go back.\n   *\n   * @param view The view to check.\n   */\n  canGoBack(view) {\n    return Promise.resolve(this.canGoBackSync(view));\n  }\n  /**\n   * Get the previous view.\n   *\n   * @param view The view to get.\n   */\n  getPrevious(view) {\n    return Promise.resolve(this.getPreviousSync(view));\n  }\n  getLength() {\n    return this.views.length;\n  }\n  getActiveSync() {\n    return this.views[this.views.length - 1];\n  }\n  canGoBackSync(view = this.getActiveSync()) {\n    return !!(view && this.getPreviousSync(view));\n  }\n  getPreviousSync(view = this.getActiveSync()) {\n    if (!view) {\n      return undefined;\n    }\n    const views = this.views;\n    const index = views.indexOf(view);\n    return index > 0 ? views[index - 1] : undefined;\n  }\n  // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\n  // 1. _nextTrns(): consumes the next transition in the queue\n  // 2. _viewInit(): initializes enteringView if required\n  // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\n  // 4. _postViewInit(): add/remove the views from the navigation stack\n  // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\n  // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\n  // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\n  // 8. _transitionFinish(): called once the transition finishes\n  // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\n  async queueTrns(ti, done) {\n    if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\n      return Promise.resolve(false);\n    }\n    const promise = new Promise((resolve, reject) => {\n      ti.resolve = resolve;\n      ti.reject = reject;\n    });\n    ti.done = done;\n    /**\n     * If using router, check to see if navigation hooks\n     * will allow us to perform this transition. This\n     * is required in order for hooks to work with\n     * the ion-back-button or swipe to go back.\n     */\n    if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const canTransition = await router.canTransition();\n        if (canTransition === false) {\n          return Promise.resolve(false);\n        }\n        else if (typeof canTransition === 'string') {\n          router.push(canTransition, ti.opts.direction || 'back');\n          return Promise.resolve(false);\n        }\n      }\n    }\n    // Normalize empty\n    if (ti.insertViews && ti.insertViews.length === 0) {\n      ti.insertViews = undefined;\n    }\n    // Enqueue transition instruction\n    this.transInstr.push(ti);\n    // if there isn't a transition already happening\n    // then this will kick off this transition\n    this.nextTrns();\n    return promise;\n  }\n  success(result, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    if (ti.done) {\n      ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n    }\n    ti.resolve(result.hasCompleted);\n    if (ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const direction = result.direction === 'back' ? 'back' : 'forward';\n        router.navChanged(direction);\n      }\n    }\n  }\n  failed(rejectReason, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    this.transInstr.length = 0;\n    this.fireError(rejectReason, ti);\n  }\n  fireError(rejectReason, ti) {\n    if (ti.done) {\n      ti.done(false, false, rejectReason);\n    }\n    if (ti.reject && !this.destroyed) {\n      ti.reject(rejectReason);\n    }\n    else {\n      ti.resolve(false);\n    }\n  }\n  nextTrns() {\n    // this is the framework's bread 'n butta function\n    // only one transition is allowed at any given time\n    if (this.isTransitioning) {\n      return false;\n    }\n    // there is no transition happening right now\n    // get the next instruction\n    const ti = this.transInstr.shift();\n    if (!ti) {\n      return false;\n    }\n    this.runTransition(ti);\n    return true;\n  }\n  async runTransition(ti) {\n    try {\n      // set that this nav is actively transitioning\n      this.ionNavWillChange.emit();\n      this.isTransitioning = true;\n      this.prepareTI(ti);\n      const leavingView = this.getActiveSync();\n      const enteringView = this.getEnteringView(ti, leavingView);\n      if (!leavingView && !enteringView) {\n        throw new Error('no views in the stack to be removed');\n      }\n      if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n        await enteringView.init(this.el);\n      }\n      this.postViewInit(enteringView, leavingView, ti);\n      // Needs transition?\n      const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\n        enteringView !== leavingView;\n      if (requiresTransition && ti.opts && leavingView) {\n        const isBackDirection = ti.opts.direction === 'back';\n        /**\n         * If heading back, use the entering page's animation\n         * unless otherwise specified by the developer.\n         */\n        if (isBackDirection) {\n          ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView && enteringView.animationBuilder);\n        }\n        leavingView.animationBuilder = ti.opts.animationBuilder;\n      }\n      const result = requiresTransition\n        ? await this.transition(enteringView, leavingView, ti)\n        : {\n          // transition is not required, so we are already done!\n          // they're inserting/removing the views somewhere in the middle or\n          // beginning, so visually nothing needs to animate/transition\n          // resolve immediately because there's no animation that's happening\n          hasCompleted: true,\n          requiresTransition: false\n        };\n      this.success(result, ti);\n      this.ionNavDidChange.emit();\n    }\n    catch (rejectReason) {\n      this.failed(rejectReason, ti);\n    }\n    this.isTransitioning = false;\n    this.nextTrns();\n  }\n  prepareTI(ti) {\n    const viewsLength = this.views.length;\n    ti.opts = ti.opts || {};\n    if (ti.opts.delegate === undefined) {\n      ti.opts.delegate = this.delegate;\n    }\n    if (ti.removeView !== undefined) {\n      assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n      assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n      const index = this.views.indexOf(ti.removeView);\n      if (index < 0) {\n        throw new Error('removeView was not found');\n      }\n      ti.removeStart += index;\n    }\n    if (ti.removeStart !== undefined) {\n      if (ti.removeStart < 0) {\n        ti.removeStart = viewsLength - 1;\n      }\n      if (ti.removeCount < 0) {\n        ti.removeCount = viewsLength - ti.removeStart;\n      }\n      ti.leavingRequiresTransition =\n        ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n    }\n    if (ti.insertViews) {\n      // allow -1 to be passed in to auto push it on the end\n      // and clean up the index if it's larger then the size of the stack\n      if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n        ti.insertStart = viewsLength;\n      }\n      ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n    }\n    const insertViews = ti.insertViews;\n    if (!insertViews) {\n      return;\n    }\n    assert(insertViews.length > 0, 'length can not be zero');\n    const viewControllers = convertToViews(insertViews);\n    if (viewControllers.length === 0) {\n      throw new Error('invalid views to insert');\n    }\n    // Check all the inserted view are correct\n    for (const view of viewControllers) {\n      view.delegate = ti.opts.delegate;\n      const nav = view.nav;\n      if (nav && nav !== this) {\n        throw new Error('inserted view was already inserted');\n      }\n      if (view.state === VIEW_STATE_DESTROYED) {\n        throw new Error('inserted view was already destroyed');\n      }\n    }\n    ti.insertViews = viewControllers;\n  }\n  getEnteringView(ti, leavingView) {\n    const insertViews = ti.insertViews;\n    if (insertViews !== undefined) {\n      // grab the very last view of the views to be inserted\n      // and initialize it as the new entering view\n      return insertViews[insertViews.length - 1];\n    }\n    const removeStart = ti.removeStart;\n    if (removeStart !== undefined) {\n      const views = this.views;\n      const removeEnd = removeStart + ti.removeCount;\n      for (let i = views.length - 1; i >= 0; i--) {\n        const view = views[i];\n        if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n          return view;\n        }\n      }\n    }\n    return undefined;\n  }\n  postViewInit(enteringView, leavingView, ti) {\n    assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n    assert(ti.resolve, 'resolve must be valid');\n    assert(ti.reject, 'reject must be valid');\n    const opts = ti.opts;\n    const insertViews = ti.insertViews;\n    const removeStart = ti.removeStart;\n    const removeCount = ti.removeCount;\n    let destroyQueue;\n    // there are views to remove\n    if (removeStart !== undefined && removeCount !== undefined) {\n      assert(removeStart >= 0, 'removeStart can not be negative');\n      assert(removeCount >= 0, 'removeCount can not be negative');\n      destroyQueue = [];\n      for (let i = 0; i < removeCount; i++) {\n        const view = this.views[i + removeStart];\n        if (view && view !== enteringView && view !== leavingView) {\n          destroyQueue.push(view);\n        }\n      }\n      // default the direction to \"back\"\n      opts.direction = opts.direction || 'back';\n    }\n    const finalBalance = this.views.length +\n      (insertViews !== undefined ? insertViews.length : 0) -\n      (removeCount !== undefined ? removeCount : 0);\n    assert(finalBalance >= 0, 'final balance can not be negative');\n    if (finalBalance === 0) {\n      console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n      throw new Error('navigation stack needs at least one root page');\n    }\n    // At this point the transition can not be rejected, any throw should be an error\n    // there are views to insert\n    if (insertViews) {\n      // add the views to the\n      let insertIndex = ti.insertStart;\n      for (const view of insertViews) {\n        this.insertViewAt(view, insertIndex);\n        insertIndex++;\n      }\n      if (ti.enteringRequiresTransition) {\n        // default to forward if not already set\n        opts.direction = opts.direction || 'forward';\n      }\n    }\n    // if the views to be removed are in the beginning or middle\n    // and there is not a view that needs to visually transition out\n    // then just destroy them and don't transition anything\n    // batch all of lifecycles together\n    // let's make sure, callbacks are zoned\n    if (destroyQueue && destroyQueue.length > 0) {\n      for (const view of destroyQueue) {\n        lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n        lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n        lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      }\n      // once all lifecycle events has been delivered, we can safely detroy the views\n      for (const view of destroyQueue) {\n        this.destroyView(view);\n      }\n    }\n  }\n  async transition(enteringView, leavingView, ti) {\n    // we should animate (duration > 0) if the pushed page is not the first one (startup)\n    // or if it is a portal (modal, actionsheet, etc.)\n    const opts = ti.opts;\n    const progressCallback = opts.progressAnimation\n      ? (ani) => this.sbAni = ani\n      : undefined;\n    const mode = getIonMode(this);\n    const enteringEl = enteringView.element;\n    const leavingEl = leavingView && leavingView.element;\n    const animationOpts = Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, animationBuilder: this.animation || opts.animationBuilder || config.get('navAnimation'), progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\n      leavingEl }, opts);\n    const { hasCompleted } = await transition(animationOpts);\n    return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n  }\n  transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n    const cleanupView = hasCompleted ? enteringView : leavingView;\n    if (cleanupView) {\n      this.cleanup(cleanupView);\n    }\n    return {\n      hasCompleted,\n      requiresTransition: true,\n      enteringView,\n      leavingView,\n      direction: opts.direction\n    };\n  }\n  insertViewAt(view, index) {\n    const views = this.views;\n    const existingIndex = views.indexOf(view);\n    if (existingIndex > -1) {\n      // this view is already in the stack!!\n      // move it to its new location\n      assert(view.nav === this, 'view is not part of the nav');\n      views.splice(index, 0, views.splice(existingIndex, 1)[0]);\n    }\n    else {\n      assert(!view.nav, 'nav is used');\n      // this is a new view to add to the stack\n      // create the new entering view\n      view.nav = this;\n      // insert the entering view into the correct index in the stack\n      views.splice(index, 0, view);\n    }\n  }\n  removeView(view) {\n    assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n    const views = this.views;\n    const index = views.indexOf(view);\n    assert(index > -1, 'view must be part of the stack');\n    if (index >= 0) {\n      views.splice(index, 1);\n    }\n  }\n  destroyView(view) {\n    view._destroy();\n    this.removeView(view);\n  }\n  /**\n   * DOM WRITE\n   */\n  cleanup(activeView) {\n    // ok, cleanup time!! Destroy all of the views that are\n    // INACTIVE and come after the active view\n    // only do this if the views exist, though\n    if (this.destroyed) {\n      return;\n    }\n    const views = this.views;\n    const activeViewIndex = views.indexOf(activeView);\n    for (let i = views.length - 1; i >= 0; i--) {\n      const view = views[i];\n      /**\n       * When inserting multiple views via insertPages\n       * the last page will be transitioned to, but the\n       * others will not be. As a result, a DOM element\n       * will only be created for the last page inserted.\n       * As a result, it is possible to have views in the\n       * stack that do not have `view.element` yet.\n       */\n      const element = view.element;\n      if (element) {\n        if (i > activeViewIndex) {\n          // this view comes after the active view\n          // let's unload it\n          lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n          this.destroyView(view);\n        }\n        else if (i < activeViewIndex) {\n          // this view comes before the active view\n          // and it is not a portal then ensure it is hidden\n          setPageHidden(element, true);\n        }\n      }\n    }\n  }\n  canStart() {\n    return (!!this.swipeGesture &&\n      !this.isTransitioning &&\n      this.transInstr.length === 0 &&\n      this.animationEnabled &&\n      this.canGoBackSync());\n  }\n  onStart() {\n    this.queueTrns({\n      removeStart: -1,\n      removeCount: 1,\n      opts: {\n        direction: 'back',\n        progressAnimation: true\n      }\n    }, undefined);\n  }\n  onMove(stepValue) {\n    if (this.sbAni) {\n      this.sbAni.progressStep(stepValue);\n    }\n  }\n  onEnd(shouldComplete, stepValue, dur) {\n    if (this.sbAni) {\n      this.animationEnabled = false;\n      this.sbAni.onFinish(() => {\n        this.animationEnabled = true;\n      }, { oneTimeCallback: true });\n      // Account for rounding errors in JS\n      let newStepValue = (shouldComplete) ? -0.001 : 0.001;\n      /**\n       * Animation will be reversed here, so need to\n       * reverse the easing curve as well\n       *\n       * Additionally, we need to account for the time relative\n       * to the new easing curve, as `stepValue` is going to be given\n       * in terms of a linear curve.\n       */\n      if (!shouldComplete) {\n        this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n        newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n      }\n      else {\n        newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n      }\n      this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n    }\n  }\n  render() {\n    return (h(\"slot\", null));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"root\": [\"rootChanged\"]\n  }; }\n};\nNav.style = navCss;\n\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n  const nav = el.closest('ion-nav');\n  if (nav) {\n    if (routerDirection === 'forward') {\n      if (component !== undefined) {\n        return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'root') {\n      if (component !== undefined) {\n        return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'back') {\n      return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n    }\n  }\n  return Promise.resolve(false);\n};\n\nconst NavLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The transition direction when navigating to another page.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = () => {\n      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n    };\n  }\n  render() {\n    return (h(Host, { onClick: this.onClick }));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n"],"names":["r","registerInstance","e","createEvent","h","i","getElement","H","Host","b","getIonMode","c","config","k","assert","l","lifecycle","t","transition","s","setPageHidden","d","LIFECYCLE_WILL_UNLOAD","LIFECYCLE_WILL_LEAVE","LIFECYCLE_DID_LEAVE","g","getTimeGivenProgression","a","attachComponent","VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","constructor","component","params","state","init","container","element","delegate","_destroy","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","currentParams","keysA","Object","keys","keysB","length","key","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","Nav","hostRef","ionNavWillLoad","ionNavWillChange","ionNavDidChange","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","swipeGestureChanged","gesture","enable","swipeGesture","rootChanged","root","setRoot","rootParams","componentWillLoad","document","querySelector","el","closest","mode","getBoolean","emit","componentDidLoad","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","disconnectedCallback","destroy","push","opts","done","queueTrns","insertStart","insertViews","insert","insertIndex","insertPages","insertComponents","pop","removeStart","removeCount","popTo","indexOrViewCtrl","tiConfig","removeView","popToRoot","removeIndex","startIndex","setPages","setRouteId","direction","animation","active","getActiveSync","Promise","resolve","changed","promise","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","assign","animationBuilder","getRouteId","tagName","getActive","getByIndex","index","canGoBack","canGoBackSync","getPrevious","getPreviousSync","getLength","indexOf","ti","skipIfBusy","reject","router","canTransition","nextTrns","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","failed","rejectReason","shift","runTransition","prepareTI","getEnteringView","Error","postViewInit","enteringRequiresTransition","leavingRequiresTransition","isBackDirection","viewsLength","viewControllers","removeEnd","destroyQueue","finalBalance","console","warn","insertViewAt","destroyView","progressCallback","progressAnimation","ani","sbAni","leavingEl","animationOpts","showGoBack","baseEl","get","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","progressEnd","render","watchers","style","navLink","routerDirection","routerAnimation","NavLink","onClick","ion_nav","ion_nav_link"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}