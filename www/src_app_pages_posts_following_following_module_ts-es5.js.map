{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAEC;AAFb,OADqB,CAAvB;;UAWaC,2BAA0B;AAAA;AAAA;;AAA1BA,iCAA0B,uDAJtC,yDAAS;AACRC,eAAO,EAAE,CAACC,mEAAsBN,MAAtB,CAAD,CADD;AAERO,eAAO,EAAE,CAACD,yDAAD;AAFD,OAAT,CAIsC,GAA1BF,2BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCMAI,oBAAmB;AAAA;AAAA;;AAAnBA,0BAAmB,uDAX/B,yDAAS;AACRH,eAAO,EAAE,CACPI,yDADO,EAEPC,uDAFO,EAGPC,uFAHO,EAIPD,+DAJO,EAKPE,uDALO,EAMPC,iFANO,CADD;AASRC,oBAAY,EAAE,CAACC,0DAAD;AATN,OAAT,CAW+B,GAAnBP,oBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCJAQ,cAAa;AAWxB,+BACUC,MADV,EAESC,KAFT,EAGUC,OAHV,EAIUC,KAJV,EAKUC,WALV,EAMUC,mBANV,EAOUC,KAPV,EAQUC,QARV,EAQoC;AAAA;;AAP1B;AACD;AACC;AACA;AACA;AACA;AACA;AACA;AAhBV,qCAAsB,IAAtB;AAKA,kCAAmB,EAAnB;AAYK;;AApBmB;AAAA;AAAA,iBAsBxB,oBAAQ;AAAA;;AACN,iBAAKA,QAAL,CAAcC,UAAd,CAAyB,YAAK;AAC5B,mBAAI,CAACH,mBAAL,CAAyBI,YAAzB;AACD,aAFD,EADM,CAKN;;AACA,iBAAKP,OAAL,CAAaQ,cAAb,GAA8BC,SAA9B,CACE,iBAAO,EAAG;AACRC,qBAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,mBAAI,CAACC,MAAL,GAAcC,OAAO,CAAC,KAAD,CAArB;AACA,mBAAI,CAACC,YAAL,GAAoBD,OAAO,CAAC,UAAD,CAA3B;AACA,mBAAI,CAACE,SAAL,GAAiBF,OAAO,CAAC,OAAD,CAAxB;AACA,mBAAI,CAACG,kBAAL,GAA0BH,OAAO,CAAC,gBAAD,CAAjC;;AACA,mBAAI,CAACd,KAAL,CAAWkB,eAAX,CAA2B,KAAI,CAACL,MAAhC,EAAwCH,SAAxC,CACE,cAAI,EAAG;AACL,qBAAI,CAACS,gBAAL,GAAwBC,MAAM,CAACC,MAAP,CAAcC,IAAd,EAAoBC,OAApB,EAAxB;AACAZ,uBAAO,CAACC,GAAR,CAAYU,IAAZ;;AAFK,2DAIc,KAAI,CAACH,gBAJnB;AAAA;;AAAA;AAIL,sEAA0C;AAAA,wBAA/BK,IAA+B;AACxCA,wBAAI,CAACC,IAAL,GAAY,sDAAQ,IAAIC,IAAJ,CAASF,IAAI,CAACC,IAAd,CAAR,EAA6B,eAA7B,CAAZ;AACD;AANI;AAAA;AAAA;AAAA;AAAA;;AAQL,uBAAO,KAAI,CAACN,gBAAZ;AACD,eAVH;AAYD,aAnBH;AAqBAR,mBAAO,CAACC,GAAR,CAAY,oBAAZ,EA3BM,CA6BJ;;AACF,iBAAKe,WAAL,GAAmB,KAAKxB,WAAL,CAAiByB,KAAjB,CAAuB;AACxCC,qBAAO,EAAE,CAAC,EAAD;AAD+B,aAAvB,CAAnB;AAGD;AAvDuB;AAAA;AAAA,iBAwDxB,gCAAoB;AACpB,iBAAKC,mBAAL,GAA2B,CAAC,KAAKA,mBAAjC;AACC;AA1DuB;AAAA;AAAA,iBA2DxB,kBAASN,IAAT,EAAa;AACX;AACA,iBAAKzB,MAAL,CAAYgC,QAAZ,CAAqB,CAAC,uBAAD,EAA0BP,IAAI,CAACQ,GAA/B,CAArB;AACD;AA9DuB;AAAA;AAAA,iBA+DxB,mBAAO;AACL,iBAAKjC,MAAL,CAAYgC,QAAZ,CAAqB,CAAC,sBAAD,CAArB;AACD;AAjEuB;AAAA;AAAA,iBAkExB,gBAAI;AACF,iBAAK3B,mBAAL,CAAyBI,YAAzB;AACA,iBAAKT,MAAL,CAAYgC,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;AArEuB;AAAA;AAAA,iBAsElB,iBAAQE,MAAR,EAAgBlB,YAAhB,EAA8BC,SAA9B,EAAyCC,kBAAzC,EAA6DY,QAA7D,EAAoE;;;;;;;;;AAExE;AACA,2BAAKF,WAAL,CAAiBO,KAAjB;;AACa,6BAAMR,IAAI,CAACS,GAAL,EAAN;;;AAAPV;AACNd,6BAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,6BAAO,CAACC,GAAR,CAAY,cAAcqB,MAA1B;;AAEA,6BAAM,KAAKjC,KAAL,CAAW6B,OAAX,CACJI,MADI,EAEJ,KAAKlB,YAFD,EAGJ,KAAKC,SAHD,EAIJ,KAAKC,kBAJD,EAKJY,QALI,EAMJnB,SANI,CAOJ,YAAK;AAAE,8BAAI,CAACV,KAAL,CAAWoC,WAAX,CAAuBH,MAAvB,EAA+BvB,SAA/B,CACL,cAAI,EAAG;AACL,gCAAI,CAACV,KAAL,CAAWoC,WAAX,CAAuBH,MAAvB,EAA+BvB,SAA/B,CACC,cAAI,EAAG;AAAA,wEACoBc,IAAI,CAAC,UAAD,CADxB;AAAA;;AAAA;AACL,qFAA2C;AAAA,oCAAlCa,YAAkC;AAEzC1B,uCAAO,CAACC,GAAR,CAAYyB,YAAZ;AAEAA,4CAAY,CAACC,MAAb,GAAsB,KAAtB;AACAD,4CAAY,CAACE,gBAAb,GAAgC,KAAhC;AACAF,4CAAY,CAACG,SAAb,GAAyB,IAAzB,CANyC,CAQvC;;AAAA;AACF,oCAAIH,YAAY,CAACrB,SAAb,KAA2B,MAAI,CAACA,SAApC,EAA+C;AAC3CqB,8CAAY,CAACC,MAAb,GAAsB,IAAtB;AACAD,8CAAY,CAACE,gBAAb,GAAgC,IAAhC;AACAF,8CAAY,CAACG,SAAb,GAAyB,KAAzB;AACD;;AAEHH,4CAAY,CAACI,aAAb,GAA6BJ,YAAY,CAACK,OAAb,CAAqBC,MAAlD;AACAN,4CAAY,CAACZ,IAAb,GAAoB,sDAAqB,IAAIC,IAAJ,CAASW,YAAY,CAACZ,IAAtB,CAArB,EAAkD;AACpEmB,gDAAc,EAAE,IADoD;AAEpEC,2CAAS,EAAE;AAFyD,iCAAlD,CAApB;AAIA;AArBG;AAAA;AAAA;AAAA;AAAA;;AAsBL,kCAAI,CAAC7C,KAAL,CAAW8C,gBAAX,CAA4BC,IAA5B,CAAiCvB,IAAI,CAAC,UAAD,CAAJ,CAAiBD,OAAjB,EAAjC;AACD,2BAxBF;AAyBD,yBA3BI;AA4BN,uBAnCG,CAAN;;;;AAsCA,6BAAM,KAAKvB,KAAL,CAAWoC,WAAX,CAAuBH,MAAvB,EAA+BvB,SAA/B,CACJ,cAAI,EAAG;AAAA,oEACoBc,IAAI,CAAC,UAAD,CADxB;AAAA;;AAAA;AACL,iFAA2C;AAAA,gCAAlCa,YAAkC;AACzCA,wCAAY,CAACZ,IAAb,GAAoB,sDAAqB,IAAIC,IAAJ,CAASW,YAAY,CAACZ,IAAtB,CAArB,EAAkD;AACpEmB,4CAAc,EAAE,IADoD;AAEpEC,uCAAS,EAAE;AAFyD,6BAAlD,CAApB;AAIA;AANG;AAAA;AAAA;AAAA;AAAA;;AAOL,8BAAI,CAAC7C,KAAL,CAAW8C,gBAAX,CAA4BC,IAA5B,CAAiCvB,IAAI,CAAC,UAAD,CAAJ,CAAiBD,OAAjB,EAAjC;AACD,uBATG,CAAN;;;AAYMrB,8BAAQ,KAAKA,KAAL,CAAW8C,MAAX,CAAkB;AAC9BC,+BAAO,EAAE,8BADqB;AAE9BC,gCAAQ,EAAE;AAFoB,uBAAlB;AAKdhD,2BAAK,CAACiD,IAAN,CAAW,eAAK;AAAA,+BAAIjD,KAAK,CAACkD,OAAN,EAAJ;AAAA,uBAAhB;;AAEA,6BAAM,KAAKrD,MAAL,CAAYgC,QAAZ,CAAqB,CAAC,uBAAD,EAA0BE,MAA1B,CAArB,CAAN;;;;;;;;;AACD;AAxIuB;AAAA;AAAA,iBAyIlB,mBAAUoB,KAAV,EAAe;;;;;;;;AAElB;AACA,2BAAKpD,OAAL,CAAaQ,cAAb,GAA8BC,SAA9B,CACC,iBAAO,EAAG;AACRC,+BAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,8BAAI,CAACC,MAAL,GAAcC,OAAO,CAAC,KAAD,CAArB;AACA,8BAAI,CAACC,YAAL,GAAoBD,OAAO,CAAC,UAAD,CAA3B;AACA,8BAAI,CAACE,SAAL,GAAiBF,OAAO,CAAC,OAAD,CAAxB;AACA,8BAAI,CAACG,kBAAL,GAA0BH,OAAO,CAAC,gBAAD,CAAjC;;AACA,8BAAI,CAACd,KAAL,CAAWkB,eAAX,CAA2B,MAAI,CAACL,MAAhC,EAAwCH,SAAxC,CACE,cAAI,EAAG;AACL,gCAAI,CAACS,gBAAL,GAAwBC,MAAM,CAACC,MAAP,CAAcC,IAAd,EAAoBC,OAApB,EAAxB;AACAZ,iCAAO,CAACC,GAAR,CAAYU,IAAZ;;AAFK,sEAIc,MAAI,CAACH,gBAJnB;AAAA;;AAAA;AAIL,mFAA0C;AAAA,kCAA/BK,IAA+B;AACxCA,kCAAI,CAACC,IAAL,GAAY,sDAAQ,IAAIC,IAAJ,CAASF,IAAI,CAACC,IAAd,CAAR,EAA6B,eAA7B,CAAZ;AACD;AANI;AAAA;AAAA;AAAA;AAAA;;AAQL,iCAAO,MAAI,CAACN,gBAAZ;AACD,yBAVH;AAYD,uBAnBF,GAqBD;;;AACA,6BAAMmC,UAAU,CAAC,YAAK;AACpB,4BAAMpD,KAAK,GAAG,MAAI,CAACA,KAAL,CAAW8C,MAAX,CAAkB;AAC9BC,iCAAO,EAAE,qCADqB;AAE9BC,kCAAQ,EAAE;AAFoB,yBAAlB,CAAd;;AAIAG,6BAAK,CAACE,MAAN,CAAaC,QAAb;AACAtD,6BAAK,CAACiD,IAAN,CAAW,eAAK;AAAA,iCAAIjD,KAAK,CAACkD,OAAN,EAAJ;AAAA,yBAAhB;AACD,uBAPe,EAOb,IAPa,CAAhB;;;;;;;;;AAQD;AA1KuB;;AAAA;AAAA;;;;gBAjBjBK;;gBACAC;;gBACAC;;gBACAC;;gBAIWC;;gBACXC;;gBALiBF;;gBAMjBG;;;;AAQIjE,oBAAa,uDALzB,2DAAU;AACTkE,gBAAQ,EAAE,eADD;AAETC,6KAFS;;AAAA,OAAV,CAKyB,2EAYNR,qDACFC,kEACGC,8EACFC,6DACMC,0DACQC,gGACdF,6DACGG,gEAnBI,GAAbjE,cAAa,CAAb;;;;;;;;;;;;;AClBb;;;AAAAoE,uCAAe,gmLAAf;;;;;;;;;;;;;;;","names":["routes","path","component","_following_page__WEBPACK_IMPORTED_MODULE_0__","FollowingPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","FollowingPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","_components_custom_component_module__WEBPACK_IMPORTED_MODULE_0__","_ionic_angular__WEBPACK_IMPORTED_MODULE_7__","_following_routing_module__WEBPACK_IMPORTED_MODULE_1__","declarations","_following_page__WEBPACK_IMPORTED_MODULE_2__","FollowingPage","router","posts","profile","toast","formBuilder","eventEmitterService","modal","location","onPopState","onBackAction","getUserDetails","subscribe","console","log","userID","details","userFullName","userEmail","userProfilePicture","getFollowedPost","allFollowedPosts","Object","values","data","reverse","post","date","Date","commentForm","group","comment","showShortDesciption","navigate","_id","postID","reset","now","getPostInfo","postComments","isUser","canDeleteComment","canReport","repliesLength","replies","length","includeSeconds","addSuffix","commentsSubject$","next","create","message","duration","then","present","event","setTimeout","target","complete","_angular_router__WEBPACK_IMPORTED_MODULE_8__","_services_post_service__WEBPACK_IMPORTED_MODULE_2__","src_app_services_profile_service__WEBPACK_IMPORTED_MODULE_3__","_ionic_angular__WEBPACK_IMPORTED_MODULE_9__","_angular_forms__WEBPACK_IMPORTED_MODULE_10__","src_app_emitters_post_page_emitter_service__WEBPACK_IMPORTED_MODULE_4__","_angular_common__WEBPACK_IMPORTED_MODULE_11__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/pages/posts/following/following-routing.module.ts","webpack:///src/app/pages/posts/following/following.module.ts","webpack:///src/app/pages/posts/following/following.page.ts","webpack:///src/app/pages/posts/following/following.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FollowingPage } from './following.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FollowingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FollowingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CustomComponentsModule } from '../../../components/custom-component.module';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FollowingPageRoutingModule } from './following-routing.module';\n\nimport { FollowingPage } from './following.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    CustomComponentsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    FollowingPageRoutingModule\n  ],\n  declarations: [FollowingPage]\n})\nexport class FollowingPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PostsService } from '../../../services/post.service';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { ToastController, ModalController } from '@ionic/angular';\nimport { format } from 'date-fns';\nimport { formatDistanceToNow } from 'date-fns';\nimport { FollowIconComponent } from '../../../components/follow-icon/follow-icon.component';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { PostPageEmitterService } from 'src/app/emitters/post-page-emitter.service';\nimport { PlatformLocation } from '@angular/common';\n\n\n@Component({\n  selector: 'app-following',\n  templateUrl: './following.page.html',\n  styleUrls: ['./following.page.scss'],\n})\nexport class FollowingPage implements OnInit {\n\n  commentForm: FormGroup;\n  showShortDesciption = true\n  userEmail;\n  userFullName;\n  userProfilePicture;\n  date;\n  allFollowedPosts = [];\n  userID;\n\n  constructor(\n    private router: Router,\n    public posts: PostsService,\n    private profile: ProfileService,\n    private toast: ToastController,\n    private formBuilder: FormBuilder,\n    private eventEmitterService: PostPageEmitterService,\n    private modal: ModalController,\n    private location: PlatformLocation\n  ) { }\n\n  ngOnInit() {\n    this.location.onPopState(() => {\n      this.eventEmitterService.onBackAction();\n    });\n\n    // Get the User's Followed Posts\n    this.profile.getUserDetails().subscribe(\n      details => {\n        console.log('User ID from Following Page OnInit');\n        this.userID = details['_id'];\n        this.userFullName = details['fullName'];\n        this.userEmail = details['email'];\n        this.userProfilePicture = details['profilePicture'];\n        this.posts.getFollowedPost(this.userID).subscribe(\n          data => {\n            this.allFollowedPosts = Object.values(data).reverse();\n            console.log(data);\n\n            for (const post of this.allFollowedPosts) {\n              post.date = format( new Date(post.date), 'MMMM do, yyyy');\n            }\n\n            return this.allFollowedPosts;\n          }\n        );\n      });\n\n    console.log('Got Followed Posts');\n\n      // To collect comment data\n    this.commentForm = this.formBuilder.group({\n      comment: ['']\n    });\n  }\n  alterDescriptionText() {\n  this.showShortDesciption = !this.showShortDesciption\n  }\n  postPage(post) {\n    // tslint:disable-next-line: max-line-length\n    this.router.navigate(['/home/posts/post-page', post._id]);\n  }\n  addPost() {\n    this.router.navigate(['/home/posts/add-post']);\n  }\n  back() {\n    this.eventEmitterService.onBackAction();\n    this.router.navigate(['/home/posts']);\n  }\n  async comment(postID, userFullName, userEmail, userProfilePicture, comment) {\n\n    // Reset Comment Input\n    this.commentForm.reset();\n    const date = await Date.now();\n    console.log('Posting comment');\n    console.log('Post ID: ' + postID);\n\n    await this.posts.comment(\n      postID,\n      this.userFullName,\n      this.userEmail,\n      this.userProfilePicture,\n      comment\n    ).subscribe(\n      () => {this.posts.getPostInfo(postID).subscribe(\n        post => {\n          this.posts.getPostInfo(postID).subscribe(\n           post => {\n             for (let postComments of post['comments']) {\n\n               console.log(postComments);\n\n               postComments.isUser = false;\n               postComments.canDeleteComment = false;\n               postComments.canReport = true;\n\n                 // If this comment is from the logged in user, they can delete and edit\n               if (postComments.userEmail === this.userEmail) {\n                   postComments.isUser = true;\n                   postComments.canDeleteComment = true;\n                   postComments.canReport = false;\n                 }\n\n               postComments.repliesLength = postComments.replies.length;\n               postComments.date = formatDistanceToNow( new Date(postComments.date), {\n                 includeSeconds: true,\n                 addSuffix: false\n               });\n              }\n             this.posts.commentsSubject$.next(post['comments'].reverse());\n           });\n        });\n      }\n    );\n\n    await this.posts.getPostInfo(postID).subscribe(\n      post => {\n        for (let postComments of post['comments']) {\n          postComments.date = formatDistanceToNow( new Date(postComments.date), {\n            includeSeconds: true,\n            addSuffix: true\n          });\n         }\n        this.posts.commentsSubject$.next(post['comments'].reverse());\n      }\n    );\n\n    const toast = this.toast.create({\n      message: 'Your comment has been added.',\n      duration: 1500\n    });\n\n    toast.then(toast => toast.present());\n\n    await this.router.navigate(['/home/posts/post-page', postID]);\n  }\n  async doRefresh(event) {\n\n     // Get the User's Followed Posts\n     this.profile.getUserDetails().subscribe(\n      details => {\n        console.log('User ID from Following Page OnInit');\n        this.userID = details['_id'];\n        this.userFullName = details['fullName'];\n        this.userEmail = details['email'];\n        this.userProfilePicture = details['profilePicture'];\n        this.posts.getFollowedPost(this.userID).subscribe(\n          data => {\n            this.allFollowedPosts = Object.values(data).reverse();\n            console.log(data);\n\n            for (const post of this.allFollowedPosts) {\n              post.date = format( new Date(post.date), 'MMMM do, yyyy');\n            }\n\n            return this.allFollowedPosts;\n          }\n        );\n      });\n\n    // Present Toast\n    await setTimeout(() => {\n      const toast = this.toast.create({\n        message: 'Inspiration Page has been refreshed',\n        duration: 3000\n      });\n      event.target.complete();\n      toast.then(toast => toast.present());\n    }, 2000);\n  }\n\n}\n","export default \" <!-- Mobile Toolbar -->\\n <ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button></ion-back-button>\\n      </ion-buttons>\\n    <ion-title>Following</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <!-- fab placed to the bottom end -->\\n  <ion-fab class=\\\"ion-hide-lg-up\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n      <ion-fab-button (click)=\\\"addPost()\\\">\\n        <ion-icon name=\\\"add\\\" size=\\\"large\\\"></ion-icon>\\n      </ion-fab-button>\\n  </ion-fab>\\n  <!-- Refresher -->\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <!-- Desktop -->\\n  <ion-grid class=\\\"ion-hide-md-down\\\">\\n    <!-- Desktop Header -->\\n    <ion-row style=\\\"padding-top: 80px; margin-bottom: 40px;\\\" class=\\\"ion-hide-lg-down ion-justify-content-center\\\">\\n      <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n        <ion-toolbar class=\\\"desktop-toolbar\\\">\\n              <ion-buttons slot=\\\"start\\\">\\n                  <h1>Following</h1>\\n              </ion-buttons>\\n              <ion-buttons slot=\\\"end\\\">\\n                <ion-button class=\\\"add-button\\\"  (click)=\\\"addPost()\\\">\\n                  Add Post\\n                </ion-button>\\n                <ion-button class=\\\"blue-button\\\"  (click)=\\\"back()\\\">\\n                  Back\\n                </ion-button>\\n              </ion-buttons>\\n        </ion-toolbar>\\n            <!-- <img height=\\\"50\\\" style=\\\"display: inline;\\\" src=\\\"../../../assets/icon/suitcase-blue.svg\\\" alt=\\\"\\\" srcset=\\\"\\\">\\n            <h1 style=\\\"display: inline; margin-left: 15px;\\\">Jobs</h1> -->\\n      </ion-col>\\n    </ion-row>\\n  <ion-row class=\\\"ion-justify-content-center\\\" style=\\\"margin-top: 1%;\\\">\\n    <ion-col\\n    class=\\\"no-posts ion-align-items-center\\\"\\n    *ngIf=\\\"allFollowedPosts.length === 0\\\"\\n    size-xs=\\\"11\\\" size-sm=\\\"9\\\" size-md=\\\"8\\\" size-lg=\\\"7\\\">\\n    <div>\\n      <p style=\\\"font-size: 1.2em;\\\">You currently do not have any posts. Please click the Add Post button to create a Post.</p>\\n    </div>\\n    </ion-col>\\n\\n  <!-- Posts -->\\n  <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n    <div class=\\\"post\\\" *ngFor=\\\"let post of allFollowedPosts\\\" style=\\\"margin-top: 1%;\\\">\\n      <!-- Profile Header -->\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n            <!-- Profile Picture -->\\n            <ion-col size=\\\"1\\\">\\n              <img src=\\\"{{post.creatorProfilePicture}}\\\" style=\\\"background: #999; border-radius: 100px; height: 35xpx; width: 35px;\\\">\\n            </ion-col>\\n\\n            <!-- Post Creator's Name -->\\n            <ion-col size=\\\"10\\\">\\n              <p class=\\\"post-name\\\">{{post.creatorName}}</p>\\n              <p class=\\\"post-date\\\">{{post.date}}</p>\\n            </ion-col>\\n\\n      </ion-row>\\n      <!-- Post Content -->\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <!-- (click)=\\\"postPage(post)\\\"  -->\\n        <!-- 1080x1350 -->\\n        <ion-col size=\\\"11\\\">\\n          <p class=\\\"post-title\\\">{{post.title}}</p>\\n          <div class=\\\"hashtags\\\">\\n            <p class=\\\"hashtag\\\" *ngFor=\\\"let tag of post.hashtags\\\">\\n              #{{tag}}\\n            </p>\\n          </div>\\n          <p class=\\\"no-tags\\\" *ngIf=\\\"post.hashtags.length === 0\\\">\\n            No #hashtags for this post\\n          </p>\\n          <p [ngClass]=\\\"{'show-less': showShortDesciption}\\\" class=\\\"post-content\\\">{{post.post}}</p>\\n          <span class=\\\"ellipsis\\\" *ngIf=\\\"post.post.length > 400 && showShortDesciption\\\">...</span>\\n          <button *ngIf=\\\"post.post.length > 400\\\" class=\\\"show-more-or-less-button\\\" type=\\\"button\\\" (click)=\\\"alterDescriptionText()\\\">\\n            {{ showShortDesciption ? 'SHOW ALL': 'SHOW LESS' }}\\n          </button>\\n        </ion-col>\\n      </ion-row>\\n      <!-- Comment -->\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <ion-col size=\\\"12\\\">\\n          <ion-item  style=\\\"height: auto;\\\" lines=\\\"none\\\">\\n            <form (ngSubmit)=\\\"comment(post._id, this.userFullName, this.userEmail, this.userProfilePicture, this.commentForm.value)\\\" [formGroup]=\\\"commentForm\\\">\\n              <ion-textarea\\n                  class=\\\"comment-input-mobile\\\"\\n                  autogrow=\\\"true\\\"\\n                  autocapitalize=\\\"true\\\"\\n                  rows=\\\"5\\\"\\n                  spellcheck=\\\"true\\\"\\n                  wrap=\\\"soft\\\"\\n                  type=\\\"text\\\"\\n                  #postComment\\n                  placeholder=\\\"Add a Comment\\\" formControlName=\\\"comment\\\">\\n              </ion-textarea>\\n              <!-- Comment Post Button -->\\n              <ion-button\\n                style=\\\"float: right;\\\"\\n                *ngIf=\\\"postComment.value.length >= 2;\\\"\\n                class=\\\"comment-post-button\\\"\\n                name=\\\"send\\\"\\n                type=\\\"submit\\\">Post Comment\\n              </ion-button>\\n            </form>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <!-- Post Buttons -->\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <!-- Upvote & Downvote-->\\n        <ion-col size=\\\"8\\\">\\n          <app-up-down-vote-buttons [postID]=\\\"post._id\\\" [postEmail]=\\\"post.creatorEmail\\\"></app-up-down-vote-buttons>\\n        </ion-col>\\n        <!-- Follow & Comment -->\\n        <ion-col size=\\\"3\\\">\\n          <app-follow-comment-buttons [postID]=\\\"post._id\\\" [commentLength]=\\\"post.comments.length\\\"></app-follow-comment-buttons>\\n        </ion-col>\\n      </ion-row>\\n    </div>\\n  </ion-col>\\n\\n  </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";"]}