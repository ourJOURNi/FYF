{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAEC;AAFb,OADqB,CAAvB;;UAWaC,6BAA4B;AAAA;AAAA;;AAA5BA,mCAA4B,uDAJxC,yDAAS;AACRC,eAAO,EAAE,CAACC,mEAAsBN,MAAtB,CAAD,CADD;AAERO,eAAO,EAAE,CAACD,yDAAD;AAFD,OAAT,CAIwC,GAA5BF,6BAA4B,CAA5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCIAI,sBAAqB;AAAA;AAAA;;AAArBA,4BAAqB,uDAVjC,yDAAS;AACRH,eAAO,EAAE,CACPI,yDADO,EAEPC,uDAFO,EAGPA,+DAHO,EAIPC,uDAJO,EAKPC,sFALO,CADD;AAQRC,oBAAY,EAAE,CAACC,+DAAD;AARN,OAAT,CAUiC,GAArBN,sBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPAO,gBAAe;AAO1B,iCACUC,WADV,EAEUC,KAFV,EAGUC,SAHV,EAIUC,OAJV,EAKUC,KALV,EAMUC,KANV,EAOUC,kBAPV,EAOoD;AAAA;;AAN1C;AACA;AACA;AACA;AACA;AACA;AACA;AAEP;;AAhBuB;AAAA;AAAA,iBAkB1B,oBAAQ;AAEL,iBAAKC,SAAL,GAAiB,KAAKL,SAAL,CAAeM,GAAf,CAAmB,WAAnB,CAAjB;AACA,iBAAKC,eAAL,GAAuB,KAAKP,SAAL,CAAeM,GAAf,CAAmB,gBAAnB,CAAvB;AACA,iBAAKE,MAAL,GAAc,KAAKR,SAAL,CAAeM,GAAf,CAAmB,QAAnB,CAAd;AACA,iBAAKG,SAAL,GAAiB,KAAKT,SAAL,CAAeM,GAAf,CAAmB,WAAnB,CAAjB;AAEAI,mBAAO,CAACC,GAAR,CAAY,cAAc,KAAKH,MAA/B;AACAE,mBAAO,CAACC,GAAR,CAAY,KAAKN,SAAjB;AACAK,mBAAO,CAACC,GAAR,CAAY,KAAKJ,eAAjB;AACAG,mBAAO,CAACC,GAAR,CAAY,KAAKF,SAAjB,EAVK,CAYL;;AACA,iBAAKG,eAAL,GAAuB,KAAKd,WAAL,CAAiBe,KAAjB,CAAuB;AAC7CC,wBAAU,EAAE,KAAKP;AAD4B,aAAvB,CAAvB;AAIF;AAnCyB;AAAA;AAAA,iBAqC1B,kBAAM;AACJG,mBAAO,CAACC,GAAR,CAAY,YAAZ;AACA,iBAAKZ,KAAL,CAAWgB,OAAX;AACD;AAxCyB;AAAA;AAAA,iBA0C1B,0BAAc;AACZ,iBAAKX,kBAAL,CAAwBY,eAAxB;AACD;AA5CyB;AAAA;AAAA,iBA8CzB,cAAKF,UAAL,EAAe;AAAA;;AACdJ,mBAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,mBAAO,CAACC,GAAR,CAAYG,UAAZ;AACA,iBAAKZ,KAAL,CAAWe,WAAX,CAAuB,KAAKZ,SAA5B,EAAuC,KAAKG,MAA5C,EAAoDM,UAAU,CAACA,UAA/D,EAA2EI,SAA3E,CAAqF,iBAAO,EAAG;AAE7F,mBAAI,CAAChB,KAAL,CAAWiB,WAAX,CAAuB,KAAI,CAACX,MAA5B,EAAoCU,SAApC,CACE,cAAI,EAAG;AAAA,2DAEoBE,IAAI,CAAC,UAAD,CAFxB;AAAA;;AAAA;AAEL,sEAA2C;AAAA,wBAAlCC,YAAkC;AAEzCA,gCAAY,CAACC,MAAb,GAAsB,KAAtB;AACAD,gCAAY,CAACE,gBAAb,GAAgC,KAAhC;AACAF,gCAAY,CAACG,SAAb,GAAyB,IAAzB,CAJyC,CAMvC;;AACF,wBAAIH,YAAY,CAACZ,SAAb,KAA2B,KAAI,CAACA,SAApC,EAA+C;AAC3CY,kCAAY,CAACC,MAAb,GAAsB,IAAtB;AACAD,kCAAY,CAACE,gBAAb,GAAgC,IAAhC;AACAF,kCAAY,CAACG,SAAb,GAAyB,KAAzB;AACD;;AAEHH,gCAAY,CAACI,aAAb,GAA6BJ,YAAY,CAACK,OAAb,CAAqBC,MAAlD;AACAN,gCAAY,CAACO,IAAb,GAAoB,sDAAqB,IAAIC,IAAJ,CAASR,YAAY,CAACO,IAAtB,CAArB,EAAkD;AACpEE,oCAAc,EAAE,IADoD;AAEpEC,+BAAS,EAAE;AAFyD,qBAAlD,CAApB;AAIA;AApBG;AAAA;AAAA;AAAA;AAAA;;AAqBL,qBAAI,CAAC7B,KAAL,CAAW8B,gBAAX,CAA4BC,IAA5B,CAAiCb,IAAI,CAAC,UAAD,CAAJ,CAAiBc,OAAjB,EAAjC;AACD,eAvBH;;AAwBA,mBAAI,CAACC,WAAL,CAAiBC,OAAO,CAAC,YAAD,CAAxB;AACD,aA3BD;AA4BD;AA7EyB;AAAA;AAAA,iBA+EpB,qBAAYA,OAAZ,EAAmB;;;;;;;;;AACP,6BAAM,KAAKnC,OAAL,CAAaoC,MAAb,CAAoB;AACxCC,+BAAO,EAAE,yBAD+B;AAExCC,gCAAQ,EAAE;AAF8B,uBAApB,CAAN;;;AAAVtC;;AAIN,6BAAMA,OAAO,CAACuC,OAAR,EAAN;;;;AAEuB,6BAAMvC,OAAO,CAACwC,YAAR,EAAN;;;;AAAfC;AAAMC;;AACd,6BAAM,KAAK5C,KAAL,CAAWgB,OAAX,EAAN;;;;AACA,6BAAM,KAAK6B,YAAL,EAAN;;;AACAlC,6BAAO,CAACC,GAAR,CAAY,oBAAZ;;;;;;;;;AACD;AA1FyB;AAAA;AAAA,iBA4FpB,wBAAY;;;;;;;;AACF,6BAAM,KAAKR,KAAL,CAAWkC,MAAX,CAAkB;AACpCQ,gCAAQ,EAAE,eAD0B;AAEpCP,+BAAO,EAAE,+BAF2B;AAGpCQ,+BAAO,EAAE,CAAC,IAAD;AAH2B,uBAAlB,CAAN;;;AAAR3C;;AAMN,6BAAMA,KAAK,CAACqC,OAAN,EAAN;;;;;;;;;AACD;AApGyB;;AAAA;AAAA;;;;gBAZnBO;;gBACAC;;gBAAiBA;;gBAAWA;;gBAC5BC;;gBAD+CD;;gBAE/CE;;;;AASIrD,sBAAe,uDAL3B,0DAAU;AACTsD,gBAAQ,EAAE,kBADD;AAETC,gLAFS;;AAAA,OAAV,CAK2B,2EAQHL,yDACNC,6DACIA,uDACFA,+DACFC,yEACAD,6DACaE,gGAdJ,GAAfrD,gBAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRb,UAAMf,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAEqE;AAFb,OADqB,CAAvB;;UAWaC,8BAA6B;AAAA;AAAA;;AAA7BA,oCAA6B,uDAJzC,yDAAS;AACRnE,eAAO,EAAE,CAACC,mEAAsBN,MAAtB,CAAD,CADD;AAERO,eAAO,EAAE,CAACD,yDAAD;AAFD,OAAT,CAIyC,GAA7BkE,8BAA6B,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCIAC,uBAAsB;AAAA;AAAA;;AAAtBA,6BAAsB,uDAVlC,yDAAS;AACRpE,eAAO,EAAE,CACPI,yDADO,EAEPC,uDAFO,EAGPA,+DAHO,EAIPC,uDAJO,EAKP+D,wFALO,CADD;AAQR7D,oBAAY,EAAE,CAAC8D,iEAAD;AARN,OAAT,CAUkC,GAAtBF,uBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCRAG,iBAAgB;AAW3B,kCACU5D,WADV,EAEUC,KAFV,EAGUC,SAHV,EAIUC,OAJV,EAKUE,KALV,EAMUD,KANV,EAOUE,kBAPV,EAOoD;AAAA;;AAN1C;AACA;AACA;AACA;AACA;AACA;AACA;AAEP;;AApBwB;AAAA;AAAA,iBAsB3B,oBAAQ;AACN;AACA,iBAAKuD,gBAAL,GAAwB,KAAK7D,WAAL,CAAiBe,KAAjB,CAAuB;AAC9C+C,mBAAK,EAAE,CAAC,EAAD;AADuC,aAAvB,CAAxB;AAIA,iBAAKvD,SAAL,GAAiB,KAAKL,SAAL,CAAeM,GAAf,CAAmB,WAAnB,CAAjB;AACA,iBAAKE,MAAL,GAAc,KAAKR,SAAL,CAAeM,GAAf,CAAmB,QAAnB,CAAd;AACA,iBAAKuD,YAAL,GAAoB,KAAK7D,SAAL,CAAeM,GAAf,CAAmB,cAAnB,CAApB;AACA,iBAAKG,SAAL,GAAiB,KAAKT,SAAL,CAAeM,GAAf,CAAmB,WAAnB,CAAjB;AACA,iBAAKwD,kBAAL,GAA0B,KAAK9D,SAAL,CAAeM,GAAf,CAAmB,oBAAnB,CAA1B;AACA,iBAAKyD,mBAAL,GAA2B,KAAK/D,SAAL,CAAeM,GAAf,CAAmB,qBAAnB,CAA3B;AACA,iBAAK0D,gBAAL,GAAwB,KAAKhE,SAAL,CAAeM,GAAf,CAAmB,kBAAnB,CAAxB;AACA,iBAAK8B,OAAL,GAAe,KAAKpC,SAAL,CAAeM,GAAf,CAAmB,SAAnB,CAAf;AAEAI,mBAAO,CAACC,GAAR,CAAY,KAAKqD,gBAAjB;AACAtD,mBAAO,CAACC,GAAR,CAAY,KAAKF,SAAjB;AAED;AAxC0B;AAAA;AAAA,iBA0CrB,eAAMmD,MAAN,EAAW;;;;;;;;;AACf,6BAAMlD,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAN;;;;AAEA,6BAAM,KAAKT,KAAL,CAAW+D,YAAX,CAAwB,KAAK5D,SAA7B,EAAwC,KAAKG,MAA7C,EAAqDoD,MAAK,CAACA,KAA3D,EAAkE,KAAKC,YAAvE,EAAqF,KAAKpD,SAA1F,EAAqG,KAAKqD,kBAA1G,EAA8H,KAAKC,mBAAnI,EAAwJ,KAAKC,gBAA7J,EACH9C,SADG,CAEF,cAAI,EAAG;AACLR,+BAAO,CAACC,GAAR,CAAYgC,IAAZ;AACA,4BAAIuB,QAAQ,GAAGvB,IAAI,CAAC,UAAD,CAAnB;AACA,4BAAIlC,SAAS,GAAGkC,IAAI,CAAC,WAAD,CAApB,CAHK,CAIL;AACE;;AADF;AACE;AALG,oEAMiBuB,QANjB;AAAA;;AAAA;AAIL;AACE;AACF,iFAAgC;AAAA,gCAArB9B,OAAqB;AAE5B;AACA;AACA;AAEAA,mCAAO,CAACX,aAAR,GAAwBW,OAAO,CAACV,OAAR,CAAgBC,MAAxC;AACAS,mCAAO,CAACd,MAAR,GAAiB,KAAjB;AACAc,mCAAO,CAACb,gBAAR,GAA2B,KAA3B;AACAa,mCAAO,CAACZ,SAAR,GAAoB,IAApB;AACAY,mCAAO,CAACR,IAAR,GAAe,0EAAqB,IAAIC,IAAJ,CAASO,OAAO,CAACR,IAAjB,CAArB,EAA6C;AAC1DE,4CAAc,EAAE,KAD0C;AAE1DC,uCAAS,EAAE;AAF+C,6BAA7C,CAAf,CAV4B,CAe5B;;AAAA;AACA,gCAAIK,OAAO,CAAC3B,SAAR,KAAsBA,SAA1B,EAAqC;AACnC2B,qCAAO,CAACd,MAAR,GAAiB,IAAjB;AACAc,qCAAO,CAACb,gBAAR,GAA2B,IAA3B;AACAa,qCAAO,CAACZ,SAAR,GAAoB,KAApB;AACD,6BApB2B,CAsB5B;;;AAAA;AACA,iCAAK,IAAI2C,CAAC,GAAG,CAAb,EAAgB/B,OAAO,CAACV,OAAR,CAAgBC,MAAhB,GAAyBwC,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD;AAC/C/B,qCAAO,CAACV,OAAR,CAAgByC,CAAhB,EAAmBvC,IAAnB,GAA0B,0EAAqB,IAAIC,IAAJ,CAASO,OAAO,CAACV,OAAR,CAAgByC,CAAhB,EAAmBvC,IAA5B,CAArB,EAAwD;AAChFG,yCAAS,EAAE;AADqE,+BAAxD,CAA1B;AAGF;AAEF;AAnCG;AAAA;AAAA;AAAA;AAAA;;AAoCL,8BAAI,CAAC7B,KAAL,CAAW8B,gBAAX,CAA4BC,IAA5B,CAAiCiC,QAAQ,CAAChC,OAAT,EAAjC;AACD,uBAvCC,CAAN;;;;AAyCA,6BAAM,KAAKkC,YAAL,EAAN;;;;;;;;;AACD;AAvF0B;AAAA;AAAA,iBAyFrB,wBAAY;;;;;;;;;AACA,6BAAM,KAAKnE,OAAL,CAAaoC,MAAb,CAAoB;AACxCC,+BAAO,EAAE,wBAD+B;AAExCC,gCAAQ,EAAE;AAF8B,uBAApB,CAAN;;;AAAVtC;;AAKN,6BAAMA,OAAO,CAACuC,OAAR,EAAN;;;;AAEuB,6BAAMvC,OAAO,CAACwC,YAAR,EAAN;;;;AAAfC;AAAMC;;AACd,6BAAM,KAAK5C,KAAL,CAAWgB,OAAX,EAAN;;;;AACA,6BAAM,KAAK6B,YAAL,EAAN;;;AACAlC,6BAAO,CAACC,GAAR,CAAY,oBAAZ;;;;;;;;;AACD;AArG0B;AAAA;AAAA,iBAuGrB,wBAAY;;;;;;;;AACF,6BAAM,KAAKR,KAAL,CAAWkC,MAAX,CAAkB;AACpCQ,gCAAQ,EAAE,eAD0B;AAEpCP,+BAAO,EAAE,8BAF2B;AAGpCQ,+BAAO,EAAE,CAAC,IAAD;AAH2B,uBAAlB,CAAN;;;AAAR3C;;AAMN,6BAAMA,KAAK,CAACqC,OAAN,EAAN;;;;;;;;;AACD;AA/G0B;AAAA;AAAA,iBAiH3B,kBAAM;AACJ9B,mBAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,iBAAKZ,KAAL,CAAWgB,OAAX;AACD;AApH0B;;AAAA;AAAA;;;;gBAXpBgC;;gBACAC;;gBAAiBA;;gBAAWA;;gBAAmBA;;gBAC/CC;;gBACAC;;;;AAQIQ,uBAAgB,uDAL5B,0DAAU;AACTP,gBAAQ,EAAE,gBADD;AAETC,iLAFS;;AAAA,OAAV,CAK4B,2EAYJL,yDACNC,6DACIA,uDACFA,+DACFA,6DACAC,yEACaC,gGAlBH,GAAhBQ,iBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPb,UAAM5E,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAEqF;AAFb,OADqB,CAAvB;;UAWaC,+BAA8B;AAAA;AAAA;;AAA9BA,qCAA8B,uDAJ1C,yDAAS;AACRnF,eAAO,EAAE,CAACC,mEAAsBN,MAAtB,CAAD,CADD;AAERO,eAAO,EAAE,CAACD,yDAAD;AAFD,OAAT,CAI0C,GAA9BkF,+BAA8B,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCIAC,wBAAuB;AAAA;AAAA;;AAAvBA,8BAAuB,uDAVnC,yDAAS;AACRpF,eAAO,EAAE,CACPI,yDADO,EAEPC,uDAFO,EAGPA,+DAHO,EAIPC,uDAJO,EAKP+E,0FALO,CADD;AAQR7E,oBAAY,EAAE,CAAC8E,mEAAD;AARN,OAAT,CAUmC,GAAvBF,wBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCVAG,kBAAiB;AAe5B,mCACU5E,WADV,EAEUC,KAFV,EAGUC,SAHV,EAIUC,OAJV,EAKUC,KALV,EAMUC,KANV,EAMgC;AAAA;;AALtB;AACA;AACA;AACA;AACA;AACA;AAGP;;AAxByB;AAAA;AAAA,iBA2B5B,oBAAQ;AACN;AACA,iBAAKwE,iBAAL,GAAyB,KAAK7E,WAAL,CAAiBe,KAAjB,CAAuB;AAC9C+D,4BAAc,EAAE,CAAC,EAAD;AAD8B,aAAvB,CAAzB;AAIA,iBAAKvE,SAAL,GAAiB,KAAKL,SAAL,CAAeM,GAAf,CAAmB,WAAnB,CAAjB;AACA,iBAAKC,eAAL,GAAuB,KAAKP,SAAL,CAAeM,GAAf,CAAmB,iBAAnB,CAAvB;AACA,iBAAKc,IAAL,GAAY,KAAKpB,SAAL,CAAeM,GAAf,CAAmB,MAAnB,CAAZ;AACA,iBAAKE,MAAL,GAAc,KAAKR,SAAL,CAAeM,GAAf,CAAmB,QAAnB,CAAd;AACA,iBAAKyD,mBAAL,GAA2B,KAAK/D,SAAL,CAAeM,GAAf,CAAmB,qBAAnB,CAA3B;AACA,iBAAKuE,yBAAL,GAAiC,KAAK7E,SAAL,CAAeM,GAAf,CAAmB,2BAAnB,CAAjC;AACA,iBAAK0D,gBAAL,GAAwB,KAAKhE,SAAL,CAAeM,GAAf,CAAmB,kBAAnB,CAAxB;AACA,iBAAKwE,WAAL,GAAmB,KAAK9E,SAAL,CAAeM,GAAf,CAAmB,aAAnB,CAAnB;AACA,iBAAKG,SAAL,GAAiB,KAAKT,SAAL,CAAeM,GAAf,CAAmB,WAAnB,CAAjB;AACA,iBAAKuD,YAAL,GAAoB,KAAK7D,SAAL,CAAeM,GAAf,CAAmB,cAAnB,CAApB;AACD;AA3C2B;AAAA;AAAA,iBA6CtB,kBAAM;;;;;;;AACV,6BAAMI,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAN;;;;AACA,6BAAMD,OAAO,CAACC,GAAR,CAAY,KAAKgE,iBAAL,CAAuBI,KAAvB,CAA6BH,cAAzC,CAAN;;;;AACA,6BAAM,KAAKI,aAAL,EAAN;;;;AAEA,6BAAM,KAAK9E,KAAL,CAAW+E,aAAX,CAAyB,KAAK5E,SAA9B,EAAyC,KAAKE,eAA9C,EAA+D,KAAKa,IAApE,EAA0E,KAAKZ,MAA/E,EAAuF,KAAKuD,mBAA5F,EAAiH,KAAKc,yBAAtH,EAAiJ,KAAKb,gBAAtJ,EAAwK,KAAKc,WAA7K,EAA0L,KAAKrE,SAA/L,EAA0M,KAAKoD,YAA/M,EAA6N,KAAKc,iBAAL,CAAuBI,KAAvB,CAA6BH,cAA1P,EACH1D,SADG,EAAN;;;;;;;;;AAED;AApD2B;AAAA;AAAA,iBAsDtB,yBAAa;;;;;;;;;AACD,6BAAM,KAAKjB,OAAL,CAAaoC,MAAb,CAAoB;AACxCC,+BAAO,EAAE,sBAD+B;AAExCC,gCAAQ,EAAE;AAF8B,uBAApB,CAAN;;;AAAVtC;;AAMN,6BAAMA,OAAO,CAACuC,OAAR,EAAN;;;;AAEuB,6BAAMvC,OAAO,CAACwC,YAAR,EAAN;;;;AAAfC;AAAMC;;AACd,6BAAM,KAAK5C,KAAL,CAAWgB,OAAX,EAAN;;;;AACA,6BAAM,KAAK6B,YAAL,EAAN;;;AACAlC,6BAAO,CAACC,GAAR,CAAY,oBAAZ;;;;;;;;;AACD;AAnE2B;AAAA;AAAA,iBAqEtB,wBAAY;;;;;;;;AACF,6BAAM,KAAKR,KAAL,CAAWkC,MAAX,CAAkB;AACpC6C,8BAAM,EAAE,aAD4B;AAEpCrC,gCAAQ,EAAE,eAF0B;AAGpCP,+BAAO,EAAE,iHAH2B;AAIpCQ,+BAAO,EAAE,CAAC,IAAD;AAJ2B,uBAAlB,CAAN;;;AAAR3C;;AAON,6BAAMA,KAAK,CAACqC,OAAN,EAAN;;;;;;;;;AACD;AA9E2B;AAAA;AAAA,iBAiF5B,kBAAM;AACJ9B,mBAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,iBAAKZ,KAAL,CAAWgB,OAAX;AACD;AApF2B;;AAAA;AAAA;;;;gBATVoE;;gBACXC;;gBAAiBA;;gBAAWA;;gBAC5BnC;;gBAD+CmC;;;;AAQ3CV,wBAAiB,uDAL7B,0DAAU;AACTvB,gBAAQ,EAAE,oBADD;AAETC,kLAFS;;AAAA,OAAV,CAK6B,2EAgBL+B,yDACNC,6DACIA,uDACFA,+DACFnC,yEACAmC,6DArBW,GAAjBV,kBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLb,UAAM5F,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAEqG;AAFb,OADqB,CAAvB;;UAWaC,0BAAyB;AAAA;AAAA;;AAAzBA,gCAAyB,uDAJrC,yDAAS;AACRnG,eAAO,EAAE,CAACC,mEAAsBN,MAAtB,CAAD,CADD;AAERO,eAAO,EAAE,CAACD,yDAAD;AAFD,OAAT,CAIqC,GAAzBkG,0BAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCgBAC,mBAAkB;AAAA;AAAA;;AAAlBA,yBAAkB,uDAhB9B,yDAAS;AACRpG,eAAO,EAAE,CACPqG,0DADO,EAEPC,wDAFO,EAGPA,gEAHO,EAIPC,wDAJO,EAKPC,gFALO,EAMPC,uFANO,EAOPC,qGAPO,EAQPC,wGARO,EASPC,kGATO,EAUPC,yFAVO,EAWPC,kGAXO,CADD;AAcRtG,oBAAY,EAAE,CAACuG,yDAAD;AAdN,OAAT,CAgB8B,GAAlBX,mBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cC3Bb;;;AAcA,UAAMY,oBAAoB,GAAG,CAC3B,MAD2B,EAE3B,MAF2B,EAG3B,MAH2B,EAI3B,KAJ2B,EAK3B,OAL2B,EAM3B,MAN2B,EAO3B,OAP2B,EAQ3B,MAR2B,EAS3B,OAT2B,EAU3B,MAV2B,EAW3B,QAX2B,CAA7B;;UAmBaC,aAAY;AA2CvB,8BACUC,cADV,EAEUjG,kBAFV,EAGUkG,wBAHV,EAIUC,MAJV,EAKUC,iBALV,EAMUtG,KANV,EAOUuG,OAPV,EAQU3G,WARV,EASU4G,KATV,EAUU3G,KAVV,EAWUI,KAXV,EAYUF,OAZV,EAaU0G,QAbV,EAaoC;AAAA;;AAZ1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDV,wBAASC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAT;AACA,uBAAQD,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAR;AAKA,yBAAU,KAAV;AACA,2BAAY,KAAZ;AACA,wBAAS,KAAT,CA0CoC,CA5BpC;;AACA,wBAAS,EAAT;AA4BO;;AAzDgB;AAAA;AAAA,iBA2DvB,uBAAW;AACT,iBAAKP,wBAAL,CAA8BQ,OAA9B,CAAsCC,WAAtC;AACA,iBAAKC,WAAL,CAAiBD,WAAjB;AACA,iBAAKE,QAAL,CAAcF,WAAd;AACA,iBAAKG,cAAL,CAAoBH,WAApB;AACA,iBAAKI,WAAL,CAAiBJ,WAAjB,GALS,CAMT;AACA;AACA;AACA;AACD;AArEsB;AAAA;AAAA,iBAuEvB,oBAAQ;AAAA;;AACN,iBAAKJ,QAAL,CAAcS,UAAd,CAAyB,YAAK;AAC5B,oBAAI,CAAChH,kBAAL,CAAwBiH,YAAxB;AACD,aAFD,EADM,CAKN;;AACA,gBAAMC,EAAE,GAAI,KAAKjB,cAAL,CAAoBkB,QAApB,CAA6BC,QAA7B,CAAsClH,GAAtC,CAA0C,KAA1C,CAAZ;AACA,iBAAKE,MAAL,GAAc8G,EAAd,CAPM,CASN;;AACA,iBAAKnG,WAAL;;AAEA,gBAAI,KAAKmF,wBAAL,CAA8BQ,OAA9B,IAAyCW,SAA7C,EAAwD;AAEtD;AACA,mBAAKnB,wBAAL,CAA8BQ,OAA9B,GAAwC,KAAKR,wBAAL,CAA8BoB,2BAA9B,CAA0DxG,SAA1D,CAAoE,YAAK;AAC/G,sBAAI,CAACC,WAAL;;AACAT,uBAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,eAHuC,CAAxC;AAID,aAnBK,CAsBN;;;AACA,iBAAKgH,WAAL,GAAmB,KAAK7H,WAAL,CAAiBe,KAAjB,CAAuB;AACxCuB,qBAAO,EAAE,CAAC,EAAD;AAD+B,aAAvB,CAAnB,CAvBM,CA4BN;;AACA,iBAAK4E,WAAL,GAAmB,KAAK9G,KAAL,CAAW8B,gBAAX,CAA4Bd,SAA5B,CAAsC,yBAAe,EAAG;AACzE,oBAAI,CAACgD,QAAL,GAAgB0D,eAAhB;AACD,aAFkB,CAAnB;AAIA,iBAAKX,QAAL,GAAgB,KAAK/G,KAAL,CAAW2H,aAAX,CAAyB3G,SAAzB,CAAmC,eAAK,EAAG;AACzD,kBAAI4G,WAAJ;AACApH,qBAAO,CAACC,GAAR,CAAYT,KAAZ;;AAFyD,0DAItCA,KAJsC;AAAA;;AAAA;AAIzD,uEAA0B;AAAA,sBAAfkB,IAAe;;AACxB,sBAAIA,IAAI,CAAC2G,GAAL,IAAY,MAAI,CAACvH,MAArB,EAA6B;AAC3BsH,+BAAW,GAAG1G,IAAd;AACD;AACF;AARwD;AAAA;AAAA;AAAA;AAAA;;AASzD,oBAAI,CAACA,IAAL,GAAY0G,WAAW,CAAC1G,IAAxB;AACD,aAVe,CAAhB;AAWD;AAnHsB;AAAA;AAAA,iBAqHvB,gBAAI;AACF,iBAAKhB,kBAAL,CAAwBiH,YAAxB;AACA,iBAAKd,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;AAxHsB;AAAA;AAAA,iBA0HvB,+BAAmB;AACjB,iBAAK5H,kBAAL,CAAwBY,eAAxB;AACD;AA5HsB;AAAA;AAAA,iBA8HvB,8BAAkB;AAChB,iBAAKZ,kBAAL,CAAwBY,eAAxB;AACD;AAhIsB;AAAA;AAAA,iBAkIvB,8BAAkB;AAChB,iBAAKZ,kBAAL,CAAwBY,eAAxB;AACD;AApIsB;AAAA;AAAA,iBAuIjB,gBAAOR,MAAP,EAAa;;;;;;AACjB,2BAAKyH,aAAL,GAAqB,KAAK/H,KAAL,CAAWgI,UAAX,CAAsB1H,MAAtB,EAA8B,KAAKC,SAAnC,CAArB;AACA,2BAAK0H,SAAL,GAAiB,IAAjB;;AACA,6BAAM,KAAKC,WAAL,EAAN;;;;;;;;;AACD;AA3IsB;AAAA;AAAA,iBA6IjB,uBAAW;;;;;;;;AACK,6BAAM,KAAK1B,KAAL,CAAWrE,MAAX,CAAkB;AAC1CQ,gCAAQ,EAAE,gBADgC;AAE1CP,+BAAO,EAAE,6BAFiC;AAG1CC,gCAAQ,EAAE;AAHgC,uBAAlB,CAAN;;;AAAd6F;;AAMN,6BAAM,KAAKC,kBAAL,EAAN;;;;AACA,6BAAMD,WAAW,CAAC5F,OAAZ,EAAN;;;;;;;;;AACD;AAtJsB;AAAA;AAAA,iBAwJjB,kBAAShC,MAAT,EAAe;;;;;;AACnB,2BAAK8H,eAAL,GAAuB,KAAKpI,KAAL,CAAWqI,YAAX,CAAwB/H,MAAxB,EAAgC,KAAKC,SAArC,CAAvB;AACA,2BAAK0H,SAAL,GAAiB,KAAjB;;AACA,6BAAM,KAAKK,aAAL,EAAN;;;;;;;;;AACD;AA5JsB;AAAA;AAAA,iBA8JjB,yBAAa;;;;;;;;AACK,6BAAM,KAAK9B,KAAL,CAAWrE,MAAX,CAAkB;AAC5CQ,gCAAQ,EAAE,kBADkC;AAE5CP,+BAAO,EAAE,+BAFmC;AAG5CC,gCAAQ,EAAE;AAHkC,uBAAlB,CAAN;;;AAAhBiG;;AAMN,6BAAM,KAAKH,kBAAL,EAAN;;;;AACA,6BAAMG,aAAa,CAAChG,OAAd,EAAN;;;;;;;;;AACD;AAvKsB;AAAA;AAAA,iBAyKvB,sBAAaiG,KAAb,EAAkB;AAEhB;AACA;AACA;AACA;AACA;AAEA,gBAAIA,KAAK,CAACC,MAAN,CAAaC,QAAb,IAAyB,GAA7B,EAAkC;AAChC,mBAAKC,OAAL,GAAe,IAAf;AACD;;AAED,gBAAIH,KAAK,CAACC,MAAN,CAAaC,QAAb,IAAyB,GAA7B,EAAkC;AAChC,mBAAKC,OAAL,GAAe,KAAf;AACD;AAEF,WAzLsB,CA2LvB;;AA3LuB;AAAA;AAAA,iBA4LvB,uBAAW;AACT,iBAAKC,OAAL,CAAaC,aAAb,CAA2B,CAA3B,EAA8B,GAA9B,EAAmC,GAAnC;AACA,iBAAKC,MAAL,CAAYC,KAAZ,CAAkBC,MAAlB,GAA2B,KAA3B;AACA,iBAAKC,KAAL,CAAWF,KAAX,CAAiBC,MAAjB,GAA0B,KAA1B;AACD;AAhMsB;AAAA;AAAA,iBAkMvB,wBAAY;AACV,iBAAKJ,OAAL,CAAaM,WAAb;AACD,WApMsB,CAsMvB;;AAtMuB;AAAA;AAAA,iBAuMvB,iCAAqB;AACnB,iBAAKN,OAAL,CAAaC,aAAb,CAA2B,CAA3B,EAA8B,GAA9B,EAAmC,GAAnC;AACA,iBAAKM,QAAL,CAAcC,eAAd,GACGC,IADH,CACQ,UAACF,QAAD,EAAkC;AACtCA,sBAAQ,CAACG,IAAT;AAEH,aAJD;AAKD;AA9MsB;AAAA;AAAA,iBAgNvB,kBAAM;AAAA;;AACJ,iBAAKH,QAAL,CAAcC,eAAd,GACGC,IADH,CACQ,UAACF,QAAD,EAAkC;AACtC,oBAAI,CAACL,MAAL,CAAYC,KAAZ,CAAkBC,MAAlB,GAA2B,MAA3B;AACH,aAHD;AAID,WArNsB,CAsNvB;;AAtNuB;AAAA;AAAA,iBAuNvB,gBAAI;AAAA;;AACF,iBAAKG,QAAL,CAAcC,eAAd,GACGC,IADH,CACQ,UAACF,QAAD,EAAkC;AACtCA,sBAAQ,CAACG,IAAT;AACA,oBAAI,CAACR,MAAL,CAAYC,KAAZ,CAAkBC,MAAlB,GAA2B,MAA3B;AACH,aAJD;AAKD;AA7NsB;AAAA;AAAA,iBA8NvB,0BAAc,CAEb;AAhOsB;AAAA;AAAA,iBAiOvB,sBAAaO,CAAb,EAAc;AACZ9I,mBAAO,CAACC,GAAR,CAAY6I,CAAC,CAACd,MAAF,CAAS3D,KAArB;AACA,iBAAK0E,iBAAL,GAAyBD,CAAC,CAACd,MAAF,CAAS3D,KAAlC;AACD;AApOsB;AAAA;AAAA,iBAqOjB,iBAAQvE,MAAR,EAAgBqD,YAAhB,EAA8BpD,SAA9B,EAAyCqD,kBAAzC,EAA6D1B,QAA7D,EAAsEsH,eAAtE,EAAqF;;;;;;;AACzF;AACA;AAEA,0BAAG,CAACA,eAAJ,EAAqB;AACnBC,sCAAc,GAAGvH,QAAO,CAACA,OAAzB;AACD,uBAFD,MAEO;AACLuH,sCAAc,GAAGvH,QAAjB;AACD,wBACD;;;AACA1B,6BAAO,CAACC,GAAR,CAAY,KAAKiJ,kBAAjB;AACA,2BAAKA,kBAAL,CAAwB7E,KAAxB,GAAgC,IAAhC;AACA,2BAAK8E,cAAL,CAAoBrJ,MAApB,EAA4BqD,YAA5B,EAA0CpD,SAA1C,EAAqDqD,kBAArD,EAAyE6F,cAAzE;AACMjD,8BAAQ,KAAKA,KAAL,CAAWrE,MAAX,CAAkB;AAC9BC,+BAAO,EAAE,8BADqB;AAE9BC,gCAAQ,EAAE;AAFoB,uBAAlB;AAKdmE,2BAAK,CAAC4C,IAAN,CAAW,eAAK;AAAA,+BAAI5C,KAAK,CAAClE,OAAN,EAAJ;AAAA,uBAAhB;;;;;;;;;AACD;AAxPsB;AAAA;AAAA,iBA0PjB,wBAAehC,MAAf,EAAuBqD,YAAvB,EAAqCpD,SAArC,EAAgDqD,kBAAhD,EAAoE1B,OAApE,EAA2E;;;;;;;;;;AAC/E1B,6BAAO,CAACC,GAAR,CAAYyB,OAAZ;AAEA,2BAAK6E,QAAL,GAAgB,KAAK/G,KAAL,CAAWkC,OAAX,CACd5B,MADc,EAEdqD,YAFc,EAGdpD,SAHc,EAIdqD,kBAJc,EAKd1B,OALc,EAMdlB,SANc,CAMH,cAAI,EAAG;AAClB,8BAAI,CAACiG,WAAL,GAAmB,MAAI,CAACjH,KAAL,CAAWiB,WAAX,CAAuB,MAAI,CAACX,MAA5B,EAAoCU,SAApC,CACjB,cAAI,EAAG;AAAA,sEACoBE,IAAI,CAAC,UAAD,CADxB;AAAA;;AAAA;AACL,mFAA2C;AAAA,kCAAlCC,YAAkC;AAEzCX,qCAAO,CAACC,GAAR,CAAYU,YAAZ;AAEAA,0CAAY,CAACC,MAAb,GAAsB,KAAtB;AACAD,0CAAY,CAACE,gBAAb,GAAgC,KAAhC;AACAF,0CAAY,CAACG,SAAb,GAAyB,IAAzB,CANyC,CAQvC;;AACF,kCAAIH,YAAY,CAACZ,SAAb,KAA2B,MAAI,CAACA,SAApC,EAA+C;AAC3CY,4CAAY,CAACC,MAAb,GAAsB,IAAtB;AACAD,4CAAY,CAACE,gBAAb,GAAgC,IAAhC;AACAF,4CAAY,CAACG,SAAb,GAAyB,KAAzB;AACD;;AAEHH,0CAAY,CAACI,aAAb,GAA6BJ,YAAY,CAACK,OAAb,CAAqBC,MAAlD;AACAN,0CAAY,CAACO,IAAb,GAAoB,uDAAqB,IAAIC,IAAJ,CAASR,YAAY,CAACO,IAAtB,CAArB,EAAkD;AACpEE,8CAAc,EAAE,IADoD;AAEpEC,yCAAS,EAAE;AAFyD,+BAAlD,CAApB;AAKArB,qCAAO,CAACC,GAAR,CAAYU,YAAY,CAACe,OAAzB;AACD;AAvBI;AAAA;AAAA;AAAA;AAAA;;AAyBL,gCAAI,CAAClC,KAAL,CAAW8B,gBAAX,CAA4BC,IAA5B,CAAiCb,IAAI,CAAC,UAAD,CAAJ,CAAiBc,OAAjB,EAAjC;AACD,yBA3BgB,CAAnB;AA4BD,uBAnCe,CAAhB;;AAqCgB,6BAAM,KAAKjC,OAAL,CAAaoC,MAAb,CAAoB;AACxCC,+BAAO,EAAE,mBAD+B;AAExCC,gCAAQ,EAAE;AAF8B,uBAApB,CAAN;;;AAAVtC;;AAIN,6BAAM,KAAK6J,mBAAL,EAAN;;;;AACA,6BAAM7J,OAAO,CAACuC,OAAR,EAAN;;;;AAEuB,6BAAMvC,OAAO,CAACwC,YAAR,EAAN;;;;AAAfC;AAAMC;;;;;;;;;AACf;AA1SsB;AAAA;AAAA,iBA2SjB,gBAAOtC,SAAP,EAAkB0J,cAAlB,EAAkC3I,IAAlC,EAAwCZ,MAAxC,EAAgDuD,mBAAhD,EAAqEc,yBAArE,EAAgGb,gBAAhG,EAAkHc,WAAlH,EAA6H;;;;;;;AAEjI,6BAAMpE,OAAO,CAACC,GAAR,CAAY,6BAAZ,CAAN;;;;AAEA,6BAAM,KAAKqJ,WAAL,CAAiB3J,SAAjB,EAA4B0J,cAA5B,EAA4C3I,IAA5C,EAAkDZ,MAAlD,EAA0DuD,mBAA1D,EAA+Ec,yBAA/E,EAA0Gb,gBAA1G,EAA4Hc,WAA5H,EAAyI,KAAKrE,SAA9I,EAAyJ,KAAKoD,YAA9J,CAAN;;;;;;;;;AAED;AAjTsB;AAAA;AAAA,iBAkTjB,qBAAYxD,SAAZ,EAAuBE,eAAvB,EAAwCa,IAAxC,EAA8CZ,MAA9C,EAAsDuD,mBAAtD,EAA2Ec,yBAA3E,EAAsGb,gBAAtG,EAAwHc,WAAxH,EAAqIrE,SAArI,EAAgJoD,YAAhJ,EAA4J;;;;;;;;AAEtI,6BAAM,KAAK9D,KAAL,CAAWsC,MAAX,CAAkB;AAClDrD,iCAAS,EAAEiL,gGADuC;AAElDC,sCAAc,EAAE;AACd7J,mCAAS,EAATA,SADc;AAEdE,yCAAe,EAAfA,eAFc;AAGda,8BAAI,EAAJA,IAHc;AAIdZ,gCAAM,EAANA,MAJc;AAKduD,6CAAmB,EAAnBA,mBALc;AAMdc,mDAAyB,EAAzBA,yBANc;AAOdb,0CAAgB,EAAhBA,gBAPc;AAQdc,qCAAW,EAAXA,WARc;AASdrE,mCAAS,EAATA,SATc;AAUdoD,sCAAY,EAAZA;AAVc;AAFkC,uBAAlB,CAAN;;;AAApBsG;;AAgBN,6BAAMA,iBAAiB,CAAC3H,OAAlB,EAAN;;;;;;;;;AACD;AArUsB;AAAA;AAAA,iBAsUjB,eAAMnC,SAAN,EAAiBwD,YAAjB,EAA+BpD,SAA/B,EAA0CqD,kBAA1C,EAA8DC,mBAA9D,EAAmFC,gBAAnF,EAAqG5B,OAArG,EAA4G;;;;;;;AAChH,6BAAM1B,OAAO,CAACC,GAAR,CAAY,+BAAZ,CAAN;;;;AACA,6BAAM,KAAKyJ,UAAL,CAAgB/J,SAAhB,EAA2B,KAAKG,MAAhC,EAAwCqD,YAAxC,EAAsDpD,SAAtD,EAAiEqD,kBAAjE,EAAqFC,mBAArF,EAA0GC,gBAA1G,EAA4H5B,OAA5H,CAAN;;;;;;;;;AACD;AAzUsB;AAAA;AAAA,iBA0UjB,oBAAW/B,SAAX,EAAsBG,MAAtB,EAA8BqD,YAA9B,EAA4CpD,SAA5C,EAAuDqD,kBAAvD,EAA2EC,mBAA3E,EAAgGC,gBAAhG,EAAkH5B,OAAlH,EAAyH;;;;;;;;AACpG,6BAAM,KAAKrC,KAAL,CAAWsC,MAAX,CAAkB;AAC/CrD,iCAAS,EAAEqL,6FADoC;AAE/CH,sCAAc,EAAE;AACd7J,mCAAS,EAATA,SADc;AAEdG,gCAAM,EAANA,MAFc;AAGdqD,sCAAY,EAAZA,YAHc;AAIdC,4CAAkB,EAAlBA,kBAJc;AAKdrD,mCAAS,EAATA,SALc;AAMduD,0CAAgB,EAAhBA,gBANc;AAOdD,6CAAmB,EAAnBA,mBAPc;AAQd3B,iCAAO,EAAPA;AARc,yBAF+B;AAY/CS,gCAAQ,EAAE;AAZqC,uBAAlB,CAAN;;;AAAnByH;;AAeN,6BAAMA,gBAAgB,CAAC9H,OAAjB,EAAN;;;;;;;;;AACD,WA3VsB,CA4VvB;;AA5VuB;AAAA;AAAA,iBA6VjB,sBAAahC,MAAb,EAAqBkB,OAArB,EAA8BU,OAA9B,EAAuC/B,SAAvC,EAAkD0D,mBAAlD,EAAuEC,gBAAvE,EAAyFc,WAAzF,EAAsGhB,kBAAtG,EAA0HD,YAA1H,EAAwIpD,SAAxI,EAAiJ;;;;;;;;AACtH,6BAAM,KAAKV,KAAL,CAAWsC,MAAX,CAAkB;AACrDrD,iCAAS,EAAEuL,0FAD0C;AAErDL,sCAAc,EAAE;AACd1J,gCAAM,EAANA,MADc;AAEdkB,iCAAO,EAAPA,OAFc;AAGdU,iCAAO,EAAPA,OAHc;AAId/B,mCAAS,EAATA,SAJc;AAKd0D,6CAAmB,EAAnBA,mBALc;AAMdC,0CAAgB,EAAhBA,gBANc;AAOdc,qCAAW,EAAXA,WAPc;AAQdhB,4CAAkB,EAAlBA,kBARc;AASdD,sCAAY,EAAZA,YATc;AAUdpD,mCAAS,EAATA;AAVc,yBAFqC;AAcrDoC,gCAAQ,EAAE;AAd2C,uBAAlB,CAAN;;;AAAzB2H;;AAiBN,6BAAMA,sBAAsB,CAAChI,OAAvB,EAAN;;;;;;;;;AACD;AAhXsB;AAAA;AAAA,iBAiXjB,qBAAYnC,SAAZ,EAAuB0J,cAAvB,EAAuCvJ,MAAvC,EAA+CC,SAA/C,EAAwD;;;;;;;AAC5D,6BAAMC,OAAO,CAACC,GAAR,CAAYN,SAAZ,CAAN;;;;AACA,6BAAMK,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAN;;;;AACA,6BAAM,KAAK8J,gBAAL,CAAsBpK,SAAtB,EAAgC0J,cAAhC,EAAgDvJ,MAAhD,EAAwDC,SAAxD,CAAN;;;;;;;;;AACD;AArXsB;AAAA;AAAA,iBAsXjB,0BAAiBJ,SAAjB,EAA4B0J,cAA5B,EAA4CvJ,MAA5C,EAAoDC,SAApD,EAA6D;;;;;;;;AACzC,6BAAM,KAAKV,KAAL,CAAWsC,MAAX,CAAkB;AAChDrD,iCAAS,EAAE0L,0FADqC;AAEhDR,sCAAc,EAAE;AACd7J,mCAAS,EAATA,SADc;AAEd0J,wCAAc,EAAdA,cAFc;AAGdvJ,gCAAM,EAANA,MAHc;AAIdC,mCAAS,EAATA;AAJc;AAFgC,uBAAlB,CAAN;;;AAAlBkK;;AAUN,6BAAMA,eAAe,CAACnI,OAAhB,EAAN;;;;;;;;;AACD;AAlYsB;AAAA;AAAA,iBAmYjB,kBAAShC,MAAT,EAAiBY,IAAjB,EAAqB;;;;;;;AAEzB,6BAAMV,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAN;;;;AACA,6BAAM,KAAKiK,aAAL,CAAmBpK,MAAnB,EAA2BY,IAA3B,CAAN;;;;;;;;;AACD;AAvYsB;AAAA;AAAA,iBAwYjB,uBAAcZ,MAAd,EAAsBY,IAAtB,EAA0B;;;;;;;;AACF,6BAAM,KAAKrB,KAAL,CAAWsC,MAAX,CAAkB;AACpDrD,iCAAS,EAAE6L,iFADyC;AAEpDX,sCAAc,EAAE;AACd1J,gCAAM,EAANA,MADc;AAEdY,8BAAI,EAAJA;AAFc;AAFoC,uBAAlB,CAAN;;;AAAtB0J;;AAQN,6BAAMA,mBAAmB,CAACtI,OAApB,EAAN;;;;;;;;;AACD;AAlZsB;AAAA;AAAA,iBAmZjB,uBAAcnC,SAAd,EAAuB;;;;;;AAC3BK,6BAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,6BAAO,CAACC,GAAR,CAAY,KAAKH,MAAjB;AACAE,6BAAO,CAACC,GAAR,CAAYN,SAAZ;AACA,2BAAK0K,kBAAL,CAAwB,KAAKvK,MAA7B,EAAqCH,SAArC;;;;;;;;;AACD;AAxZsB;AAAA;AAAA,iBAyZjB,4BAAmBG,MAAnB,EAA2BH,SAA3B,EAAoC;;;;;;;;;;AAC1B,6BAAM,KAAKF,KAAL,CAAWkC,MAAX,CAAkB;AACpC6C,8BAAM,EAAE,sEAD4B;AAEpCrC,gCAAQ,EAAE,cAF0B;AAGpCC,+BAAO,EAAE,CACP;AACEkI,8BAAI,EAAE,QADR;AAEEtI,8BAAI,EAAE,QAFR;AAGEuI,iCAAO,EAAE,iBAACC,IAAD,EAAS;AAChBxK,mCAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AALH,yBADO,EAOJ;AACDqK,8BAAI,EAAE,QADL;AAEDC,iCAAO,EAAE,mBAAK;AACZ,kCAAI,CAACE,oBAAL,CAA0B,MAAI,CAAC3K,MAA/B,EAAuCH,SAAvC,WACO,UAAC+K,GAAD,EAAQ;AACX1K,qCAAO,CAACC,GAAR,CAAYyK,GAAZ;AACH,6BAHD;AAID;AAPA,yBAPI;AAH2B,uBAAlB,CAAN;;;AAARjL;;AAsBN,6BAAMA,KAAK,CAACqC,OAAN,EAAN;;;;;;;;;AACD;AAjbsB;AAAA;AAAA,iBAkbjB,8BAAqBhC,MAArB,EAA6BH,SAA7B,EAAsC;;;;;;;;;;AAE1C,2BAAKgL,gBAAL,GAAwB,KAAKnL,KAAL,CAAWoL,aAAX,CAAyB,KAAK9K,MAA9B,EAAsCH,SAAtC,EAAiDa,SAAjD,CACrB,gBAAM,EAAI;AACT,4BAAIgD,QAAQ,GAAGqH,MAAM,CAAC,UAAD,CAArB;;AADS,oEAGarH,QAHb;AAAA;;AAAA;AAGT,iFAAgC;AAAA,gCAArB9B,OAAqB;AAE9B;AACA;AACA;AAEAA,mCAAO,CAACX,aAAR,GAAwBW,OAAO,CAACV,OAAR,CAAgBC,MAAxC;AACAS,mCAAO,CAACd,MAAR,GAAiB,KAAjB;AACAc,mCAAO,CAACb,gBAAR,GAA2B,KAA3B;AACAa,mCAAO,CAACZ,SAAR,GAAoB,IAApB;AACAY,mCAAO,CAACR,IAAR,GAAe,uDAAqB,IAAIC,IAAJ,CAASO,OAAO,CAACR,IAAjB,CAArB,EAA6C;AAC1DE,4CAAc,EAAE,KAD0C;AAE1DC,uCAAS,EAAE;AAF+C,6BAA7C,CAAf,CAV8B,CAe9B;;AACA,gCAAIK,OAAO,CAAC3B,SAAR,KAAsB,MAAI,CAACA,SAA/B,EAA0C;AACxCC,qCAAO,CAACC,GAAR,CAAY,MAAZ;AACAyB,qCAAO,CAACd,MAAR,GAAiB,IAAjB;AACAc,qCAAO,CAACb,gBAAR,GAA2B,IAA3B;AACAa,qCAAO,CAACZ,SAAR,GAAoB,KAApB;AACD;AACH;AAzBS;AAAA;AAAA;AAAA;AAAA;;AA2BT,8BAAI,CAACtB,KAAL,CAAW8B,gBAAX,CAA4BC,IAA5B,CAAiCiC,QAAQ,CAAChC,OAAT,EAAjC;AACD,uBA7BqB,CAAxB;;AAiCgB,6BAAM,KAAKjC,OAAL,CAAaoC,MAAb,CAAoB;AACxCC,+BAAO,EAAE,qBAD+B;AAExCC,gCAAQ,EAAE;AAF8B,uBAApB,CAAN;;;AAAVtC;;AAKN,6BAAMA,OAAO,CAACuC,OAAR,EAAN;;;;AAEuB,6BAAMvC,OAAO,CAACwC,YAAR,EAAN;;;;AAAfC;AAAMC;AACdjC,6BAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,2BAAK6F,iBAAL,CAAuBgF,aAAvB;;;;;;;;;AACD;AA/dsB;AAAA;AAAA,iBAgejB,oBAAWhL,MAAX,EAAiB;;;;;;AACrBE,6BAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,6BAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,2BAAKiL,eAAL,CAAqBjL,MAArB;;;;;;;;;AACD;AApesB;AAAA;AAAA,iBAqejB,yBAAgBA,MAAhB,EAAsB;;;;;;;;;;AACZ,6BAAM,KAAKL,KAAL,CAAWkC,MAAX,CAAkB;AACpC6C,8BAAM,EAAE,mEAD4B;AAEpCrC,gCAAQ,EAAE,cAF0B;AAGpCC,+BAAO,EAAE,CACP;AACEkI,8BAAI,EAAE,QADR;AAEEtI,8BAAI,EAAE,QAFR;AAGEuI,iCAAO,EAAE,iBAACC,IAAD,EAAS;AAChBxK,mCAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AALH,yBADO,EAOJ;AACDqK,8BAAI,EAAE,QADL;AAEDC,iCAAO,EAAE;AAAA,mCAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACnB,6CAAM,KAAKS,iBAAL,CAAuBlL,MAAvB,CAAN;;AADmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAZ;AAAA;AAFR,yBAPI;AAH2B,uBAAlB,CAAN;;;AAARL;;AAmBN,6BAAMA,KAAK,CAACqC,OAAN,EAAN;;;;;;;;;AACD;AA1fsB;AAAA;AAAA,iBA2fjB,2BAAkBhC,MAAlB,EAAwB;;;;;;;;;;AAC5BE,6BAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,2BAAKmL,aAAL,GAAqB,KAAKzL,KAAL,CAAW0L,UAAX,CAAsBpL,MAAtB,EAA8BU,SAA9B,CACnB,wBAAc,EAAG;AACf,+BAAI,CAAChB,KAAL,CAAW2H,aAAX,CAAyB5F,IAAzB,CAA8B4J,MAAM,CAACN,MAAP,CAAcO,cAAd,EAA8B5J,OAA9B,EAA9B;;AACAxB,+BAAO,CAACC,GAAR,CAAY,OAAI,CAACT,KAAL,CAAW2H,aAAX,CAAyBkE,QAAzB,EAAZ;AACD,uBAJkB,CAArB;AAOA,2BAAK3L,kBAAL,CAAwBiH,YAAxB;AACA,2BAAKd,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACAtH,6BAAO,CAACC,GAAR,CAAY,oBAAZ;;AAEgB,6BAAM,KAAKV,OAAL,CAAaoC,MAAb,CAAoB;AACxCC,+BAAO,EAAE,qBAD+B;AAExCC,gCAAQ,EAAE;AAF8B,uBAApB,CAAN;;;AAAVtC;;AAIN,6BAAMA,OAAO,CAACuC,OAAR,EAAN;;;;AAEuB,6BAAMvC,OAAO,CAACwC,YAAR,EAAN;;;;AAAfC;AAAMC;;;;;;;;;AACf;AA/gBsB;AAAA;AAAA,iBAghBvB,uBAAW;AAAA;;AACT,iBAAKuE,cAAL,GAAsB,KAAKT,OAAL,CAAauF,cAAb,GAA8B9K,SAA9B,CACpB,iBAAO,EAAG;AACR,kBAAIT,SAAS,GAAGwL,OAAO,CAAC,OAAD,CAAvB;AACA,qBAAI,CAACxL,SAAL,GAAiBA,SAAjB;AACA,kBAAIoD,YAAY,GAAGoI,OAAO,CAAC,UAAD,CAA1B;AACA,kBAAInI,kBAAkB,GAAGmI,OAAO,CAAC,gBAAD,CAAhC,CAJQ,CAMR;AACA;AACA;;AACA,qBAAI,CAAC9E,WAAL,GAAmB,OAAI,CAACjH,KAAL,CAAWiB,WAAX,CAAuB,OAAI,CAACX,MAA5B,EAAoCU,SAApC,CACjB,kBAAQ,EAAG;AACT,oBAAMgL,YAAY,GAAGC,QAAQ,CAAC,cAAD,CAA7B;AACA,oBAAMC,WAAW,GAAGD,QAAQ,CAAC,aAAD,CAA5B;AACA,oBAAME,qBAAqB,GAAGF,QAAQ,CAAC,uBAAD,CAAtC;AACA,oBAAMG,KAAK,GAAGH,QAAQ,CAAC,OAAD,CAAtB;AACA,oBAAM/K,IAAI,GAAG+K,QAAQ,CAAC,MAAD,CAArB;AACA,oBAAMI,SAAS,GAAGJ,QAAQ,CAAC,WAAD,CAA1B;AACA,oBAAMK,QAAQ,GAAGL,QAAQ,CAAC,UAAD,CAAzB;AACA,oBAAIjI,QAAQ,GAAGiI,QAAQ,CAAC,UAAD,CAAvB;AACA,oBAAIhE,SAAS,GAAG,KAAhB;AACA,oBAAIvG,IAAI,GAAG,uDACT,IAAIC,IAAJ,CAASsK,QAAQ,CAAC,MAAD,CAAjB,CADS,EACmB;AAC1BrK,gCAAc,EAAE,IADU;AAE1BC,2BAAS,EAAE;AAFe,iBADnB,CAAX,CAVS,CAgBT;AACA;;AACA,oBAAImK,YAAY,KAAK,OAAI,CAACzL,SAA1B,EAAqC;AAClC,yBAAI,CAACa,MAAL,GAAc,IAAd;AACF,iBApBQ,CAsBT;;;AACAiL,yBAAS,CAACE,IAAV,CAAeC,YAAf;;AAEA,yBAASA,YAAT,CAAsBC,QAAtB,EAA8B;AAC5B,sBAAI,CAACA,QAAL,EAAe,CACd;;AAED,sBAAIA,QAAQ,KAAKlM,SAAjB,EAA4B;AAC1B0H,6BAAS,GAAG,IAAZ;AACD;AACJ,iBAhCU,CAkCT;AACA;;;AAnCS,4DAoCajE,QApCb;AAAA;;AAAA;AAoCT,yEAAgC;AAAA,wBAArB9B,OAAqB;AAC9B1B,2BAAO,CAACC,GAAR,CAAYyB,OAAZ,EAD8B,CAG9B;AACA;AACA;;AAEAA,2BAAO,CAACX,aAAR,GAAwBW,OAAO,CAACV,OAAR,CAAgBC,MAAxC;AACAS,2BAAO,CAACd,MAAR,GAAiB,KAAjB;AACAc,2BAAO,CAACb,gBAAR,GAA2B,KAA3B;AACAa,2BAAO,CAACZ,SAAR,GAAoB,IAApB;AACAY,2BAAO,CAACR,IAAR,GAAe,uDAAqB,IAAIC,IAAJ,CAASO,OAAO,CAACR,IAAjB,CAArB,EAA6C;AAC1DE,oCAAc,EAAE,KAD0C;AAE1DC,+BAAS,EAAE;AAF+C,qBAA7C,CAAf,CAX8B,CAgB9B;;AACA,wBAAIK,OAAO,CAAC3B,SAAR,KAAsB,OAAI,CAACA,SAA/B,EAA0C;AACxC2B,6BAAO,CAACd,MAAR,GAAiB,IAAjB;AACAc,6BAAO,CAACb,gBAAR,GAA2B,IAA3B;AACAa,6BAAO,CAACZ,SAAR,GAAoB,KAApB;AACD,qBArB6B,CAuB9B;;;AACA,yBAAK,IAAI2C,CAAC,GAAG,CAAb,EAAgB/B,OAAO,CAACV,OAAR,CAAgBC,MAAhB,GAAyBwC,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD;AAC/C/B,6BAAO,CAACV,OAAR,CAAgByC,CAAhB,EAAmBvC,IAAnB,GAA0B,uDAAqB,IAAIC,IAAJ,CAASO,OAAO,CAACV,OAAR,CAAgByC,CAAhB,EAAmBvC,IAA5B,CAArB,EAAwD;AAChFG,iCAAS,EAAE;AADqE,uBAAxD,CAA1B;AAGD,qBA5B6B,CA6B/B;;AAED;AAnES;AAAA;AAAA;AAAA;AAAA;;AAqET,uBAAI,CAACqK,WAAL,GAAmBA,WAAnB;AACA,uBAAI,CAACF,YAAL,GAAoBA,YAApB;AACA,uBAAI,CAACG,qBAAL,GAA6BA,qBAA7B;AACA,uBAAI,CAACzK,IAAL,GAAYA,IAAZ;AACA,uBAAI,CAAC2K,SAAL,GAAiBA,SAAjB;AACA,uBAAI,CAACC,QAAL,GAAgBA,QAAhB;AACA,uBAAI,CAACtI,QAAL,GAAgBA,QAAhB;AACA,uBAAI,CAACiE,SAAL,GAAiBA,SAAjB;AACA,uBAAI,CAAC/G,IAAL,GAAYA,IAAZ;AACA,uBAAI,CAACkL,KAAL,GAAaA,KAAb;AACA,uBAAI,CAACxI,kBAAL,GAA0BA,kBAA1B;AACA,uBAAI,CAACD,YAAL,GAAoBA,YAApB;AACD,eAlFgB,CAAnB;AAoFD,aA9FmB,CAAtB;AAgGD;AAjnBsB;AAAA;AAAA,iBAknBvB,wBAAezB,OAAf,EAAsB;AACpB,gBAAMwK,cAAc,GAAGxK,OAAvB;AACAwK,0BAAc,CAACC,OAAf,CAAuB,MAAvB,EAAgC,MAAhC,EAFoB,CAGpB;AACA;AACA;;AAEA,mBAAOD,cAAP;AACD;AA1nBsB;AAAA;AAAA,iBA2nBjB,mBAAUnE,KAAV,EAAe;;;;;;;;AACnB,2BAAKvB,cAAL,GAAsB,KAAKT,OAAL,CAAauF,cAAb,GAA8B9K,SAA9B,CACpB,iBAAO,EAAG;AACR,4BAAIT,SAAS,GAAGwL,OAAO,CAAC,OAAD,CAAvB;AACA,+BAAI,CAACxL,SAAL,GAAiBA,SAAjB;AACA,4BAAIoD,YAAY,GAAGoI,OAAO,CAAC,UAAD,CAA1B;AACA,4BAAInI,kBAAkB,GAAGmI,OAAO,CAAC,gBAAD,CAAhC,CAJQ,CAMR;AACA;AACA;;AACA,+BAAI,CAAC9E,WAAL,GAAmB,OAAI,CAACjH,KAAL,CAAWiB,WAAX,CAAuB,OAAI,CAACX,MAA5B,EAAoCU,SAApC,CACjB,kBAAQ,EAAG;AACT,8BAAMgL,YAAY,GAAGC,QAAQ,CAAC,cAAD,CAA7B;AACA,8BAAMC,WAAW,GAAGD,QAAQ,CAAC,aAAD,CAA5B;AACA,8BAAM/K,IAAI,GAAG+K,QAAQ,CAAC,MAAD,CAArB;AACA,8BAAMG,KAAK,GAAGH,QAAQ,CAAC,OAAD,CAAtB;AACA,8BAAMI,SAAS,GAAGJ,QAAQ,CAAC,WAAD,CAA1B;AACA,8BAAIjI,QAAQ,GAAGiI,QAAQ,CAAC,UAAD,CAAvB;AACA,8BAAIhE,SAAS,GAAG,KAAhB;AACA,8BAAIvG,IAAI,GAAG,uDACT,IAAIC,IAAJ,CAASsK,QAAQ,CAAC,MAAD,CAAjB,CADS,EACmB;AAC1BrK,0CAAc,EAAE,IADU;AAE1BC,qCAAS,EAAE;AAFe,2BADnB,CAAX,CARS,CAcT;;AACAwK,mCAAS,CAACE,IAAV,CAAeC,YAAf;;AAEA,mCAASA,YAAT,CAAsBC,QAAtB,EAA8B;AAC5B,gCAAI,CAACA,QAAL,EAAe,CACd;;AAED,gCAAIA,QAAQ,KAAKlM,SAAjB,EAA4B;AAC1B0H,uCAAS,GAAG,IAAZ;AACD;AACJ,2BAxBU,CA0BT;AACA;;;AA3BS,sEA4BajE,QA5Bb;AAAA;;AAAA;AA4BT,mFAAgC;AAAA,kCAArB9B,OAAqB;AAE9B;AACA;AACA;AAEAA,qCAAO,CAACX,aAAR,GAAwBW,OAAO,CAACV,OAAR,CAAgBC,MAAxC;AACAS,qCAAO,CAACd,MAAR,GAAiB,KAAjB;AACAc,qCAAO,CAACb,gBAAR,GAA2B,KAA3B;AACAa,qCAAO,CAACZ,SAAR,GAAoB,IAApB;AACAY,qCAAO,CAACR,IAAR,GAAe,uDAAqB,IAAIC,IAAJ,CAASO,OAAO,CAACR,IAAjB,CAArB,EAA6C;AAC1DE,8CAAc,EAAE,IAD0C;AAE1DC,yCAAS,EAAE;AAF+C,+BAA7C,CAAf,CAV8B,CAe9B;;AACA,kCAAIK,OAAO,CAAC3B,SAAR,KAAsB,OAAI,CAACA,SAA/B,EAA0C;AACxC2B,uCAAO,CAACd,MAAR,GAAiB,IAAjB;AACAc,uCAAO,CAACb,gBAAR,GAA2B,IAA3B;AACAa,uCAAO,CAACZ,SAAR,GAAoB,KAApB;AACD,+BApB6B,CAsB9B;;;AACA,mCAAK,IAAI2C,CAAC,GAAG,CAAb,EAAgB/B,OAAO,CAACV,OAAR,CAAgBC,MAAhB,GAAyBwC,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD;AAC/C/B,uCAAO,CAACV,OAAR,CAAgByC,CAAhB,EAAmBvC,IAAnB,GAA0B,uDAAqB,IAAIC,IAAJ,CAASO,OAAO,CAACV,OAAR,CAAgByC,CAAhB,EAAmBvC,IAA5B,CAArB,EAAwD;AAChFG,2CAAS,EAAE;AADqE,iCAAxD,CAA1B;AAGD;;AAEDK,qCAAO,CAACA,OAAR,GAAkB,OAAI,CAAC0K,cAAL,CAAoB1K,OAAO,CAACA,OAA5B,CAAlB,CA7B8B,CA8B9B;AAEF;AA5DS;AAAA;AAAA;AAAA;AAAA;;AA8DT,iCAAI,CAACgK,WAAL,GAAmBA,WAAnB;AACA,iCAAI,CAACF,YAAL,GAAoBA,YAApB;AACA,iCAAI,CAACtK,IAAL,GAAYA,IAAZ;AACA,iCAAI,CAAC2K,SAAL,GAAiBA,SAAjB;AACA,iCAAI,CAACrI,QAAL,GAAgBA,QAAhB;AACA,iCAAI,CAACiE,SAAL,GAAiBA,SAAjB;AACA,iCAAI,CAAC/G,IAAL,GAAYA,IAAZ;AACA,iCAAI,CAACkL,KAAL,GAAaA,KAAb;AACA,iCAAI,CAACxI,kBAAL,GAA0BA,kBAA1B;AACA,iCAAI,CAACD,YAAL,GAAoBA,YAApB;;AAEA,iCAAI,CAAC3D,KAAL,CAAW8B,gBAAX,CAA4BC,IAA5B,CAAiCiC,QAAQ,CAAChC,OAAT,EAAjC;AAED,yBA5EgB,CAAnB;AA8ED,uBAxFmB,CAAtB;;AA2FA,6BAAM6K,UAAU,CAAC,YAAK;AACpB,4BAAMrG,KAAK,GAAG,OAAI,CAACA,KAAL,CAAWrE,MAAX,CAAkB;AAC9BC,iCAAO,EAAE,yBADqB;AAE9BC,kCAAQ,EAAE;AAFoB,yBAAlB,CAAd;;AAIAkG,6BAAK,CAACuE,MAAN,CAAaC,QAAb;AACAvG,6BAAK,CAAC4C,IAAN,CAAW,eAAK;AAAA,iCAAI5C,KAAK,CAAClE,OAAN,EAAJ;AAAA,yBAAhB;AACD,uBAPe,EAOb,IAPa,CAAhB;;;;;;;;;AAQD;AA/tBsB;;AAAA;AAAA;;;;gBAnCR0K;;gBASRC;;gBAGAC;;gBAZAF;;gBAHyCG;;gBACzCpK;;gBACAqK;;gBAEWC;;gBAEXC;;gBAAkCA;;gBAAjBA;;gBAA8CA;;gBAQ/DC;;;;;;gBA0BNJ;AAASK,iBAACF,uDAAD,EAAa;AAAC,sBAAQ;AAAT,WAAb;;;gBACTH;AAASK,iBAACF,wDAAD,EAAc;AAAC,sBAAQ;AAAT,WAAd;;;gBACTH;AAASK,iBAAC,oBAAD,EAAuB;AAAC,sBAAQ;AAAT,WAAvB;;;AAJCtH,mBAAY,wDALxB,2DAAU;AACTjD,gBAAQ,EAAE,eADD;AAETC,6KAFS;;AAAA,OAAV,CAKwB,4EA4CG8J,8DACIC,gGACMC,8GAClBF,sDACWG,+DACZpK,yEACEqK,8EACIC,0DACNC,8DACAA,8DACAA,8DACEA,gEACCC,gEAxDG,GAAZrH,aAAY,CAAZ;;;;;;;;;;;;;ACtCb;;;AAAAuH,uCAAe,s3CAAf;;;;;;;;;;;;;ACAA;;;AAAAA,uCAAe,osDAAf;;;;;;;;;;;;;ACAA;;;AAAAA,uCAAe,4rDAAf;;;;;;;;;;;;;ACAA;;;AAAAA,uCAAe,w/WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["routes","path","component","_edit_comment_page__WEBPACK_IMPORTED_MODULE_0__","EditCommentPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","EditCommentPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_edit_comment_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_edit_comment_page__WEBPACK_IMPORTED_MODULE_1__","EditCommentPage","formBuilder","modal","navParams","loading","posts","alert","postEmitterService","commentID","get","commentContents","postID","userEmail","console","log","editCommentForm","group","newComment","dismiss","postPageRefresh","editComment","subscribe","getPostInfo","post","postComments","isUser","canDeleteComment","canReport","repliesLength","replies","length","date","Date","includeSeconds","addSuffix","commentsSubject$","next","reverse","editLoading","comment","create","message","duration","present","onDidDismiss","role","data","confirmAlert","cssClass","buttons","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","_ionic_angular__WEBPACK_IMPORTED_MODULE_7__","src_app_services_post_service__WEBPACK_IMPORTED_MODULE_2__","src_app_emitters_post_page_emitter_service__WEBPACK_IMPORTED_MODULE_3__","selector","template","_reply_comment_page__WEBPACK_IMPORTED_MODULE_0__","ReplyCommentPageRoutingModule","ReplyCommentPageModule","_reply_comment_routing_module__WEBPACK_IMPORTED_MODULE_0__","_reply_comment_page__WEBPACK_IMPORTED_MODULE_1__","ReplyCommentPage","replyCommentForm","reply","userFullName","userProfilePicture","commentUserFullName","commentUserEmail","replyComment","comments","i","replyLoading","_report_comment_page__WEBPACK_IMPORTED_MODULE_0__","ReportCommentPageRoutingModule","ReportCommentPageModule","_report_comment_routing_module__WEBPACK_IMPORTED_MODULE_0__","_report_comment_page__WEBPACK_IMPORTED_MODULE_1__","ReportCommentPage","reportCommentForm","reportedReason","commentUserProfilePicture","commentDate","value","reportLoading","reportComment","header","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","_ionic_angular__WEBPACK_IMPORTED_MODULE_5__","_post_page_page__WEBPACK_IMPORTED_MODULE_0__","PostPagePageRoutingModule","PostPagePageModule","_angular_common__WEBPACK_IMPORTED_MODULE_10__","_angular_forms__WEBPACK_IMPORTED_MODULE_11__","_ionic_angular__WEBPACK_IMPORTED_MODULE_12__","_post_page_routing_module__WEBPACK_IMPORTED_MODULE_2__","_components_custom_component_module__WEBPACK_IMPORTED_MODULE_0__","src_app_modals_reply_comment_reply_comment_module__WEBPACK_IMPORTED_MODULE_3__","src_app_modals_report_comment_report_comment_module__WEBPACK_IMPORTED_MODULE_4__","src_app_modals_edit_comment_edit_comment_module__WEBPACK_IMPORTED_MODULE_5__","src_app_modals_edit_post_edit_post_module__WEBPACK_IMPORTED_MODULE_6__","src_app_modals_replies_page_replies_page_module__WEBPACK_IMPORTED_MODULE_7__","_post_page_page__WEBPACK_IMPORTED_MODULE_1__","LANGUAGE_FILTER_LIST","PostPagePage","activatedRoute","singlePostEmitterService","router","changeDetectorRef","profile","toast","location","document","getElementById","subsVar","unsubscribe","commentsSub","postsSub","userDetailsSub","postInfoSub","onPopState","onBackAction","id","snapshot","paramMap","undefined","invokeSinglePostPageRefresh","commentForm","commentsFromSub","postsSubject$","currentPost","_id","navigate","followPostSub","followPost","following","followToast","refreshAfterDelete","unfollowPostSub","unFollowPost","unFollowToast","event","detail","currentY","showFab","content","scrollToPoint","tabBar","style","height","votes","scrollToTop","textarea","getInputElement","then","blur","e","commentInputValue","fromFooterInput","checkedComment","footerCommentInput","commentLoading","refreshAfterComment","commentCotents","reportModal","src_app_modals_report_comment_report_comment_page__WEBPACK_IMPORTED_MODULE_5__","componentProps","reportModalConfig","replyModal","src_app_modals_reply_comment_reply_comment_page__WEBPACK_IMPORTED_MODULE_4__","replyModalConfig","src_app_modals_replies_page_replies_page_page__WEBPACK_IMPORTED_MODULE_9__","repliesPageModalConfig","editCommentModal","src_app_modals_edit_comment_edit_comment_page__WEBPACK_IMPORTED_MODULE_6__","editAlertConfig","editPostModal","src_app_modals_edit_post_edit_post_page__WEBPACK_IMPORTED_MODULE_7__","editPostModalConfig","deleteCommentAlert","text","handler","blah","deleteCommentLoading","err","deleteCommentSub","deleteComment","values","detectChanges","deletePostAlert","deletePostLoading","deletePostSub","deletePost","Object","remainingPosts","getValue","getUserDetails","details","creatorEmail","postInfo","creatorName","creatorProfilePicture","title","followers","hashtags","find","findFollower","follower","updatedComment","replace","filterLanguage","setTimeout","target","complete","_angular_router__WEBPACK_IMPORTED_MODULE_13__","src_app_emitters_post_page_emitter_service__WEBPACK_IMPORTED_MODULE_8__","src_app_emitters_single_post_page_emitter_service__WEBPACK_IMPORTED_MODULE_10__","_angular_core__WEBPACK_IMPORTED_MODULE_14__","src_app_services_profile_service__WEBPACK_IMPORTED_MODULE_3__","_angular_forms__WEBPACK_IMPORTED_MODULE_15__","_ionic_angular__WEBPACK_IMPORTED_MODULE_16__","_angular_common__WEBPACK_IMPORTED_MODULE_17__","args","__webpack_exports__"],"sources":["webpack:///src/app/modals/edit-comment/edit-comment-routing.module.ts","webpack:///src/app/modals/edit-comment/edit-comment.module.ts","webpack:///src/app/modals/edit-comment/edit-comment.page.ts","webpack:///src/app/modals/reply-comment/reply-comment-routing.module.ts","webpack:///src/app/modals/reply-comment/reply-comment.module.ts","webpack:///src/app/modals/reply-comment/reply-comment.page.ts","webpack:///src/app/modals/report-comment/report-comment-routing.module.ts","webpack:///src/app/modals/report-comment/report-comment.module.ts","webpack:///src/app/modals/report-comment/report-comment.page.ts","webpack:///src/app/pages/posts/post-page/post-page-routing.module.ts","webpack:///src/app/pages/posts/post-page/post-page.module.ts","webpack:///src/app/pages/posts/post-page/post-page.page.ts","webpack:///src/app/modals/edit-comment/edit-comment.page.html","webpack:///src/app/modals/reply-comment/reply-comment.page.html","webpack:///src/app/modals/report-comment/report-comment.page.html","webpack:///src/app/pages/posts/post-page/post-page.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditCommentPage } from './edit-comment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditCommentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditCommentPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditCommentPageRoutingModule } from './edit-comment-routing.module';\n\nimport { EditCommentPage } from './edit-comment.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    EditCommentPageRoutingModule\n  ],\n  declarations: [EditCommentPage]\n})\nexport class EditCommentPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ModalController, NavParams, LoadingController, AlertController } from '@ionic/angular';\nimport { PostsService } from 'src/app/services/post.service';\nimport { PostPageEmitterService } from 'src/app/emitters/post-page-emitter.service';\nimport { formatDistanceToNow } from 'date-fns';\n\n\n@Component({\n  selector: 'app-edit-comment',\n  templateUrl: './edit-comment.page.html',\n  styleUrls: ['./edit-comment.page.scss'],\n})\nexport class EditCommentPage implements OnInit {\n  editCommentForm: FormGroup;\n  postID: string;\n  commentContents: string;\n  commentID: string;\n  userEmail: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController,\n    private navParams: NavParams,\n    private loading: LoadingController,\n    private posts: PostsService,\n    private alert: AlertController,\n    private postEmitterService: PostPageEmitterService\n  ) {\n    }\n\n  ngOnInit() {\n\n     this.commentID = this.navParams.get('commentID');\n     this.commentContents = this.navParams.get('commentCotents');\n     this.postID = this.navParams.get('postID');\n     this.userEmail = this.navParams.get('userEmail');\n\n     console.log('post_id: ' + this.postID );\n     console.log(this.commentID);\n     console.log(this.commentContents );\n     console.log(this.userEmail );\n\n     // To collect comment data\n     this.editCommentForm = this.formBuilder.group({\n      newComment: this.commentContents\n    });\n\n  }\n\n  cancel() {\n    console.log('cancelling');\n    this.modal.dismiss();\n  }\n\n  refreshComment() {\n    this.postEmitterService.postPageRefresh();\n  }\n\n   edit(newComment) {\n    console.log('editting');\n    console.log(newComment);\n    this.posts.editComment(this.commentID, this.postID, newComment.newComment).subscribe(comment => {\n\n      this.posts.getPostInfo(this.postID).subscribe(\n        post => {\n\n          for (let postComments of post['comments']) {\n\n            postComments.isUser = false;\n            postComments.canDeleteComment = false;\n            postComments.canReport = true;\n\n              // If this comment is the logged in user, they can delete and edit\n            if (postComments.userEmail === this.userEmail) {\n                postComments.isUser = true;\n                postComments.canDeleteComment = true;\n                postComments.canReport = false;\n              }\n\n            postComments.repliesLength = postComments.replies.length;\n            postComments.date = formatDistanceToNow( new Date(postComments.date), {\n              includeSeconds: true,\n              addSuffix: false\n            });\n           }\n          this.posts.commentsSubject$.next(post['comments'].reverse());\n        });\n      this.editLoading(comment['newComment']);\n    });\n  }\n\n  async editLoading(comment) {\n    const loading = await this.loading.create({\n      message: 'Editing your comment...',\n      duration: 2000\n    });\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n    await this.modal.dismiss();\n    await this.confirmAlert();\n    console.log('Loading dismissed!');\n  }\n\n  async confirmAlert() {\n    const alert = await this.alert.create({\n      cssClass: 'success-alert',\n      message: 'Your comment has been edited.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ReplyCommentPage } from './reply-comment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReplyCommentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReplyCommentPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReplyCommentPageRoutingModule } from './reply-comment-routing.module';\n\nimport { ReplyCommentPage } from './reply-comment.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ReplyCommentPageRoutingModule\n  ],\n  declarations: [ReplyCommentPage]\n})\nexport class ReplyCommentPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ModalController, NavParams, LoadingController, AlertController } from '@ionic/angular';\nimport { PostsService } from 'src/app/services/post.service';\nimport { PostPageEmitterService } from 'src/app/emitters/post-page-emitter.service';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\n\n@Component({\n  selector: 'app-reply-post',\n  templateUrl: './reply-comment.page.html',\n  styleUrls: ['./reply-comment.page.scss'],\n})\nexport class ReplyCommentPage implements OnInit {\n  replyCommentForm: FormGroup;\n  postID: string;\n  userProfilePicture: string;\n  userEmail: string;\n  userFullName: string;\n  commentID: string;\n  commentUserFullName: string;\n  commentUserEmail: string;\n  comment: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController,\n    private navParams: NavParams,\n    private loading: LoadingController,\n    private alert: AlertController,\n    private posts: PostsService,\n    private postEmitterService: PostPageEmitterService) {\n\n    }\n\n  ngOnInit() {\n    // To collect comment data\n    this.replyCommentForm = this.formBuilder.group({\n     reply: ['']\n   });\n\n    this.commentID = this.navParams.get('commentID');\n    this.postID = this.navParams.get('postID');\n    this.userFullName = this.navParams.get('userFullName');\n    this.userEmail = this.navParams.get('userEmail');\n    this.userProfilePicture = this.navParams.get('userProfilePicture');\n    this.commentUserFullName = this.navParams.get('commentUserFullName');\n    this.commentUserEmail = this.navParams.get('commentUserEmail');\n    this.comment = this.navParams.get('comment');\n\n    console.log(this.commentUserEmail);\n    console.log(this.userEmail)\n\n  }\n\n  async reply(reply) {\n    await console.log('replying to comment...');\n    // tslint:disable-next-line: max-line-length\n    await this.posts.replyComment(this.commentID, this.postID, reply.reply, this.userFullName, this.userEmail, this.userProfilePicture, this.commentUserFullName, this.commentUserEmail)\n      .subscribe(\n        data => {\n          console.log(data);\n          let comments = data['comments'];\n          let userEmail = data['userEmail'];\n          // Give User ability to Edit, Delete, or Report a Comment.\n            // User cannot Report their own comment **\n          for (const comment of comments) {\n\n              // If the Logged in User's Email equals the creatorEmail of the Comment,\n              // they will be given the ability to edit and delete their Comment.\n              // The ability for them to report their own comment is disabled\n\n              comment.repliesLength = comment.replies.length;\n              comment.isUser = false;\n              comment.canDeleteComment = false;\n              comment.canReport = true;\n              comment.date = formatDistanceToNow( new Date(comment.date), {\n                includeSeconds: false,\n                addSuffix: false\n              });\n\n              // If this comment is the logged in user, they can delete and edit\n              if (comment.userEmail === userEmail) {\n                comment.isUser = true;\n                comment.canDeleteComment = true;\n                comment.canReport = false;\n              }\n\n              // Format the Reply Dates\n              for (let i = 0; comment.replies.length > i; i++) {\n                comment.replies[i].date = formatDistanceToNow( new Date(comment.replies[i].date), {\n                  addSuffix: false\n                });\n             }\n\n           }\n          this.posts.commentsSubject$.next(comments.reverse());\n        }\n      );\n    await this.replyLoading();\n  }\n\n  async replyLoading() {\n    const loading = await this.loading.create({\n      message: 'Replying to Comment...',\n      duration: 2000\n    });\n\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n    await this.modal.dismiss();\n    await this.confirmAlert();\n    console.log('Loading dismissed!');\n  }\n\n  async confirmAlert() {\n    const alert = await this.alert.create({\n      cssClass: 'success-alert',\n      message: 'Your comment has been added.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  cancel () {\n    console.log('cancelling reply...');\n    this.modal.dismiss();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ReportCommentPage } from './report-comment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReportCommentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportCommentPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReportCommentPageRoutingModule } from './report-comment-routing.module';\n\nimport { ReportCommentPage } from './report-comment.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ReportCommentPageRoutingModule\n  ],\n  declarations: [ReportCommentPage]\n})\nexport class ReportCommentPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { ModalController, NavParams, LoadingController, AlertController} from '@ionic/angular';\nimport { PostsService } from 'src/app/services/post.service';\n\n@Component({\n  selector: 'app-report-comment',\n  templateUrl: './report-comment.page.html',\n  styleUrls: ['./report-comment.page.scss'],\n})\nexport class ReportCommentPage implements OnInit {\n  reportCommentForm: FormGroup;\n  commentContents: string;\n  commentUserFullName: string;\n  commentUserProfilePicture: string;\n  commentUserEmail: string;\n  commentID: string;\n  commentDate: string;\n  post: string;\n  postID: string;\n  userEmail: string;\n  userFullName: string;\n  reportReason: string;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController,\n    private navParams: NavParams,\n    private loading: LoadingController,\n    private posts: PostsService,\n    private alert: AlertController) {\n\n\n    }\n\n\n  ngOnInit() {\n    // To collect comment data\n    this.reportCommentForm = this.formBuilder.group({\n      reportedReason: ['']\n   });\n\n    this.commentID = this.navParams.get('commentID');\n    this.commentContents = this.navParams.get('commentContents');\n    this.post = this.navParams.get('post');\n    this.postID = this.navParams.get('postID');\n    this.commentUserFullName = this.navParams.get('commentUserFullName');\n    this.commentUserProfilePicture = this.navParams.get('commentUserProfilePicture');\n    this.commentUserEmail = this.navParams.get('commentUserEmail');\n    this.commentDate = this.navParams.get('commentDate');\n    this.userEmail = this.navParams.get('userEmail');\n    this.userFullName = this.navParams.get('userFullName');\n  }\n\n  async report() {\n    await console.log('reporting comment...');\n    await console.log(this.reportCommentForm.value.reportedReason);\n    await this.reportLoading();\n    // tslint:disable-next-line: max-line-length\n    await this.posts.reportComment(this.commentID, this.commentContents, this.post, this.postID, this.commentUserFullName, this.commentUserProfilePicture, this.commentUserEmail, this.commentDate, this.userEmail, this.userFullName, this.reportCommentForm.value.reportedReason )\n      .subscribe();\n  }\n\n  async reportLoading() {\n    const loading = await this.loading.create({\n      message: 'Reporting comment...',\n      duration: 2000\n    });\n\n\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n    await this.modal.dismiss();\n    await this.confirmAlert();\n    console.log('Loading dismissed!');\n  }\n\n  async confirmAlert() {\n    const alert = await this.alert.create({\n      header: 'Report Sent',\n      cssClass: 'success-alert',\n      message: 'Thank you for reporting this user. Find Your Future will notifiy the user and take futher actions if necessary.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n\n  cancel() {\n    console.log('cancelling comment...');\n    this.modal.dismiss();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PostPagePage } from './post-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostPagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PostPagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CustomComponentsModule } from '../../../components/custom-component.module';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PostPagePage } from './post-page.page';\nimport { PostPagePageRoutingModule } from './post-page-routing.module';\nimport { ReplyCommentPageModule } from 'src/app/modals/reply-comment/reply-comment.module';\nimport { ReportCommentPageModule } from 'src/app/modals/report-comment/report-comment.module';\nimport { EditCommentPageModule } from 'src/app/modals/edit-comment/edit-comment.module';\nimport { EditPostPageModule } from 'src/app/modals/edit-post/edit-post.module';\nimport { RepliesPagePageModule } from 'src/app/modals/replies-page/replies-page.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    PostPagePageRoutingModule,\n    CustomComponentsModule,\n    ReplyCommentPageModule,\n    ReportCommentPageModule,\n    EditCommentPageModule,\n    EditPostPageModule,\n    RepliesPagePageModule\n  ],\n  declarations: [PostPagePage]\n})\nexport class PostPagePageModule {}\n","import { Component, OnInit, ViewChild, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { PostsService } from 'src/app/services/post.service';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n// tslint:disable-next-line: max-line-length\nimport { ToastController, AlertController, ModalController, IonContent, LoadingController, IonTextarea } from '@ionic/angular';\nimport { formatDistanceToNow } from 'date-fns';\nimport { ReplyCommentPage } from 'src/app/modals/reply-comment/reply-comment.page';\nimport { ReportCommentPage } from 'src/app/modals/report-comment/report-comment.page';\nimport { EditCommentPage } from 'src/app/modals/edit-comment/edit-comment.page';\nimport { EditPostPage } from 'src/app/modals/edit-post/edit-post.page';\nimport { PostPageEmitterService } from 'src/app/emitters/post-page-emitter.service';\nimport { RepliesPagePage } from 'src/app/modals/replies-page/replies-page.page';\nimport { PlatformLocation } from '@angular/common';\nimport { SinglePostPageEmitterService } from 'src/app/emitters/single-post-page-emitter.service';\nimport { Subscription } from 'rxjs';\n\n\nconst LANGUAGE_FILTER_LIST = [\n  'fuck',\n  'damn',\n  'shit',\n  'ass',\n  'bitch',\n  'slut',\n  'whore',\n  'dick',\n  'pussy',\n  'cunt',\n  'faggot'\n]\n\n@Component({\n  selector: 'app-post-page',\n  templateUrl: './post-page.page.html',\n  styleUrls: ['./post-page.page.scss'],\n})\nexport class PostPagePage implements OnInit, OnDestroy {\n\n  @ViewChild(IonContent, {static: true}) content: IonContent;\n  @ViewChild(IonTextarea, {static: true}) textarea: IonTextarea;\n  @ViewChild('footerCommentInput', {static: true}) footerCommentInput: IonTextarea;\n\n  tabBar = document.getElementById('myTabBar');\n  votes = document.getElementById('votes');\n\n  userEmail: string;\n  userFullName: string;\n  userProfilePicture: string;\n  showFab = false;\n  following = false;\n  isUser = false;\n\n  title: string;\n  post: string;\n  comments;\n  followers: [];\n  hashtags: [];\n  date: string;\n  creatorEmail: string;\n  creatorName: string;\n  creatorProfilePicture: string;\n  commentID: string;\n  postID: string;\n\n  // debugging\n  scroll = '';\n  commentForm: FormGroup;\n  // Footer Comment\n  commentInputValue: any;\n\n  postInfoSub: Subscription;\n  commentsSub: Subscription;\n  postsSub: Subscription;\n  userDetailsSub: Subscription;\n  deletePostSub: Subscription;\n  deleteCommentSub: Subscription;\n  unfollowPostSub: Subscription;\n  followPostSub: Subscription;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private postEmitterService: PostPageEmitterService,\n    private singlePostEmitterService: SinglePostPageEmitterService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private posts: PostsService,\n    private profile: ProfileService,\n    private formBuilder: FormBuilder,\n    private toast: ToastController,\n    private modal: ModalController,\n    private alert: AlertController,\n    private loading: LoadingController,\n    private location: PlatformLocation\n    ) { }\n\n  ngOnDestroy() {\n    this.singlePostEmitterService.subsVar.unsubscribe();\n    this.commentsSub.unsubscribe();\n    this.postsSub.unsubscribe();\n    this.userDetailsSub.unsubscribe();\n    this.postInfoSub.unsubscribe();\n    // this.deletePostSub.unsubscribe();\n    // this.deleteCommentSub.unsubscribe();\n    // this.unfollowPostSub.unsubscribe();\n    // this.followPostSub.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.location.onPopState(() => {\n      this.postEmitterService.onBackAction();\n    });\n\n    // Get Post ID from navigation params on the main posts tab\n    const id  = this.activatedRoute.snapshot.paramMap.get('_id');\n    this.postID = id;\n\n    // Get the user's information to insert into the comment metadata\n    this.getPostInfo();\n\n    if (this.singlePostEmitterService.subsVar == undefined) {\n\n      // For Comment and Reply Refreshes\n      this.singlePostEmitterService.subsVar = this.singlePostEmitterService.invokeSinglePostPageRefresh.subscribe(() => {\n        this.getPostInfo();\n        console.log('Refreshing Replies');\n      });\n    }\n\n\n    // To collect comment data\n    this.commentForm = this.formBuilder.group({\n      comment: ['']\n    });\n\n\n    // Subscribe to comments Behavior subject for live upates, specifically when the user posts a comment on the UI.\n    this.commentsSub = this.posts.commentsSubject$.subscribe(commentsFromSub => {\n      this.comments = commentsFromSub;\n    });\n\n    this.postsSub = this.posts.postsSubject$.subscribe(posts => {\n      let currentPost;\n      console.log(posts);\n\n      for (const post of posts) {\n        if (post._id == this.postID) {\n          currentPost = post;\n        }\n      }\n      this.post = currentPost.post;\n    });\n  }\n\n  back() {\n    this.postEmitterService.onBackAction();\n    this.router.navigate(['/home/posts']);\n  }\n\n  refreshAfterComment() {\n    this.postEmitterService.postPageRefresh();\n  }\n\n  refreshAfterDelete() {\n    this.postEmitterService.postPageRefresh();\n  }\n\n  refreshAfterFollow() {\n    this.postEmitterService.postPageRefresh();\n  }\n\n\n  async follow(postID) {\n    this.followPostSub = this.posts.followPost(postID, this.userEmail);\n    this.following = true;\n    await this.followToast();\n  }\n\n  async followToast() {\n    const followToast = await this.toast.create({\n      cssClass: 'followed-toast',\n      message: 'You are FOLLOWING this post',\n      duration: 2000\n    });\n    // await this.refreshAfterFollow();\n    await this.refreshAfterDelete();\n    await followToast.present();\n  }\n\n  async unFollow(postID) {\n    this.unfollowPostSub = this.posts.unFollowPost(postID, this.userEmail);\n    this.following = false;\n    await this.unFollowToast();\n  }\n\n  async unFollowToast() {\n    const unFollowToast = await this.toast.create({\n      cssClass: 'unfollowed-toast',\n      message: 'You are UNFOLLOWING this post',\n      duration: 2000\n    });\n    // await this.refreshAfterFollow();\n    await this.refreshAfterDelete();\n    await unFollowToast.present();\n  }\n\n  logScrolling(event) {\n\n    // if (event.detail) {\n    //   console.log('ScrollTop: ' + event.detail.scrollTop);\n    //   console.log('Y: ' + event.detail.currentY);\n    //   console.log('Event Details: ' + event.detail);\n    // }\n\n    if (event.detail.currentY >= 480) {\n      this.showFab = true;\n    }\n\n    if (event.detail.currentY <= 480) {\n      this.showFab = false;\n    }\n\n  }\n\n  // Hide the Tab bar when the user is attempting to make a comment\n  ScrollToTop() {\n    this.content.scrollToPoint(0, 200, 100);\n    this.tabBar.style.height = '0px';\n    this.votes.style.height = '0px';\n  }\n\n  fabScrollTop() {\n    this.content.scrollToTop();\n  }\n\n  // When the user submits the comment, the tabar will show up again\n  ScrollToPostedComment() {\n    this.content.scrollToPoint(0, 600, 100);\n    this.textarea.getInputElement()\n      .then((textarea: HTMLTextAreaElement) => {\n        textarea.blur();\n\n    });\n  }\n\n  onBlur() {\n    this.textarea.getInputElement()\n      .then((textarea: HTMLTextAreaElement) => {\n        this.tabBar.style.height = '70px';\n    });\n  }\n  // for when the user un focuses out of the comment textarea but hasnt submitted the comment\n  blur() {\n    this.textarea.getInputElement()\n      .then((textarea: HTMLTextAreaElement) => {\n        textarea.blur();\n        this.tabBar.style.height = '70px';\n    });\n  }\n  filterComments() {\n    \n  }\n  commentInput(e) {\n    console.log(e.detail.value);\n    this.commentInputValue = e.detail.value;\n  }\n  async comment(postID, userFullName, userEmail, userProfilePicture, comment, fromFooterInput) {\n    // Values from Footer Input and Desktop inputs are different.\n    // Making a standardized values to send to commentLoading()\n    let checkedComment;\n    if(!fromFooterInput) {\n      checkedComment = comment.comment\n    } else {\n      checkedComment = comment\n    }\n    // Reset Comment Input\n    console.log(this.footerCommentInput)\n    this.footerCommentInput.value = null;\n    this.commentLoading(postID, userFullName, userEmail, userProfilePicture, checkedComment);\n    const toast = this.toast.create({\n      message: 'Your comment has been added.',\n      duration: 1500\n    });\n\n    toast.then(toast => toast.present());\n  }\n\n  async commentLoading(postID, userFullName, userEmail, userProfilePicture, comment) {\n    console.log(comment);\n    \n    this.postsSub = this.posts.comment(\n      postID,\n      userFullName,\n      userEmail,\n      userProfilePicture,\n      comment\n    ).subscribe( data => {\n      this.postInfoSub = this.posts.getPostInfo(this.postID).subscribe(\n        post => {\n          for (let postComments of post['comments']) {\n\n            console.log(postComments);\n\n            postComments.isUser = false;\n            postComments.canDeleteComment = false;\n            postComments.canReport = true;\n\n              // If this comment is from the logged in user, they can delete and edit\n            if (postComments.userEmail === this.userEmail) {\n                postComments.isUser = true;\n                postComments.canDeleteComment = true;\n                postComments.canReport = false;\n              }\n\n            postComments.repliesLength = postComments.replies.length;\n            postComments.date = formatDistanceToNow( new Date(postComments.date), {\n              includeSeconds: true,\n              addSuffix: false\n            });\n\n            console.log(postComments.comment);\n          }\n\n          this.posts.commentsSubject$.next(post['comments'].reverse());\n        });\n    });\n\n    const loading = await this.loading.create({\n      message: 'Adding Comment...',\n      duration: 1000\n    });\n    await this.refreshAfterComment();\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n  }\n  async report(commentID, commentCotents, post, postID, commentUserFullName, commentUserProfilePicture, commentUserEmail, commentDate) {\n    // Get information from comment\n    await console.log('Attemping to report comment');\n    // tslint:disable-next-line: max-line-length\n    await this.reportModal(commentID, commentCotents, post, postID, commentUserFullName, commentUserProfilePicture, commentUserEmail, commentDate, this.userEmail, this.userFullName);\n\n  }\n  async reportModal(commentID, commentContents, post, postID, commentUserFullName, commentUserProfilePicture, commentUserEmail, commentDate, userEmail, userFullName) {\n\n    const reportModalConfig = await this.modal.create({\n    component: ReportCommentPage,\n    componentProps: {\n      commentID,\n      commentContents,\n      post,\n      postID,\n      commentUserFullName,\n      commentUserProfilePicture,\n      commentUserEmail,\n      commentDate,\n      userEmail,\n      userFullName,\n    }\n    });\n\n    await reportModalConfig.present();\n  }\n  async reply(commentID, userFullName, userEmail, userProfilePicture, commentUserFullName, commentUserEmail, comment) {\n    await console.log('Attemping to reply to comment');\n    await this.replyModal(commentID, this.postID, userFullName, userEmail, userProfilePicture, commentUserFullName, commentUserEmail, comment);\n  }\n  async replyModal(commentID, postID, userFullName, userEmail, userProfilePicture, commentUserFullName, commentUserEmail, comment) {\n    const replyModalConfig = await this.modal.create({\n      component: ReplyCommentPage,\n      componentProps: {\n        commentID,\n        postID,\n        userFullName,\n        userProfilePicture,\n        userEmail,\n        commentUserEmail,\n        commentUserFullName,\n        comment\n      },\n      cssClass: 'reply-modal'\n    });\n\n    await replyModalConfig.present();\n  }\n  // tslint:disable-next-line: max-line-length\n  async repliesModal(postID, replies, comment, commentID, commentUserFullName, commentUserEmail, commentDate, userProfilePicture, userFullName, userEmail) {\n    const repliesPageModalConfig = await this.modal.create({\n      component: RepliesPagePage,\n      componentProps: {\n        postID,\n        replies,\n        comment,\n        commentID,\n        commentUserFullName,\n        commentUserEmail,\n        commentDate,\n        userProfilePicture,\n        userFullName,\n        userEmail\n      },\n      cssClass: 'reply-modal'\n    });\n\n    await repliesPageModalConfig.present();\n  }\n  async editComment(commentID, commentCotents, postID, userEmail) {\n    await console.log(commentID);\n    await console.log('Attemping to edit comment');\n    await this.editCommentModal(commentID,commentCotents, postID, userEmail);\n  }\n  async editCommentModal(commentID, commentCotents, postID, userEmail) {\n    const editAlertConfig = await this.modal.create({\n    component: EditCommentPage,\n    componentProps: {\n      commentID,\n      commentCotents,\n      postID,\n      userEmail\n    }\n    });\n\n    await editAlertConfig.present();\n  }\n  async editPost(postID, post) {\n\n    await console.log('Attemping to edit comment');\n    await this.editPostModal(postID, post);\n  }\n  async editPostModal(postID, post) {\n    const editPostModalConfig = await this.modal.create({\n    component: EditPostPage,\n    componentProps: {\n      postID,\n      post\n    }\n    });\n\n    await editPostModalConfig.present();\n  }\n  async deleteComment(commentID) {\n    console.log('deleting comment..');\n    console.log(this.postID);\n    console.log(commentID);\n    this.deleteCommentAlert(this.postID, commentID);\n  }\n  async deleteCommentAlert(postID, commentID) {\n    const alert = await this.alert.create({\n      header: 'Are you sure you want to delete this comment? This cannot be undone.',\n      cssClass: 'danger-alert',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: (blah) => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Delete',\n          handler: () => {\n            this.deleteCommentLoading(this.postID, commentID)\n            .catch((err) => {\n                console.log(err);\n            });\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n  async deleteCommentLoading(postID, commentID) {\n\n    this.deleteCommentSub = this.posts.deleteComment(this.postID, commentID).subscribe(\n       values  => {\n        let comments = values['comments'];\n\n        for (const comment of comments) {\n\n          // If the Logged in User's Email equals the creatorEmail of the Comment,\n          // they will be given the ability to edit and delete their Comment.\n          // The ability for them to report their own comment is disabled\n\n          comment.repliesLength = comment.replies.length;\n          comment.isUser = false;\n          comment.canDeleteComment = false;\n          comment.canReport = true;\n          comment.date = formatDistanceToNow( new Date(comment.date), {\n            includeSeconds: false,\n            addSuffix: false\n          });\n\n          // If this comment is the logged in user, they can delete and edit\n          if (comment.userEmail === this.userEmail) {\n            console.log('true');\n            comment.isUser = true;\n            comment.canDeleteComment = true;\n            comment.canReport = false;\n          }\n       }\n\n        this.posts.commentsSubject$.next(comments.reverse());\n      }\n\n    );\n\n    const loading = await this.loading.create({\n      message: 'Deleting Comment...',\n      duration: 2000\n    });\n\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n    console.log('Loading dismissed!');\n    this.changeDetectorRef.detectChanges();\n  }\n  async deletePost(postID) {\n    console.log('deleting post..');\n    console.log(postID);\n    this.deletePostAlert(postID);\n  }\n  async deletePostAlert(postID) {\n    const alert = await this.alert.create({\n      header: 'Are you sure you want to delete this post? This cannot be undone.',\n      cssClass: 'danger-alert',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: (blah) => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Delete',\n          handler: async () => {\n            await this.deletePostLoading(postID);\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n  async deletePostLoading(postID) {\n    console.log(postID);\n    this.deletePostSub = this.posts.deletePost(postID).subscribe(\n      remainingPosts => {\n        this.posts.postsSubject$.next(Object.values(remainingPosts).reverse());\n        console.log(this.posts.postsSubject$.getValue());\n      }\n    );\n\n    this.postEmitterService.onBackAction();\n    this.router.navigate(['/home/posts']);\n    console.log('Loading dismissed!');\n\n    const loading = await this.loading.create({\n      message: 'Deleting Comment...',\n      duration: 2000\n    });\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n  }\n  getPostInfo() {\n    this.userDetailsSub = this.profile.getUserDetails().subscribe(\n      details => {\n        let userEmail = details['email'];\n        this.userEmail = userEmail;\n        let userFullName = details['fullName'];\n        let userProfilePicture = details['profilePicture'];\n\n        // Get information about selected post.\n        // Format its date on the front end\n        // initiate this components post metadata from data in Posts Service\n        this.postInfoSub = this.posts.getPostInfo(this.postID).subscribe(\n          postInfo =>  {\n            const creatorEmail = postInfo['creatorEmail'];\n            const creatorName = postInfo['creatorName'];\n            const creatorProfilePicture = postInfo['creatorProfilePicture'];\n            const title = postInfo['title'];\n            const post = postInfo['post'];\n            const followers = postInfo['followers'];\n            const hashtags = postInfo['hashtags'];\n            let comments = postInfo['comments'];\n            let following = false;\n            let date = formatDistanceToNow(\n              new Date(postInfo['date']), {\n                includeSeconds: true,\n                addSuffix: false\n              });\n\n            // Check if the post creator is the same as the User\n            // Enables the user to delete and edit post if true\n            if (creatorEmail === this.userEmail) {\n               this.isUser = true;\n            }\n\n            // See if the Logged in User is following the post on this page\n            followers.find(findFollower);\n\n            function findFollower(follower) {\n              if (!follower) {\n              }\n\n              if (follower === userEmail) {\n                following = true;\n              }\n          }\n\n            // Give User ability to Edit, Delete, or Report a Comment.\n            // User cannot Report their own comment **\n            for (const comment of comments) {\n              console.log(comment);\n\n              // If the Logged in User's Email equals the creatorEmail of the Comment,\n              // they will be given the ability to edit and delete their Comment.\n              // The ability for them to report their own comment is disabled\n\n              comment.repliesLength = comment.replies.length;\n              comment.isUser = false;\n              comment.canDeleteComment = false;\n              comment.canReport = true;\n              comment.date = formatDistanceToNow( new Date(comment.date), {\n                includeSeconds: false,\n                addSuffix: false\n              });\n\n              // If this comment is the logged in user, they can delete and edit\n              if (comment.userEmail === this.userEmail) {\n                comment.isUser = true;\n                comment.canDeleteComment = true;\n                comment.canReport = false;\n              }\n\n              // Format the Reply Dates\n              for (let i = 0; comment.replies.length > i; i++) {\n                comment.replies[i].date = formatDistanceToNow( new Date(comment.replies[i].date), {\n                  addSuffix: false\n                });\n              }\n             // comment.comment = comment.comment.replace(/go/g, \"not go :(\");\n\n           }\n\n            this.creatorName = creatorName;\n            this.creatorEmail = creatorEmail;\n            this.creatorProfilePicture = creatorProfilePicture;\n            this.date = date;\n            this.followers = followers;\n            this.hashtags = hashtags;\n            this.comments = comments;\n            this.following = following;\n            this.post = post;\n            this.title = title;\n            this.userProfilePicture = userProfilePicture;\n            this.userFullName = userFullName;\n          }\n        );\n      }\n    );\n  }\n  filterLanguage(comment) {\n    const updatedComment = comment;\n    updatedComment.replace('fuck',  '****');\n    // LANGUAGE_FILTER_LIST.forEach(word => {\n    //   comment.replace(word, '****');\n    // });\n\n    return updatedComment;\n  }\n  async doRefresh(event) {\n    this.userDetailsSub = this.profile.getUserDetails().subscribe(\n      details => {\n        let userEmail = details['email'];\n        this.userEmail = userEmail;\n        let userFullName = details['fullName'];\n        let userProfilePicture = details['profilePicture'];\n\n        // Get information about selected post.\n        // Format its date on the front end\n        // initiate this components post metadata from data in Posts Service\n        this.postInfoSub = this.posts.getPostInfo(this.postID).subscribe(\n          postInfo =>  {\n            const creatorEmail = postInfo['creatorEmail'];\n            const creatorName = postInfo['creatorName'];\n            const post = postInfo['post'];\n            const title = postInfo['title'];\n            const followers = postInfo['followers'];\n            let comments = postInfo['comments'];\n            let following = false;\n            let date = formatDistanceToNow(\n              new Date(postInfo['date']), {\n                includeSeconds: true,\n                addSuffix: false\n              });\n\n            // See if the Logged in User is following the post on this page\n            followers.find(findFollower);\n\n            function findFollower(follower) {\n              if (!follower) {\n              }\n\n              if (follower === userEmail) {\n                following = true;\n              }\n          }\n\n            // Give User ability to Edit, Delete, or Report a Comment.\n            // User cannot Report their own comment **\n            for (const comment of comments) {\n\n              // If the Logged in User's Email equals the creatorEmail of the Comment,\n              // they will be given the ability to edit and delete their Comment.\n              // The ability for them to report their own comment is disabled\n\n              comment.repliesLength = comment.replies.length;\n              comment.isUser = false;\n              comment.canDeleteComment = false;\n              comment.canReport = true;\n              comment.date = formatDistanceToNow( new Date(comment.date), {\n                includeSeconds: true,\n                addSuffix: false\n              });\n\n              // If this comment is the logged in user, they can delete and edit\n              if (comment.userEmail === this.userEmail) {\n                comment.isUser = true;\n                comment.canDeleteComment = true;\n                comment.canReport = false;\n              }\n\n              // Format the Reply Dates\n              for (let i = 0; comment.replies.length > i; i++) {\n                comment.replies[i].date = formatDistanceToNow( new Date(comment.replies[i].date), {\n                  addSuffix: false\n                });\n              }\n\n              comment.comment = this.filterLanguage(comment.comment);\n              // comment.comment = comment.comment.replace(/go/g, \"not go :(\");\n\n           }\n\n            this.creatorName = creatorName;\n            this.creatorEmail = creatorEmail;\n            this.date = date;\n            this.followers = followers;\n            this.comments = comments;\n            this.following = following;\n            this.post = post;\n            this.title = title;\n            this.userProfilePicture = userProfilePicture;\n            this.userFullName = userFullName;\n\n            this.posts.commentsSubject$.next(comments.reverse());\n\n          }\n        );\n      }\n    );\n\n    await setTimeout(() => {\n      const toast = this.toast.create({\n        message: 'Page has been refreshed',\n        duration: 3000\n      });\n      event.target.complete();\n      toast.then(toast => toast.present());\n    }, 2000);\n  }\n\n}\n","export default \"<!-- Desktop Header -->\\n<ion-header class=\\\"ion-hide-md-down\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"cancel()\\\">\\n        cancel\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title slot=\\\"start\\\">Edit Comment</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<!-- Mobile Header -->\\n<ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar>\\n    <ion-icon id=\\\"back-arrow-icons\\\" (click)=\\\"cancel()\\\" name=\\\"arrow-back\\\"></ion-icon>\\n    <ion-title slot=\\\"end\\\">Edit Comment</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-row class=\\\"ion-justify-content-center\\\">\\n    <ion-col size=\\\"10\\\">\\n      <form [formGroup]=\\\"editCommentForm\\\" (ngSubmit)=\\\"edit(this.editCommentForm.value)\\\">\\n        <ion-textarea\\n          (keyup.enter)=\\\"edit(this.editCommentForm.value)\\\"\\n          class=\\\"comment-input\\\"\\n          autogrow=\\\"true\\\"\\n          autocapitalize=\\\"true\\\"\\n          rows=\\\"15\\\"\\n          spellcheck=\\\"true\\\"\\n          wrap=\\\"soft\\\"\\n          type=\\\"text\\\"\\n          formControlName=\\\"newComment\\\">\\n        </ion-textarea>\\n\\n        <div style=\\\"text-align: center; width: 100%; margin-top: 20px;\\\" >\\n          <ion-button class=\\\"orange-button\\\" style=\\\"margin: 0 auto;\\\" type=\\\"submit\\\">\\n            Edit\\n          </ion-button>\\n        </div>\\n      </form>\\n    </ion-col>\\n  </ion-row>\\n</ion-content>\\n\";","export default \"<!-- Desktop Header -->\\n<ion-header class=\\\"ion-hide-md-down\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-button (click)=\\\"cancel()\\\">\\n          cancel\\n        </ion-button>\\n      </ion-buttons>\\n    </ion-buttons>\\n    <ion-title slot=\\\"end\\\">Reply to Comment</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<!-- Mobile Header -->\\n<ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar>\\n      <ion-icon id=\\\"back-arrow-icons\\\" (click)=\\\"cancel()\\\" name=\\\"arrow-back\\\"></ion-icon>\\n    <ion-title slot=\\\"end\\\">Reply to Comment</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n\\n      <ion-col size=\\\"10\\\">\\n        <p id=\\\"userfullname\\\">{{this.comment}}</p>\\n        <form [formGroup]=\\\"replyCommentForm\\\" (ngSubmit)=\\\"this.replyCommentForm.value.reply.length > 0 ? reply(this.replyCommentForm.value) : null\\\">\\n          <ion-textarea\\n            (keydown.control.enter)=\\\"this.replyCommentForm.value.reply.length > 0 ? reply(this.replyCommentForm.value) : null\\\"\\n            class=\\\"reply-input\\\"\\n            autogrow=\\\"true\\\"\\n            autocapitalize=\\\"true\\\"\\n            rows=\\\"15\\\"\\n            spellcheck=\\\"true\\\"\\n            wrap=\\\"soft\\\"\\n            type=\\\"text\\\"\\n            placeholder=\\\"Replying to: {{userFullName}}\\\" formControlName=\\\"reply\\\">\\n          </ion-textarea>\\n\\n          <div style=\\\"text-align: center; width: 100%; margin-top: 20px;\\\" >\\n            <ion-button class=\\\"orange-button\\\" style=\\\"margin: 0 auto;\\\" type=\\\"submit\\\">\\n              Reply\\n            </ion-button>\\n          </div>\\n        </form>\\n      </ion-col>\\n  </ion-row>\\n</ion-content>\\n\";","export default \"<!-- Desktop Header -->\\n<ion-header class=\\\"ion-hide-md-down\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"cancel()\\\">\\n        cancel\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title slot=\\\"start\\\">Report Post</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<!-- Mobile Header -->\\n<ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar>\\n    <ion-icon id=\\\"back-arrow-icons\\\" (click)=\\\"cancel()\\\" name=\\\"arrow-back\\\"></ion-icon>\\n    <ion-title slot=\\\"end\\\">Report Post</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-row class=\\\"ion-justify-content-center\\\" style=\\\"margin-top: 50px;\\\">\\n    <ion-col size=\\\"10\\\">\\n      <p id=\\\"userfullname\\\">User being Reported: {{commentUserFullName}}</p>\\n      <hr style=\\\"background: #999\\\">\\n      <p id=\\\"comment\\\">Comment: {{commentContents}}</p>\\n    </ion-col>\\n  </ion-row>\\n\\n  <ion-row class=\\\"ion-justify-content-center\\\">\\n    <ion-col size=\\\"10\\\">\\n      <form [formGroup]=\\\"reportCommentForm\\\" (ngSubmit)=\\\"report()\\\">\\n        <ion-textarea\\n          (keyup.enter)=\\\"report()\\\"\\n          class=\\\"report-input\\\"\\n          autogrow=\\\"true\\\"\\n          autocapitalize=\\\"true\\\"\\n          rows=\\\"8\\\"\\n          spellcheck=\\\"true\\\"\\n          wrap=\\\"soft\\\"\\n          type=\\\"text\\\"\\n          placeholder=\\\"Why are you reporting this post?\\\" formControlName=\\\"reportedReason\\\">\\n        </ion-textarea>\\n\\n          <div style=\\\"text-align: center; width: 100%; margin-top: 20px;\\\" >\\n            <ion-button class=\\\"orange-button\\\" style=\\\"margin: 0 auto;\\\" type=\\\"submit\\\">\\n              Report\\n            </ion-button>\\n          </div>\\n      </form>\\n    </ion-col>\\n</ion-row>\\n</ion-content>\\n\";","export default \"<!-- Mobile Header -->\\n<ion-header class=\\\"ion-hide-lg-up\\\" no-border>\\n  <ion-toolbar class=\\\"toolbar\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button></ion-back-button>\\n      </ion-buttons>\\n      <ion-buttons slot=\\\"end\\\">\\n        <img class=\\\"user-profile-picture\\\" height=\\\"30\\\" [src]=\\\"this.userProfilePicture\\\" />\\n      </ion-buttons>\\n\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content\\n  [scrollEvents]=\\\"true\\\"\\n  (ionScroll)=\\\"logScrolling($event)\\\">\\n\\n  <!-- Refresher -->\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n        <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n\\n   <!-- fab placed to the bottom end; Going back to the top of the page on the mobile view. -->\\n  <ion-fab *ngIf=\\\"showFab\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button (click)=\\\"fabScrollTop()\\\">\\n        <ion-icon name=\\\"arrow-up\\\" size=\\\"large\\\"></ion-icon>\\n     </ion-fab-button>\\n  </ion-fab>\\n\\n  <ion-grid>\\n    <ion-row class=\\\"post ion-justify-content-center\\\">\\n       <!-- Profile Header -->\\n          <!-- Only on Desktop -->\\n          <ion-col class=\\\"ion-hide-lg-down\\\" size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6.5\\\">\\n            <!-- Profile Header -->\\n            <div class=\\\"spacer\\\"></div>\\n            <ion-row class=\\\"ion-justify-content-center\\\">\\n              <!-- Profile Picture -->\\n              <ion-col class=\\\"ion-text-center\\\" pull-xl=\\\"0.5\\\" pull-lg=\\\"0.5\\\" size=\\\"0.75\\\">\\n                <img src=\\\"{{creatorProfilePicture}}\\\" style=\\\"border-radius: 100px; height: 35xpx; width: 35px;\\\">\\n              </ion-col>\\n              <!-- Post Creator's Name -->\\n              <ion-col pull-xl=\\\"0.4\\\" pull-lg=\\\"0.4\\\" size=\\\"9\\\">\\n                <p class=\\\"post-name\\\">{{creatorName}}</p>\\n                <p class=\\\"post-date\\\">{{date}}</p>\\n              </ion-col>\\n              <!-- Back button-->\\n              <ion-col size=\\\"1\\\">\\n                <ion-button class=\\\"blue-button-small ion-float-right\\\" (click)=\\\"back()\\\">\\n                Back\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-col>\\n\\n          <!-- Mobile header -->\\n          <ion-col class=\\\"ion-hide-lg-up\\\" size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"5\\\">\\n                <img class=\\\"profile-picture\\\" src=\\\"{{creatorProfilePicture}}\\\">\\n                <div style=\\\"display: inline-block; margin-left: 10px;\\\">\\n                  <p class=\\\"post-name\\\">{{creatorName}}</p>\\n                  <p class=\\\"post-date\\\">Posted {{date}} ago</p>\\n                  <div style=\\\"position: relative; top: -16px;\\\">\\n                    <p class=\\\"hashtag\\\" *ngFor=\\\"let tag of hashtags\\\">\\n                      #{{tag}}\\n                    </p>\\n                  </div>\\n                </div>\\n                <div class=\\\"hashtags\\\">\\n                  \\n                </div>\\n                <hr class=\\\"header-hr\\\">\\n          </ion-col>\\n          <!-- Post Content -->\\n          <ion-col style=\\\"position: relative;\\n          top: -40px;\\\" size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6.5\\\">\\n                <p class=\\\"post-title\\\">{{title}}</p>\\n               <p class=\\\"post-content\\\">{{post}}</p>\\n          </ion-col>\\n\\n          <!-- Comment Input -->\\n          <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6.5\\\">\\n            <form (ngSubmit)=\\\"comment(this.postID, this.userFullName, this.userEmail, this.userProfilePicture, commentForm.value, commentInputValue)\\\" [formGroup]=\\\"commentForm\\\">\\n              <ion-textarea\\n                (ionBlur)=\\\"onBlur()\\\"\\n                (onfocusout)=\\\"blur()\\\"\\n                (keydown.control.enter)=\\\"comment(this.postID, this.userFullName, this.userEmail, this.userProfilePicture, commentForm.value.comment, false) && ScrollToPostedComment()\\\"\\n                class=\\\"comment-input\\\"\\n                autogrow=\\\"true\\\"\\n                autocapitalize=\\\"true\\\"\\n                rows=\\\"5\\\"\\n                spellcheck=\\\"true\\\"\\n                wrap=\\\"soft\\\"\\n                type=\\\"text\\\"\\n                placeholder=\\\"Add a Comment\\\" formControlName=\\\"comment\\\">\\n              </ion-textarea>\\n              <ion-button\\n                      style=\\\"float: right;\\\"\\n                      class=\\\"comment-post-button\\\"\\n                      type=\\\"submit\\\"\\n                      *ngIf=\\\"!commentForm\\n                              .get('comment')\\n                              .pristine && commentForm.value.comment.length >= 3\\\"\\n                        name=\\\"send\\\">Post\\n              </ion-button>\\n            </form>\\n          </ion-col>\\n\\n          <!-- Upvote and Downvote Post -->\\n          <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"4\\\" push-xl=\\\"1.5\\\" size-xl=\\\"6\\\">\\n            <app-up-down-vote-buttons [postID]=\\\"postID\\\"></app-up-down-vote-buttons>\\n          </ion-col>\\n          <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"4\\\" pull-xl=\\\"1.4\\\" size-xl=\\\"3\\\">\\n              <ion-button *ngIf=\\\"this.isUser === true\\\" (click)=\\\"deletePost(this.postID)\\\"  class=\\\"delete ion-float-right\\\">\\n                Delete\\n              </ion-button>\\n              <ion-button\\n                *ngIf=\\\"this.isUser === true\\\" (click)=\\\"editPost(this.postID, this.post)\\\"\\n                class=\\\"edit ion-float-right\\\"\\n                style=\\\"--background: none;\\\">\\n                Edit\\n              </ion-button>\\n              <ion-button\\n                *ngIf=\\\"this.isUser === false && !following\\\" (click)=\\\"follow(this.postID)\\\"\\n                class=\\\"follow ion-float-right\\\">\\n                Follow\\n              </ion-button>\\n              <ion-button\\n                *ngIf=\\\"this.isUser === false && following\\\" (click)=\\\"unFollow(this.postID)\\\"\\n                class=\\\"delete ion-float-right\\\"\\n                style=\\\"width: 80px\\\">\\n                Unfollow\\n              </ion-button>\\n          </ion-col>\\n    </ion-row>\\n\\n    <!-- Comments -->\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n\\n      <!-- If No Comments -->\\n      <ion-col class=\\\"ion-text-center\\\" style=\\\"margin: 100px 0;\\\" *ngIf=\\\"comments.length === 0\\\" size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n      <p style=\\\"color: #888;\\\">This post has no comments</p>\\n      </ion-col>\\n\\n      <ion-col style=\\\"margin-bottom: 24px;\\\" *ngIf=\\\"comments.length > 0\\\" size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n        <ion-toolbar class=\\\"comments-toolbar-mobile ion-hide-lg-up\\\">\\n          <p class=\\\"comments-header\\\">Comments - {{comments.length}}</p>\\n          <ion-buttons slot=\\\"end\\\">\\n            <ion-button (click)=\\\"filterComments()\\\">\\n              <ion-icon slot=\\\"start\\\" name=\\\"filter\\\"></ion-icon>\\n            </ion-button>\\n          </ion-buttons>\\n        </ion-toolbar>\\n      </ion-col>\\n\\n        <!-- Comment Wrapper -->\\n        <ion-col *ngFor=\\\"let comment of comments\\\" class=\\\"comment\\\" size-xs=\\\"12\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n\\n          <!-- Comment Header -->\\n          <ion-row>\\n            <ion-col>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-avatar class=\\\"comment-avatar\\\" slot=\\\"start\\\">\\n                  <img src=\\\"{{comment.userProfilePicture}}\\\">\\n                </ion-avatar>\\n                <ion-label>\\n                  <h6 style=\\\"opacity: 0.5\\\">{{ comment.userFullName  }} - {{ comment.date }} ago</h6>\\n\\n                  <!-- <hr class=\\\"header-hr\\\"> -->\\n                  </ion-label>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n\\n          <!-- Comment -->\\n          <ion-row class=\\\"ion-justify-content-center\\\">\\n            <ion-col size=\\\"11\\\">\\n                <p class=\\\"comment-text\\\" style=\\\"margin-top: 40px;\\\">{{comment.comment}}\\n                </p>\\n            </ion-col>\\n          </ion-row>\\n\\n\\n          <!-- Replies -->\\n          <ion-row class=\\\"ion-justify-content-center\\\">\\n            <ion-col size=\\\"11\\\">\\n              <p\\n              (click)=\\\"repliesModal(\\n                this.postID,\\n                comment.replies,\\n                comment.comment,\\n                comment._id,\\n                comment.userFullName,\\n                comment.userEmail,\\n                comment.date,\\n                comment.userProfilePicture,\\n                this.userFullName,\\n                this.userEmail)\\\"\\n              *ngIf=\\\"comment.repliesLength >= 1\\\" id=\\\"replies-link\\\">Replies - {{comment.repliesLength}}</p>\\n            </ion-col>\\n          </ion-row>\\n\\n\\n          <!-- Comment Buttons -->\\n          <ion-row style=\\\"margin-top: 20px;\\\">\\n            <!-- Upvote & Downvote Comments-->\\n            <ion-col size=\\\"4\\\">\\n              <app-comment-vote-bar [postID]=\\\"this.postID\\\" [commentID]=\\\"comment._id\\\"></app-comment-vote-bar>\\n            </ion-col>\\n            <!-- Report, Edit & Reply -->\\n            <ion-col push=\\\"1\\\" size=\\\"6\\\">\\n              <ion-toolbar style=\\\"--background: none;\\\">\\n                <ion-buttons slot=\\\"end\\\">\\n                  <ion-button (click)=\\\"repliesModal(\\n                    this.postID,\\n                    comment.replies,\\n                    comment.comment,\\n                    comment._id,\\n                    comment.userFullName,\\n                    comment.userEmail,\\n                    comment.date,\\n                    comment.userProfilePicture,\\n                    this.userFullName,\\n                    this.userEmail)\\\" class=\\\"reply ion-float-right\\\">\\n                    Reply\\n                  </ion-button>\\n                  <ion-button *ngIf=\\\"comment.canReport === true\\\" (click)=\\\"report(comment._id, comment.comment, this.post, this.postID, comment.userFullName, comment.userProfilePicture, comment.userEmail, comment.date)\\\"  class=\\\"report ion-float-right\\\">\\n                    Report\\n                  </ion-button>\\n                  <ion-button\\n                    *ngIf=\\\"comment.isUser === true\\\" (click)=\\\"editComment(comment._id, comment.comment, this.postID, this.userEmail)\\\"\\n                    class=\\\"edit ion-float-right\\\">\\n                    Edit\\n                  </ion-button>\\n                  <ion-button *ngIf=\\\"comment.canDeleteComment === true\\\" (click)=\\\"deleteComment(comment._id)\\\"  class=\\\"delete ion-float-right\\\">\\n                    Delete\\n                  </ion-button>\\n                </ion-buttons>\\n              </ion-toolbar>\\n            </ion-col>\\n          </ion-row>\\n\\n        </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\\n<ion-footer class=\\\"ion-hide-lg-up add-comment-footer\\\">\\n  <ion-row class=\\\"ion-justify-content-center\\\">\\n    <ion-col style=\\\"display: inline-block; height: 40px;\\\" size=\\\"10\\\">\\n      <ion-textarea\\n      #footerCommentInput\\n      (ionChange)=\\\"commentInput($event)\\\"\\n      style=\\\"display: inline;\\\"\\n      autocapitalize=\\\"true\\\"\\n      rows=\\\"1\\\"\\n      spellcheck=\\\"true\\\"\\n      wrap=\\\"soft\\\"\\n      type=\\\"text\\\"\\n      placeholder=\\\"Add a Comment\\\"\\n      >\\n    </ion-textarea>\\n    </ion-col>\\n    <ion-col style=\\\"display: inline-block; height: 50px;\\\" size=\\\"1\\\">\\n      <ion-button style=\\\"--background: none;\\\" (click)=\\\"comment(this.postID, this.userFullName, this.userEmail, userProfilePicture, this.commentInputValue, true) && ScrollToPostedComment()\\\">\\n      <ion-icon style=\\\"font-size: 1.8em; color: #0055a5;\\\" slot=\\\"start\\\" name=\\\"send\\\"></ion-icon>\\n    </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-footer>\\n\";"]}