{"version":3,"mappings":"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","names":["routes","path","component","_enter_code_page__WEBPACK_IMPORTED_MODULE_0__","loadChildren","__webpack_require__","then","m","NewPasswordPageModule","EnterCodePageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","EnterCodePageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_enter_code_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_enter_code_page__WEBPACK_IMPORTED_MODULE_1__","EnterCodePage","router","formBuilder","auth","activatedRoute","toast","code","type","message","enterCodeForm","group","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","userEmail","snapshot","paramMap","get","generateCode","sendEmailWithCodeForgotPassword","formOnChanges","console","log","valueChanges","subscribe","data","codesMatched","codesMatchedToast","length","result","characters","charactersLength","i","charAt","Math","floor","random","newPassword","controls","value","navigate","sendEmailWithCode","presentNewCodeToast","create","cssClass","duration","present","email","keyboardClose","position","_angular_router__WEBPACK_IMPORTED_MODULE_5__","src_app_services_auth_service__WEBPACK_IMPORTED_MODULE_2__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/pages/auth/forgot-password/enter-code/enter-code-routing.module.ts","webpack:///src/app/pages/auth/forgot-password/enter-code/enter-code.module.ts","webpack:///src/app/pages/auth/forgot-password/enter-code/enter-code.page.ts","webpack:///src/app/pages/auth/forgot-password/enter-code/enter-code.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { EnterCodePage } from './enter-code.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EnterCodePage\n  },\n  //  to new password page\n  {\n    path: 'new-password/:email',\n    loadChildren: () => import('../../forgot-password/new-password/new-password.module').then(m => m.NewPasswordPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EnterCodePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EnterCodePageRoutingModule } from './enter-code-routing.module';\n\nimport { EnterCodePage } from './enter-code.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    EnterCodePageRoutingModule\n  ],\n  declarations: [EnterCodePage]\n})\nexport class EnterCodePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-enter-code',\n  templateUrl: './enter-code.page.html',\n  styleUrls: ['./enter-code.page.scss'],\n})\nexport class EnterCodePage implements OnInit {\n  enterCodeForm: FormGroup;\n  code = '';\n  userEmail = '';\n  codesMatched: boolean;\n\n  validationMessasges = {\n    code: [\n      { type: 'text', message: 'The codes do not match'}\n    ]\n  };\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private auth: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private toast: ToastController) { }\n\n  ngOnInit() {\n    this.enterCodeForm =  this.formBuilder.group({\n      code: ['', Validators.required],\n    });\n\n    this.userEmail = this.activatedRoute.snapshot.paramMap.get('email');\n\n    this.generateCode(6).then(code => {\n      this.auth.sendEmailWithCodeForgotPassword(code, this.userEmail);\n    });\n\n    this.formOnChanges();\n\n  }\n\n  formOnChanges(): void {\n    console.log(this.enterCodeForm);\n    this.enterCodeForm.valueChanges.subscribe( data => {\n        console.log(data);\n        if(data.code === this.code) {\n          this.codesMatched = true;\n          return this.codesMatchedToast();\n        } else {\n          return this.codesMatched = false;\n        }\n      });\n  }\n\n  async generateCode(length) {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n\n    for ( let i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    console.log('Generated Code: ' + result);\n    return this.code = result;\n }\n\n\n  newPasswordPage(newPassword) {\n    console.log('New Password: ');\n    console.log(newPassword);\n\n    if (this.enterCodeForm.controls.code.value !== this.code) {\n      // this.presentToast();\n      console.log('Codes do not match');\n    } else {\n      console.log('Codes matched');\n      this.router.navigate(['/enter-email/enter-code/:email/new-password', this.userEmail]);\n    }\n  }\n\n  async sendNewCode() {\n    await this.generateCode(6).then(code => {\n      console.log('Data: ' + code);\n      this.auth.sendEmailWithCode(code, this.userEmail);\n    });\n\n    await this.presentNewCodeToast(this.userEmail);\n   }\n\n\n  async codesMatchedToast() {\n    console.log('Codes Matched!')\n    const toast = await this.toast.create({\n      message: 'Codes Matched!',\n      cssClass: 'success-toast',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  async presentNewCodeToast(email) {\n    const toast = await this.toast.create({\n      message: `New Code sent to ${email}`,\n      duration: 2000,\n      cssClass: 'success-toast',\n      keyboardClose: true,\n      position: 'top',\n    });\n    toast.present();\n  }\n\n  cancel() {\n    console.log('Forgot password cancelled');\n    this.router.navigate(['']);\n  }\n  back() {\n    this.router.navigate(['/enter-email']);\n  }\n\n}\n","export default \"<ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar mode=\\\"md\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title size=\\\"small\\\">Enter Code</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"spacer ion-hide-lg-down\\\"></div>\\n    <ion-grid class=\\\"ion-text-center\\\">\\n      <!-- Desktop Header -->\\n      <ion-row style=\\\"padding-top: 80px; margin-bottom: 40px;\\\" class=\\\"ion-hide-lg-down ion-justify-content-center\\\">\\n        <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n          <ion-toolbar class=\\\"desktop-toolbar\\\">\\n                <ion-buttons slot=\\\"start\\\">\\n                    <img height=\\\"50\\\" src=\\\"../../../../../assets/icon/Logo 2.0.svg\\\" alt=\\\"\\\" srcset=\\\"\\\">\\n                </ion-buttons>\\n                <ion-buttons slot=\\\"end\\\">\\n                  <ion-button class=\\\"back-button\\\" (click)=\\\"back()\\\">\\n                    Back\\n                  </ion-button>\\n                </ion-buttons>\\n          </ion-toolbar>\\n              <!-- <img height=\\\"50\\\" style=\\\"display: inline;\\\" src=\\\"../../../assets/icon/suitcase-blue.svg\\\" alt=\\\"\\\" srcset=\\\"\\\">\\n              <h1 style=\\\"display: inline; margin-left: 15px;\\\">Jobs</h1> -->\\n        </ion-col>\\n      </ion-row>\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <ion-col size=\\\"12\\\">\\n          <h6 class=\\\"text-header\\\">Please enter 6 character code that was sent to <span>{{userEmail}}</span></h6>\\n        </ion-col>\\n        <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"6\\\" size-xl=\\\"4\\\">\\n            <form [formGroup]=\\\"enterCodeForm\\\" (ngSubmit)=\\\"newPasswordPage(this.enterCodeForm.value)\\\">\\n              <ion-list class=\\\"line-input\\\">\\n              <ion-item>\\n                <ion-input\\n                placeholder=\\\"Enter Code\\\"\\n                required\\n                formControlName=\\\"code\\\"\\n                type=\\\"text\\\"\\n                placeholder=\\\"Enter Code\\\"></ion-input>\\n              </ion-item>\\n\\n              <!-- Password Validation-->\\n              <div class=\\\"validation-errors\\\">\\n                  <ng-container *ngFor=\\\"let validation of validationMessasges.code\\\">\\n                    <div class=\\\"error-message\\\"\\n                      *ngIf=\\\"enterCodeForm\\n                        .get('code')\\n                        .hasError(validation.type) && (enterCodeForm.get('code')\\n                        .dirty || enterCodeForm.get('code').touched)\\\">\\n                      {{ validation.message }}\\n                    </div>\\n                  </ng-container>\\n                </div>\\n\\n\\n              <ion-button [disabled]=\\\"!this.codesMatched\\\" type=\\\"submit\\\"  class=\\\"orange-button\\\">ENTER CODE</ion-button><br>\\n              <ion-button class=\\\"send-new-code\\\" (click)=\\\"sendNewCode()\\\">\\n                Send new code\\n              </ion-button>\\n              <ion-button (click)=\\\"cancel()\\\" class=\\\"cancel-button\\\" slot=\\\"end\\\">\\n                  cancel\\n              </ion-button>\\n            </ion-list>\\n\\n            </form>\\n        </ion-col>\\n      </ion-row>\\n      </ion-grid>\\n</ion-content>\\n\";"]}