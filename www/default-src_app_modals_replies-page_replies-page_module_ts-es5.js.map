{"version":3,"mappings":"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","names":["routes","path","component","_replies_page_page__WEBPACK_IMPORTED_MODULE_0__","RepliesPagePageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","RepliesPagePageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_replies_page_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_replies_page_page__WEBPACK_IMPORTED_MODULE_1__","RepliesPagePage","formBuilder","modal","popover","navParams","loading","profile","posts","alert","postEmitterService","notificationsService","rxjs__WEBPACK_IMPORTED_MODULE_7__","document","getElementById","getUserDetails","subscribe","commentUserProfilePicture","details","repliesForm","group","reply","replies$","next","get","reverse","replies","data","isEditable","userEmail","postID","commentContents","commentID","commentUserFullName","commentUserEmail","commentDate","userFullName","console","log","dismiss","postPageRefresh","reset","replyComment","currentComment","currentCommentReplies","comment","_id","i","length","push","comments","repliesLength","isUser","canDeleteComment","canReport","date","Date","includeSeconds","addSuffix","commentsSubject$","replyNotification","replyTextArea","value","undefined","repliesLoading","replyID","deleteReply","create","message","duration","refreshRepliesAmount","present","onDidDismiss","role","cssClass","buttons","scrollHeight","documentElement","content","getScrollElement","then","scrollToPoint","e","replyValue","detail","src_app_components_reply_options_popover_reply_options_popover_component__WEBPACK_IMPORTED_MODULE_6__","translucent","_angular_forms__WEBPACK_IMPORTED_MODULE_10__","_ionic_angular__WEBPACK_IMPORTED_MODULE_11__","src_app_services_profile_service__WEBPACK_IMPORTED_MODULE_2__","src_app_services_post_service__WEBPACK_IMPORTED_MODULE_3__","src_app_emitters_post_page_emitter_service__WEBPACK_IMPORTED_MODULE_4__","src_app_services_notifications_service__WEBPACK_IMPORTED_MODULE_5__","_angular_core__WEBPACK_IMPORTED_MODULE_12__","args","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/modals/replies-page/replies-page-routing.module.ts","webpack:///src/app/modals/replies-page/replies-page.module.ts","webpack:///src/app/modals/replies-page/replies-page.page.ts","webpack:///src/app/modals/replies-page/replies-page.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RepliesPagePage } from './replies-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RepliesPagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RepliesPagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RepliesPagePageRoutingModule } from './replies-page-routing.module';\n\nimport { RepliesPagePage } from './replies-page.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RepliesPagePageRoutingModule\n  ],\n  declarations: [RepliesPagePage]\n})\nexport class RepliesPagePageModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { ModalController, NavParams, LoadingController, AlertController, IonContent, IonTextarea, PopoverController} from '@ionic/angular';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { PostsService } from 'src/app/services/post.service';\nimport { formatDistanceToNow } from 'date-fns';\nimport { BehaviorSubject } from 'rxjs';\nimport { PostPageEmitterService } from 'src/app/emitters/post-page-emitter.service';\nimport { NotificationsService } from 'src/app/services/notifications.service';\nimport { ReplyOptionsPopoverComponent } from 'src/app/components/reply-options-popover/reply-options-popover.component';\n\n@Component({\n  selector: 'app-replies-page',\n  templateUrl: './replies-page.page.html',\n  styleUrls: ['./replies-page.page.scss'],\n})\nexport class RepliesPagePage implements OnInit {\n\n  @ViewChild(IonContent, {static: true}) content: IonContent;\n  @ViewChild('replyTextArea', {static: true}) replyTextArea: IonTextarea;\n\n  repliesForm: FormGroup;\n  replies$ = new BehaviorSubject([]);\n  replies;\n  replyValue;\n\n  postID: string;\n  commentContents: string;\n  commentID: any;\n  commentUserFullName: string;\n  commentUserEmail: string;\n  commentDate: string;\n  commentUserProfilePicture: string;\n\n  userFullName: string;\n  userEmail: string;\n\n  tabBar = document.getElementById('myTabBar');\n  votes = document.getElementById('votes');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController,\n    private popover: PopoverController,\n    private navParams: NavParams,\n    private loading: LoadingController,\n    private profile: ProfileService,\n    private posts: PostsService,\n    private alert: AlertController,\n    private postEmitterService: PostPageEmitterService,\n    private notificationsService: NotificationsService) { }\n\n  ngOnInit() {\n    this.profile.getUserDetails().subscribe(details => {\n      this.commentUserProfilePicture = details['profilePicture'];\n    })\n\n     // To collect comment data\n    this.repliesForm = this.formBuilder.group({\n      reply: ['']\n    });\n\n    this.replies$.next(this.navParams.get('replies').reverse());\n    this.replies$.subscribe(data => {\n      this.replies = data;\n      for (let reply of this.replies) {\n        reply.isEditable = false;\n        // console.log('Reply: ', reply);\n        if (reply.userEmail == this.userEmail) {\n          reply.isEditable = true;\n        }\n      }\n    });\n\n    this.postID = this.navParams.get('postID');\n    this.commentContents = this.navParams.get('comment');\n    this.commentID = this.navParams.get('commentID');\n    this.commentUserFullName = this.navParams.get('commentUserFullName');\n    this.commentUserEmail = this.navParams.get('commentUserEmail');\n    this.commentDate = this.navParams.get('commentDate');\n\n\n    this.userFullName = this.navParams.get('userFullName');\n    this.userEmail = this.navParams.get('userEmail');\n    this.commentUserProfilePicture = this.navParams.get('userProfilePicture');\n\n  }\n\n  cancel() {\n    console.log('cancelling comment...');\n    this.modal.dismiss();\n  }\n  refreshRepliesAmount() {\n    this.postEmitterService.postPageRefresh();\n  }\n  async reply(reply) {\n    // Reset Comment Input\n    await this.repliesForm.reset();\n    await console.log('replying to comment...');\n    // tslint:disable-next-line: max-line-length\n    await this.posts.replyComment(this.commentID, this.postID, reply, this.userFullName, this.userEmail, this.commentUserProfilePicture, this.commentUserFullName, this.commentUserEmail)\n      .subscribe(\n        data => {\n          let currentComment;\n          let currentCommentReplies = [];\n\n          for (const comment of data['comments']) {\n            if (comment._id == data['comment']) {\n              currentComment = comment;\n              for (let i = 0; i < comment.replies.length; i++) {\n                currentCommentReplies.push(comment.replies[i]);\n              }\n            }\n          }\n\n          let comments = data['comments'];\n          let userEmail = data['userEmail'];\n          let replies = data['replies'];\n\n          // Give User ability to Edit, Delete, or Report a Comment.\n            // User cannot Report their own comment **\n          for (const comment of comments) {\n\n              // If the Logged in User's Email equals the creatorEmail of the Comment,\n              // they will be given the ability to edit and delete their Comment.\n              // The ability for them to report their own comment is disabled\n\n              comment.repliesLength = comment.replies.length;\n              comment.isUser = false;\n              comment.canDeleteComment = false;\n              comment.canReport = true;\n              comment.date = formatDistanceToNow( new Date(comment.date), {\n                includeSeconds: false,\n                addSuffix: false\n              });\n\n              // If this comment is the logged in user, they can delete and edit\n              if (comment.userEmail === userEmail) {\n                comment.isUser = true;\n                comment.canDeleteComment = true;\n                comment.canReport = false;\n              }\n\n              // Format the Reply Dates\n              for (let i = 0; comment.replies.length > i; i++) {\n                comment.replies[i].date = formatDistanceToNow( new Date(comment.replies[i].date), {\n                  addSuffix: false\n                });\n                replies.push(comment.replies[i]);\n             }\n           }\n\n          this.replies = currentCommentReplies;\n          currentCommentReplies.reverse();\n\n\n          this.posts.commentsSubject$.next(comments.reverse());\n          this.replies$.next(this.replies.reverse());\n          console.log('From replyComment');\n\n          console.log(data);\n          // tslint:disable-next-line: max-line-length\n          this.notificationsService.replyNotification(this.userEmail, this.commentUserEmail, this.postID, currentComment, data['newReply']).subscribe();\n          console.log(this.replyTextArea.value);\n          this.replyTextArea.value = undefined;\n        }\n      );\n\n    await this.repliesLoading();\n  }\n  async deleteReply(replyID) {\n    console.log('Deleting reply with id ', replyID);\n    await this.posts.deleteReply(replyID, this.commentID, this.postID).subscribe( data => {\n      console.log(data);\n      let currentComment;\n      let currentCommentReplies = [];\n\n      let comments = data['comments'];\n      let userEmail = data['userEmail'];\n      let replies = data['replies'];\n\n      for (const comment of comments) {\n        if (comment._id == data['comment']) {\n          currentComment = comment\n          for (let i = 0; i < comment.replies.length; i++) {\n            currentCommentReplies.push(comment.replies[i]);\n          }\n        }\n      }\n\n      for (const comment of comments) {\n\n        comment.repliesLength = comment.replies.length;\n        comment.isUser = false;\n        comment.canDeleteComment = false;\n        comment.canReport = true;\n        comment.date = formatDistanceToNow(new Date(comment.date), {\n          includeSeconds: false,\n          addSuffix: false\n        });\n\n        // If the comment was posted by the current user, it becomes editable\n        if (comment.userEmail == userEmail) {\n          comment.isUser = true;\n          comment.canDeleteComment = true;\n          comment.canReport = false;\n        }\n\n        // Format the Reply Dates\n        for (let i = 0; comment.replies.length > i; i++) {\n          comment.replies[i].date = formatDistanceToNow( new Date(comment.replies[i].date), {\n            addSuffix: false\n          });\n          replies.push(comment.replies[i]);\n        }\n      }\n\n      this.replies = currentCommentReplies;\n\n      this.posts.commentsSubject$.next(comments.reverse());\n      this.replies$.next(this.replies.reverse());\n    });\n  }\n  async repliesLoading() {\n    const loading = await this.loading.create({\n      message: 'Replying to Comment...',\n      duration: 2000\n    });\n\n    await this.refreshRepliesAmount();\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n    // await this.modal.dismiss();\n    // await this.confirmAlert();\n    console.log('Loading dismissed!');\n  }\n  async confirmAlert() {\n    const alert = await this.alert.create({\n      cssClass: 'success-alert',\n      message: 'Your comment has been edited.',\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n  // When the user submits the comment, the tabar will show up again\n  ScrollToReply() {\n    let scrollHeight = document.documentElement.scrollHeight;\n    console.log(this.content.getScrollElement().then(\n      data => this.content.scrollToPoint(0, data.scrollHeight, 100)))\n  }\n  replyContent(e) {\n    console.log(e);\n    this.replyValue = e.detail.value;\n  }\n  async optionsPopover() {\n    const popover = await this.popover.create({\n      component: ReplyOptionsPopoverComponent,\n      cssClass: 'my-custom-class',\n      translucent: true\n    });\n    await popover.present();\n\n    const { role } = await popover.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n}\n","export default \"<!-- Desktop Header -->\\n<ion-header class=\\\"ion-hide-md-down\\\">\\n  <ion-toolbar>\\n    <ion-title slot=\\\"start\\\">Replies</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"cancel()\\\">\\n        cancel\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<!-- Mobile Header -->\\n<ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar>\\n    <ion-icon id=\\\"back-arrow-icons\\\" (click)=\\\"cancel()\\\" name=\\\"arrow-back\\\"></ion-icon>\\n    <ion-title slot=\\\"end\\\">Replies</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [scrollEvents]=\\\"true\\\">\\n  <div style=\\\"background-color: white; padding: 2em 0 2em 0em;\\\">\\n    <!-- commentUser Info -->\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col size=\\\"11\\\">\\n        <ion-item lines=\\\"none\\\">\\n          <ion-avatar class=\\\"comment-avatar\\\" slot=\\\"start\\\">\\n            <img src=\\\"{{commentUserProfilePicture}}\\\">\\n          </ion-avatar>\\n          <ion-label>\\n            <h6><span style=\\\"color: #0055a5; font-weight: 600;\\\">{{ commentUserFullName  }}</span><br>{{ commentDate }} </h6>\\n            </ion-label>\\n        </ion-item>\\n      </ion-col>\\n    </ion-row>\\n    <!-- Comment -->\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col size=\\\"11\\\">\\n        <p>{{commentContents}}</p>\\n      </ion-col>\\n    </ion-row>\\n  </div>\\n\\n  <!-- Replies -->\\n  <ion-row *ngFor=\\\"let reply of replies\\\" class=\\\"ion-justify-content-center ion-align-items-start reply-wrapper\\\">\\n    <ion-col size=\\\"11\\\">\\n      <!-- <ion-col size=\\\"6\\\">\\n        <p class=\\\"reply-name\\\">\\n          <img id=\\\"reply-avatar\\\" src=\\\"{{reply.userProfilePicture}}\\\">\\n          {{reply.userFullName}}\\n        </p>\\n        <p id=\\\"reply-date\\\">{{reply.date}} ago</p>\\n      </ion-col> -->\\n      <ion-col size=\\\"11\\\">\\n        <ion-item lines=\\\"none\\\">\\n          <ion-avatar class=\\\"comment-avatar\\\" slot=\\\"start\\\">\\n            <img src=\\\"{{reply.userProfilePicture}}\\\">\\n          </ion-avatar>\\n          <ion-label>\\n            <h6><span style=\\\"color: #000;\\\">{{ reply.userFullName  }}</span><br>{{ reply.date }} ago</h6>\\n            </ion-label>\\n        </ion-item>\\n      </ion-col>\\n      <ion-col size=\\\"11\\\">\\n        <p class=\\\"reply-text\\\">{{reply.reply}}</p>\\n      </ion-col>\\n      <ion-col class=\\\"ion-float-right\\\" size=\\\"2\\\">\\n        <ion-button style=\\\"--background: none; position: relative; left: 32px;\\\" (click)=\\\"optionsPopover()\\\">\\n          <ion-icon class=\\\"more-icon\\\" name=\\\"ellipsis-vertical-outline\\\"></ion-icon>\\n        </ion-button>\\n        <!-- <ion-button class=\\\"blue-button\\\" *ngIf=\\\"reply.isEditable\\\" (click)=\\\"deleteReply(reply._id)\\\" expand=\\\"block\\\">\\n          Delete\\n        </ion-button> -->\\n      </ion-col>\\n    </ion-col>\\n  </ion-row>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"ion-hide-lg-up add-comment-footer\\\">\\n  <ion-row class=\\\"ion-justify-content-center\\\">\\n    <ion-col style=\\\"display: inline-block; height: 40px;\\\" size=\\\"10\\\">\\n      <ion-textarea\\n      #replyTextArea\\n      (ionChange)=\\\"replyContent($event)\\\"\\n      style=\\\"display: inline;\\\"\\n      autocapitalize=\\\"true\\\"\\n      rows=\\\"1\\\"\\n      spellcheck=\\\"true\\\"\\n      wrap=\\\"soft\\\"\\n      type=\\\"text\\\"\\n      placeholder=\\\"Add a Reply\\\"\\n      >\\n    </ion-textarea>\\n    </ion-col>\\n    <ion-col (click)=\\\"reply(this.replyValue) && ScrollToReply()\\\" style=\\\"display: inline-block; height: 50px;\\\" size=\\\"1\\\">\\n      <ion-button style=\\\"--background: none;\\\">\\n      <ion-icon style=\\\"font-size: 1.8em; color: #0055a5;\\\" slot=\\\"start\\\" name=\\\"send\\\"></ion-icon>\\n    </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-footer>\";"]}