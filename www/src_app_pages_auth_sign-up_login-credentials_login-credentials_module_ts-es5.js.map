{"version":3,"mappings":"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","names":["routes","path","component","_login_credentials_page__WEBPACK_IMPORTED_MODULE_0__","loadChildren","__webpack_require__","then","m","EnterCodePageModule","LoginCredentialsPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","LoginCredentialsPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_login_credentials_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_login_credentials_page__WEBPACK_IMPORTED_MODULE_1__","LoginCredentialsPage","router","formBuilder","auth","alert","email","type","message","password","credentialsForm","group","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","reTypePassword","formOnChanges","console","log","valueChanges","subscribe","data","statusChanges","status","passwordsMatch","controls","value","touched","valid","getLoginCredentials","navigate","create","cssClass","buttons","present","_angular_router__WEBPACK_IMPORTED_MODULE_5__","_services_auth_service__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_7__","args","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/pages/auth/sign-up/login-credentials/login-credentials-routing.module.ts","webpack:///src/app/pages/auth/sign-up/login-credentials/login-credentials.module.ts","webpack:///src/app/pages/auth/sign-up/login-credentials/login-credentials.page.ts","webpack:///src/app/pages/auth/sign-up/login-credentials/login-credentials.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginCredentialsPage } from './login-credentials.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginCredentialsPage\n  },\n  {\n    path: 'enter-code/:email',\n    loadChildren: () => import('../enter-code/enter-code.module').then(m => m.EnterCodePageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginCredentialsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginCredentialsPageRoutingModule } from './login-credentials-routing.module';\n\nimport { LoginCredentialsPage } from './login-credentials.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    LoginCredentialsPageRoutingModule\n  ],\n  declarations: [LoginCredentialsPage]\n})\nexport class LoginCredentialsPageModule {}\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IonInput, AlertController } from '@ionic/angular';\nimport { AuthService } from '../../../../services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login-credentials',\n  templateUrl: './login-credentials.page.html',\n  styleUrls: ['./login-credentials.page.scss'],\n})\nexport class LoginCredentialsPage implements OnInit, OnDestroy {\n\n  @ViewChild('autoFucousInput', {static: false})  inputElement: IonInput;\n  credentialsForm: FormGroup;\n  passwordsMatch = false;\n  code = '';\n  email;\n\n  validationMessasges = {\n    email: [\n      { type: 'email', message: 'Please enter a valid email address'}\n    ],\n    password: [\n      { type: 'password', message: 'Please enter a valid password.'}\n    ]\n  };\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private auth: AuthService,\n    private alert: AlertController\n    ) { }\n\n  ngOnInit() {\n    this.credentialsForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.compose([\n        Validators.minLength(8),\n        Validators.required,\n        // at least 1 number, 1 uppercase letter, and one lowercase letter\n        Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n     ])],\n     reTypePassword: ['', Validators.compose([\n      Validators.minLength(8),\n      Validators.required,\n      // at least 1 number, 1 uppercase letter, and one lowercase letter\n      Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n   ])]\n  });\n\n    this.formOnChanges();\n}\n\nngOnDestroy() {\n  console.log('Being Destroyed');\n}\n\nformOnChanges(): void {\n  console.log(this.credentialsForm);\n  this.credentialsForm.valueChanges\n  .subscribe(\n    data => {\n      console.log(data);\n\n      this.credentialsForm.statusChanges.subscribe(status => {\n        console.log(status);\n        if ( status === 'VALID') {\n          console.log('you did it bruh');\n          this.passwordsMatch = true;\n        }\n      });\n\n      if (this.credentialsForm.controls.password.value === this.credentialsForm.controls.reTypePassword.value &&\n        this.credentialsForm.controls.password.touched &&\n        this.credentialsForm.controls.email.valid) {\n        console.log('Passwords Match');\n    }\n\n      if (this.credentialsForm.controls.password.value !== this.credentialsForm.controls.reTypePassword.value) {\n      console.log('Passwords dont match');\n      this.passwordsMatch = false;\n  }\n    }\n  );\n}\n\n\n  enterCodePage(email, password) {\n    this.email = this.credentialsForm.controls.email.value;\n    this.auth.getLoginCredentials(email, password)\n    console.log('Going to Enter Code Page');\n    this.router.navigate(['/personal-info/profile-picture/upload-resume/login-credentials/enter-code/', this.email]);\n\n  }\n\n  async userAlreadyExistAlert() {\n    const alert = await this.alert.create({\n      cssClass: 'danger-alert',\n      message: 'This user already exists.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n\n\n  cancel() {\n    console.log('Sign up cancelled');\n    this.router.navigate(['']);\n  }\n\n}\n","export default \"<ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar mode=\\\"md\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <img style=\\\"margin-right: 16px;\\\" height=\\\"32\\\" src=\\\"../../../../../assets/icon/fyf-white-icon.svg\\\">\\n    </ion-buttons>\\n    <ion-title size=\\\"small\\\">Sign Up - Login Credentials</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <!-- Desktop Header -->\\n    <div class=\\\"spacer ion-hide-lg-down\\\"></div>\\n    <ion-row style=\\\"padding-top: 80px; margin-bottom: 40px;\\\" class=\\\"ion-hide-lg-down ion-justify-content-center\\\">\\n      <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n        <ion-toolbar class=\\\"desktop-toolbar\\\">\\n              <ion-buttons slot=\\\"start\\\">\\n                  <img height=\\\"50\\\" src=\\\"../../../../../assets/icon/Logo 2.0.svg\\\" alt=\\\"\\\" srcset=\\\"\\\">\\n              </ion-buttons>\\n              <ion-buttons slot=\\\"end\\\">\\n                <ion-button class=\\\"back-button\\\" (click)=\\\"cancel()\\\">\\n                  Back\\n                </ion-button>\\n              </ion-buttons>\\n        </ion-toolbar>\\n            <!-- <img height=\\\"50\\\" style=\\\"display: inline;\\\" src=\\\"../../../assets/icon/suitcase-blue.svg\\\" alt=\\\"\\\" srcset=\\\"\\\">\\n            <h1 style=\\\"display: inline; margin-left: 15px;\\\">Jobs</h1> -->\\n      </ion-col>\\n    </ion-row>\\n\\n    <!-- Header -->\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n        <h6 class=\\\"text-header\\\">Please create your login credentials. Your password needs to be <span>at least 8 characters long, with at least 1 uppercase letter and one number.</span></h6>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"6\\\" size-xl=\\\"4\\\">\\n        <form (ngSubmit)=\\\"enterCodePage(this.credentialsForm.value.email, this.credentialsForm.value.password)\\\" [formGroup]=\\\"credentialsForm\\\">\\n\\n              <ion-list class=\\\"line-input\\\">\\n\\n                <ion-item>\\n                  <ion-input\\n                  #autoFucousInput\\n                  formControlName=\\\"email\\\"\\n                  type=\\\"email\\\"\\n                  placeholder=\\\"email\\\"></ion-input>\\n                </ion-item>\\n\\n                <!-- Email Validation-->\\n                <div class=\\\"validation-errors\\\">\\n                    <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\n                      <div class=\\\"error-message\\\"\\n                        *ngIf=\\\"credentialsForm\\n                          .get('email')\\n                          .hasError(validation.type) && (credentialsForm.get('email')\\n                          .dirty || credentialsForm.get('email').touched)\\\">\\n                        {{ validation.message }}\\n                      </div>\\n                    </ng-container>\\n                </div>\\n                <br>\\n                <ion-item>\\n                  <ion-input\\n                  required\\n                  inputmode=\\\"text\\\"\\n                  formControlName=\\\"password\\\"\\n                  type=\\\"password\\\"\\n                  placeholder=\\\"enter password\\\"></ion-input>\\n\\n                  <ion-button *ngIf=\\\"!passwordsMatch\\\" class=\\\"badPassword\\\" item-right>\\n                     <ion-icon style=\\\"color: #FF443B;\\\" name=\\\"close\\\"> </ion-icon>\\n                  </ion-button>\\n\\n                  <ion-button *ngIf=\\\"passwordsMatch\\\" class=\\\"goodPassword\\\" item-right>\\n                      <ion-icon style=\\\"color: #21df82;\\\" size=\\\"large\\\"  name=\\\"checkmark\\\"> </ion-icon>\\n                   </ion-button>\\n\\n                </ion-item>\\n\\n                <!-- Password Validation-->\\n                <div class=\\\"validation-errors\\\">\\n                 <ng-container *ngFor=\\\"let validation of validationMessasges.password\\\">\\n                   <div class=\\\"error-message\\\"\\n                     *ngIf=\\\"credentialsForm\\n                       .get('password')\\n                       .hasError('pattern') && (credentialsForm.get('password')\\n                       .dirty || credentialsForm.get('password').touched)\\\">\\n                     {{ validation.message }}\\n                   </div>\\n                 </ng-container>\\n                </div>\\n\\n                <br>\\n                <ion-item>\\n                  <ion-input\\n                  formControlName=\\\"reTypePassword\\\"\\n                  type=\\\"password\\\"\\n                  placeholder=\\\"re-type password\\\"></ion-input>\\n\\n                    <ion-button *ngIf=\\\"!passwordsMatch\\\" class=\\\"badPassword\\\" item-right>\\n                        <ion-icon style=\\\"color: #FF443B;\\\" name=\\\"close\\\"> </ion-icon>\\n                    </ion-button>\\n\\n                     <ion-button *ngIf=\\\"passwordsMatch\\\" class=\\\"goodPassword\\\" item-right>\\n                         <ion-icon style=\\\"color: #21df82;\\\" size=\\\"large\\\" name=\\\"checkmark\\\"> </ion-icon>\\n                    </ion-button>\\n\\n                </ion-item>\\n\\n                <!-- Password Validation-->\\n                <div class=\\\"validation-errors\\\">\\n                    <ng-container *ngFor=\\\"let validation of validationMessasges.password\\\">\\n                      <div class=\\\"error-message\\\"\\n                        *ngIf=\\\"credentialsForm\\n                          .get('reTypePassword')\\n                          .hasError('pattern') && (credentialsForm.get('reTypePassword')\\n                          .dirty || credentialsForm.get('reTypePassword').touched)\\\">\\n                        {{ validation.message }}\\n                      </div>\\n                    </ng-container>\\n                  </div>\\n                <ion-button type=\\\"submit\\\" class=\\\"orange-button\\\" [disabled]=\\\"!passwordsMatch\\\">NEXT</ion-button>\\n              </ion-list>\\n        </form>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\\n\";"]}