{"version":3,"sources":["webpack:///src/app/pages/auth/sign-up/login-credentials/login-credentials-routing.module.ts","webpack:///src/app/pages/auth/sign-up/login-credentials/login-credentials.module.ts","webpack:///src/app/pages/auth/sign-up/login-credentials/login-credentials.page.ts","webpack:///src/app/pages/auth/sign-up/login-credentials/login-credentials.page.scss","webpack:///src/app/pages/auth/sign-up/login-credentials/login-credentials.page.html"],"names":["routes","path","component","LoginCredentialsPage","loadChildren","then","m","EnterCodePageModule","LoginCredentialsPageRoutingModule","NgModule","imports","RouterModule","exports","LoginCredentialsPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","declarations","router","formBuilder","auth","alert","passwordsMatch","code","validationMessasges","email","type","message","password","credentialsForm","group","Validators","reTypePassword","formOnChanges","console","log","valueChanges","subscribe","data","statusChanges","status","controls","value","touched","valid","getLoginCredentials","navigate","create","cssClass","buttons","present","Router","FormBuilder","AuthService","AlertController","ViewChild","Component","selector","template"],"mappings":"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","file":"src_app_pages_auth_sign-up_login-credentials_login-credentials_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginCredentialsPage } from './login-credentials.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginCredentialsPage\n  },\n  {\n    path: 'enter-code/:email',\n    loadChildren: () => import('../enter-code/enter-code.module').then(m => m.EnterCodePageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginCredentialsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginCredentialsPageRoutingModule } from './login-credentials-routing.module';\n\nimport { LoginCredentialsPage } from './login-credentials.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    LoginCredentialsPageRoutingModule\n  ],\n  declarations: [LoginCredentialsPage]\n})\nexport class LoginCredentialsPageModule {}\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IonInput, AlertController } from '@ionic/angular';\nimport { AuthService } from '../../../../services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login-credentials',\n  templateUrl: './login-credentials.page.html',\n  styleUrls: ['./login-credentials.page.scss'],\n})\nexport class LoginCredentialsPage implements OnInit, OnDestroy {\n\n  @ViewChild('autoFucousInput', {static: false})  inputElement: IonInput;\n  credentialsForm: FormGroup;\n  passwordsMatch = false;\n  code = '';\n  email;\n\n  validationMessasges = {\n    email: [\n      { type: 'email', message: 'Please enter a valid email address'}\n    ],\n    password: [\n      { type: 'password', message: 'Please enter a valid password.'}\n    ]\n  };\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private auth: AuthService,\n    private alert: AlertController\n    ) { }\n\n  ngOnInit() {\n    this.credentialsForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.compose([\n        Validators.minLength(8),\n        Validators.required,\n        // at least 1 number, 1 uppercase letter, and one lowercase letter\n        Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n     ])],\n     reTypePassword: ['', Validators.compose([\n      Validators.minLength(8),\n      Validators.required,\n      // at least 1 number, 1 uppercase letter, and one lowercase letter\n      Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n   ])]\n  });\n\n    this.formOnChanges();\n}\n\nngOnDestroy() {\n  console.log('Being Destroyed');\n}\n\nformOnChanges(): void {\n  console.log(this.credentialsForm);\n  this.credentialsForm.valueChanges\n  .subscribe(\n    data => {\n      console.log(data);\n\n      this.credentialsForm.statusChanges.subscribe(status => {\n        console.log(status);\n        if ( status === 'VALID') {\n          console.log('you did it bruh');\n          this.passwordsMatch = true;\n        }\n      });\n\n      if (this.credentialsForm.controls.password.value === this.credentialsForm.controls.reTypePassword.value &&\n        this.credentialsForm.controls.password.touched &&\n        this.credentialsForm.controls.email.valid) {\n        console.log('Passwords Match');\n    }\n\n      if (this.credentialsForm.controls.password.value !== this.credentialsForm.controls.reTypePassword.value) {\n      console.log('Passwords dont match');\n      this.passwordsMatch = false;\n  }\n    }\n  );\n}\n\n\n  enterCodePage(email, password) {\n    this.email = this.credentialsForm.controls.email.value;\n    this.auth.getLoginCredentials(email, password)\n    console.log('Going to Enter Code Page');\n    this.router.navigate(['/personal-info/profile-picture/upload-resume/login-credentials/enter-code/', this.email]);\n\n  }\n\n  async userAlreadyExistAlert() {\n    const alert = await this.alert.create({\n      cssClass: 'danger-alert',\n      message: 'This user already exists.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n\n\n  cancel() {\n    console.log('Sign up cancelled');\n    this.router.navigate(['']);\n  }\n\n}\n","export default \".desktop-toolbar {\\n  --background: none;\\n  padding-bottom: 16px;\\n  border-bottom: 1px solid #33333326;\\n}\\n.desktop-toolbar h1 {\\n  color: #0055a5;\\n}\\n.back-button {\\n  --color: white;\\n  --background: #0055a5;\\n  --background-hover: linear-gradient(#0055a5, #0c375f);\\n  height: 24px;\\n  --border-radius: 5px;\\n  width: 100px;\\n  font-size: 0.5em;\\n  font-weight: 600;\\n  display: block;\\n}\\n.cancel-button {\\n  margin: 0 10px;\\n}\\n.orange-button {\\n  width: unset;\\n  display: block;\\n  margin: 48px auto 48px auto;\\n  width: 200px;\\n  -webkit-animation: none;\\n          animation: none;\\n  opacity: 1;\\n}\\nspan {\\n  font-weight: 900;\\n  font-size: 1em;\\n  color: #e3405f;\\n}\\n.badPassword {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in 0.5s forwards;\\n          animation: password-icons 1s ease-in 0.5s forwards;\\n}\\n.badPassword:nth-child(2) {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in forwards;\\n          animation: password-icons 1s ease-in forwards;\\n}\\n.goodPassword {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in 0.5s forwards;\\n          animation: password-icons 1s ease-in 0.5s forwards;\\n}\\n.goodPassword:nth-child(2) {\\n  --background: none;\\n  opacity: 0;\\n  -webkit-animation: password-icons 1s ease-in forwards;\\n          animation: password-icons 1s ease-in forwards;\\n}\\n@-webkit-keyframes password-icons {\\n  0% {\\n    transform: translateX(50px);\\n  }\\n  100% {\\n    transform: translateX(0px);\\n    opacity: 1;\\n  }\\n}\\n@keyframes password-icons {\\n  0% {\\n    transform: translateX(50px);\\n  }\\n  100% {\\n    transform: translateX(0px);\\n    opacity: 1;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLWNyZWRlbnRpYWxzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBQ0Esb0JBQUE7RUFDQSxrQ0FBQTtBQUNGO0FBQ0U7RUFDRSxjQUFBO0FBQ0o7QUFFQTtFQUNFLGNBQUE7RUFDQSxxQkFBQTtFQUNBLHFEQUFBO0VBQ0EsWUFBQTtFQUNBLG9CQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0FBQ0Y7QUFDQTtFQUNFLGNBQUE7QUFFRjtBQUNBO0VBQ0UsWUFBQTtFQUNBLGNBQUE7RUFDQSwyQkFBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtVQUFBLGVBQUE7RUFDQSxVQUFBO0FBRUY7QUFBQTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLGNBQUE7QUFHRjtBQURBO0VBQ0Usa0JBQUE7RUFDQSxVQUFBO0VBQ0EsMERBQUE7VUFBQSxrREFBQTtBQUlGO0FBRkE7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxxREFBQTtVQUFBLDZDQUFBO0FBS0Y7QUFIQTtFQUNFLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLDBEQUFBO1VBQUEsa0RBQUE7QUFNRjtBQUpBO0VBQ0Usa0JBQUE7RUFDQSxVQUFBO0VBQ0EscURBQUE7VUFBQSw2Q0FBQTtBQU9GO0FBTEE7RUFDRTtJQUNFLDJCQUFBO0VBUUY7RUFMQTtJQUNFLDBCQUFBO0lBQ0EsVUFBQTtFQU9GO0FBQ0Y7QUFmQTtFQUNFO0lBQ0UsMkJBQUE7RUFRRjtFQUxBO0lBQ0UsMEJBQUE7SUFDQSxVQUFBO0VBT0Y7QUFDRiIsImZpbGUiOiJsb2dpbi1jcmVkZW50aWFscy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGVza3RvcC10b29sYmFye1xuICAtLWJhY2tncm91bmQ6IG5vbmU7XG4gIHBhZGRpbmctYm90dG9tOiAxNnB4O1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzMzMzMzMzI2O1xuXG4gIGgxIHtcbiAgICBjb2xvcjogIzAwNTVhNTtcbiAgfVxufVxuLmJhY2stYnV0dG9uIHtcbiAgLS1jb2xvcjogd2hpdGU7XG4gIC0tYmFja2dyb3VuZDogIzAwNTVhNTtcbiAgLS1iYWNrZ3JvdW5kLWhvdmVyOiBsaW5lYXItZ3JhZGllbnQoIzAwNTVhNSwgIzBjMzc1Zik7XG4gIGhlaWdodDogMjRweDtcbiAgLS1ib3JkZXItcmFkaXVzOiA1cHg7XG4gIHdpZHRoOiAxMDBweDtcbiAgZm9udC1zaXplOiAwLjVlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4uY2FuY2VsLWJ1dHRvbiB7XG4gIG1hcmdpbjogMCAxMHB4O1xufVxuXG4ub3JhbmdlLWJ1dHRvbiB7XG4gIHdpZHRoOiB1bnNldDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogNDhweCBhdXRvIDQ4cHggYXV0bztcbiAgd2lkdGg6IDIwMHB4O1xuICBhbmltYXRpb246IG5vbmU7XG4gIG9wYWNpdHk6IDE7XG59XG5zcGFuIHtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgZm9udC1zaXplOiAxZW07XG4gIGNvbG9yOiAjZTM0MDVmO1xufVxuLmJhZFBhc3N3b3JkIHtcbiAgLS1iYWNrZ3JvdW5kOiBub25lO1xuICBvcGFjaXR5OiAwO1xuICBhbmltYXRpb246IHBhc3N3b3JkLWljb25zIDFzIGVhc2UtaW4gMC41cyBmb3J3YXJkcztcbn1cbi5iYWRQYXNzd29yZDpudGgtY2hpbGQoMikge1xuICAtLWJhY2tncm91bmQ6IG5vbmU7XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbjogcGFzc3dvcmQtaWNvbnMgMXMgZWFzZS1pbiBmb3J3YXJkcztcbn1cbi5nb29kUGFzc3dvcmQge1xuICAtLWJhY2tncm91bmQ6IG5vbmU7XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbjogcGFzc3dvcmQtaWNvbnMgMXMgZWFzZS1pbiAwLjVzIGZvcndhcmRzO1xufVxuLmdvb2RQYXNzd29yZDpudGgtY2hpbGQoMikge1xuICAtLWJhY2tncm91bmQ6IG5vbmU7XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbjogcGFzc3dvcmQtaWNvbnMgMXMgZWFzZS1pbiBmb3J3YXJkcztcbn1cbkBrZXlmcmFtZXMgcGFzc3dvcmQtaWNvbnMge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwcHgpO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDBweCk7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufSJdfQ== */\";","export default \"<ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar mode=\\\"md\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <img style=\\\"margin-right: 16px;\\\" height=\\\"32\\\" src=\\\"../../../../../assets/icon/fyf-white-icon.svg\\\">\\n    </ion-buttons>\\n    <ion-title size=\\\"small\\\">Sign Up - Login Credentials</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <!-- Desktop Header -->\\n    <div class=\\\"spacer ion-hide-lg-down\\\"></div>\\n    <ion-row style=\\\"padding-top: 80px; margin-bottom: 40px;\\\" class=\\\"ion-hide-lg-down ion-justify-content-center\\\">\\n      <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n        <ion-toolbar class=\\\"desktop-toolbar\\\">\\n              <ion-buttons slot=\\\"start\\\">\\n                  <img height=\\\"50\\\" src=\\\"../../../../../assets/icon/Logo 2.0.svg\\\" alt=\\\"\\\" srcset=\\\"\\\">\\n              </ion-buttons>\\n              <ion-buttons slot=\\\"end\\\">\\n                <ion-button class=\\\"back-button\\\" (click)=\\\"cancel()\\\">\\n                  Back\\n                </ion-button>\\n              </ion-buttons>\\n        </ion-toolbar>\\n            <!-- <img height=\\\"50\\\" style=\\\"display: inline;\\\" src=\\\"../../../assets/icon/suitcase-blue.svg\\\" alt=\\\"\\\" srcset=\\\"\\\">\\n            <h1 style=\\\"display: inline; margin-left: 15px;\\\">Jobs</h1> -->\\n      </ion-col>\\n    </ion-row>\\n\\n    <!-- Header -->\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n        <h6 class=\\\"text-header\\\">Please create your login credentials. Your password needs to be <span>at least 8 characters long, with at least 1 uppercase letter and one number.</span></h6>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"6\\\" size-xl=\\\"4\\\">\\n        <form (ngSubmit)=\\\"enterCodePage(this.credentialsForm.value.email, this.credentialsForm.value.password)\\\" [formGroup]=\\\"credentialsForm\\\">\\n\\n              <ion-list class=\\\"line-input\\\">\\n\\n                <ion-item>\\n                  <ion-input\\n                  #autoFucousInput\\n                  formControlName=\\\"email\\\"\\n                  type=\\\"email\\\"\\n                  placeholder=\\\"email\\\"></ion-input>\\n                </ion-item>\\n\\n                <!-- Email Validation-->\\n                <div class=\\\"validation-errors\\\">\\n                    <ng-container *ngFor=\\\"let validation of validationMessasges.email\\\">\\n                      <div class=\\\"error-message\\\"\\n                        *ngIf=\\\"credentialsForm\\n                          .get('email')\\n                          .hasError(validation.type) && (credentialsForm.get('email')\\n                          .dirty || credentialsForm.get('email').touched)\\\">\\n                        {{ validation.message }}\\n                      </div>\\n                    </ng-container>\\n                </div>\\n                <br>\\n                <ion-item>\\n                  <ion-input\\n                  required\\n                  inputmode=\\\"text\\\"\\n                  formControlName=\\\"password\\\"\\n                  type=\\\"password\\\"\\n                  placeholder=\\\"enter password\\\"></ion-input>\\n\\n                  <ion-button *ngIf=\\\"!passwordsMatch\\\" class=\\\"badPassword\\\" item-right>\\n                     <ion-icon style=\\\"color: #FF443B;\\\" name=\\\"close\\\"> </ion-icon>\\n                  </ion-button>\\n\\n                  <ion-button *ngIf=\\\"passwordsMatch\\\" class=\\\"goodPassword\\\" item-right>\\n                      <ion-icon style=\\\"color: #21df82;\\\" size=\\\"large\\\"  name=\\\"checkmark\\\"> </ion-icon>\\n                   </ion-button>\\n\\n                </ion-item>\\n\\n                <!-- Password Validation-->\\n                <div class=\\\"validation-errors\\\">\\n                 <ng-container *ngFor=\\\"let validation of validationMessasges.password\\\">\\n                   <div class=\\\"error-message\\\"\\n                     *ngIf=\\\"credentialsForm\\n                       .get('password')\\n                       .hasError('pattern') && (credentialsForm.get('password')\\n                       .dirty || credentialsForm.get('password').touched)\\\">\\n                     {{ validation.message }}\\n                   </div>\\n                 </ng-container>\\n                </div>\\n\\n                <br>\\n                <ion-item>\\n                  <ion-input\\n                  formControlName=\\\"reTypePassword\\\"\\n                  type=\\\"password\\\"\\n                  placeholder=\\\"re-type password\\\"></ion-input>\\n\\n                    <ion-button *ngIf=\\\"!passwordsMatch\\\" class=\\\"badPassword\\\" item-right>\\n                        <ion-icon style=\\\"color: #FF443B;\\\" name=\\\"close\\\"> </ion-icon>\\n                    </ion-button>\\n\\n                     <ion-button *ngIf=\\\"passwordsMatch\\\" class=\\\"goodPassword\\\" item-right>\\n                         <ion-icon style=\\\"color: #21df82;\\\" size=\\\"large\\\" name=\\\"checkmark\\\"> </ion-icon>\\n                    </ion-button>\\n\\n                </ion-item>\\n\\n                <!-- Password Validation-->\\n                <div class=\\\"validation-errors\\\">\\n                    <ng-container *ngFor=\\\"let validation of validationMessasges.password\\\">\\n                      <div class=\\\"error-message\\\"\\n                        *ngIf=\\\"credentialsForm\\n                          .get('reTypePassword')\\n                          .hasError('pattern') && (credentialsForm.get('reTypePassword')\\n                          .dirty || credentialsForm.get('reTypePassword').touched)\\\">\\n                        {{ validation.message }}\\n                      </div>\\n                    </ng-container>\\n                  </div>\\n                <ion-button type=\\\"submit\\\" class=\\\"orange-button\\\" [disabled]=\\\"!passwordsMatch\\\">NEXT</ion-button>\\n              </ion-list>\\n        </form>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\\n\";"]}