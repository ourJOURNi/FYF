{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,UAAMA,MAAM,GAAG,oMAAf;;AAEA,UAAMC,GAAG;AACPC,qBAAYC,OAAZD,EAAqB;AAAA;;AAAA;;AACnBE,iEAAiB,IAAjBA,EAAuBD,OAAvBC;AACA,eAAKC,cAAL,GAAsBC,uDAAY,IAAZA,EAAkB,gBAAlBA,EAAoC,CAApCA,CAAtB;AACA,eAAKC,aAAL,GAAqBD,uDAAY,IAAZA,EAAkB,eAAlBA,EAAmC,CAAnCA,CAArB;AACA,eAAKE,QAAL,GAAgBF,uDAAY,IAAZA,EAAkB,UAAlBA,EAA8B,CAA9BA,CAAhB;;AACA,eAAKG,MAAL,GAAc,YAAM;AAClB,kBAAKF,aAAL,CAAmBG,IAAnB;AADF;;AAGA,eAAKC,OAAL,GAAe,YAAM;AACnB,kBAAKH,QAAL,CAAcE,IAAd;AADF;AAGD;;AAZM;AAAA;AAAA,iBAaPE,sBAAa;AACX,iBAAKC,KAAL;AACD;AAfM;AAAA;AAAA,iBAgBPC,4BAAmB;AACjB,iBAAKD,KAAL;AACD;AAlBM;AAAA;AAAA,iBAmBPA,iBAAQ;AAAA;;AACN,gBAAI,KAAKE,GAAL,KAAaC,SAAjB,EAA4B;AAC1B;AACD;;AACD,gBAAI,OAAOC,MAAP,KAAkB,WAAlB,IACF,0BAA0BA,MADxB,IAEF,+BAA+BA,MAF7B,IAGF,oBAAoBA,MAAM,CAACC,yBAAPD,CAAiCE,SAHvD,EAGkE;AAChE,mBAAKC,QAAL;AACA,mBAAKC,EAAL,GAAU,IAAIC,oBAAJ,CAAyBC,cAAI,EAAI;AACzC;AACA;AACA;AACA,oBAAIA,IAAI,CAAC,CAAD,CAAJA,CAAQC,cAAZ,EAA4B;AAC1B,yBAAKC,IAAL;;AACA,yBAAKL,QAAL;AACD;AAPO,gBAAV;AASA,mBAAKC,EAAL,CAAQK,OAAR,CAAgB,KAAKC,EAArB;AAdF,mBAgBK;AACH;AACAC,wBAAU,CAAC;AAAA,uBAAM,OAAKH,IAAL,EAAN;AAAA,eAAD,EAAoB,GAApB,CAAVG;AACD;AACF;AA3CM;AAAA;AAAA,iBA4CPH,gBAAO;AACL,iBAAKI,SAAL,GAAiB,KAAKlB,OAAtB;AACA,iBAAKmB,OAAL,GAAe,KAAKf,GAApB;AACA,iBAAKV,cAAL,CAAoBK,IAApB;AACD;AAhDM;AAAA;AAAA,iBAiDPU,oBAAW;AACT,gBAAI,KAAKC,EAAT,EAAa;AACX,mBAAKA,EAAL,CAAQU,UAAR;AACA,mBAAKV,EAAL,GAAUL,SAAV;AACD;AACF;AAtDM;AAAA;AAAA,iBAuDPgB,kBAAS;AACP,mBAAQC,uDAAEC,iDAAFD,EAAQ;AAAEE,uBAAOC,8DAAW,IAAXA;AAAT,aAARH,EAAqCA,uDAAE,KAAFA,EAAS;AAAEI,sBAAQ,EAAE,OAAZ;AAAqBtB,iBAAG,EAAE,KAAKe,OAA/B;AAAwCQ,iBAAG,EAAE,KAAKA,GAAlD;AAAuD7B,oBAAM,EAAE,KAAKA,MAApE;AAA4EE,qBAAO,EAAE,KAAKkB,SAA1F;AAAqGU,kBAAI,EAAE;AAA3G,aAATN,CAArCA,CAAR;AACD;AAzDM;AAAA;AAAA,eA0DD,eAAG;AAAE,mBAAOO,uDAAW,IAAXA,CAAP;AAA0B;AA1D9B;AAAA;AAAA,eA2DY,eAAG;AAAE,mBAAO;AAC7B,qBAAO,CAAC,YAAD;AADsB,aAAP;AAEpB;AA7DG;;AAAA;AAAA,SAAT;;AA+DAvC,SAAG,CAACwC,KAAJxC,GAAYD,MAAZC;;;","names":["imgCss","Img","constructor","hostRef","registerInstance","ionImgWillLoad","createEvent","ionImgDidLoad","ionError","onLoad","emit","onError","srcChanged","addIO","componentDidLoad","src","undefined","window","IntersectionObserverEntry","prototype","removeIO","io","IntersectionObserver","data","isIntersecting","load","observe","el","setTimeout","loadError","loadSrc","disconnect","render","h","Host","class","getIonMode","decoding","alt","part","getElement","style"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-img.entry.js"],"sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-e806d1f6.js';\nimport { b as getIonMode } from './ionic-global-9d5c8ee3.js';\n\nconst imgCss = \":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\n\nconst Img = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\n    this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\n    this.ionError = createEvent(this, \"ionError\", 7);\n    this.onLoad = () => {\n      this.ionImgDidLoad.emit();\n    };\n    this.onError = () => {\n      this.ionError.emit();\n    };\n  }\n  srcChanged() {\n    this.addIO();\n  }\n  componentDidLoad() {\n    this.addIO();\n  }\n  addIO() {\n    if (this.src === undefined) {\n      return;\n    }\n    if (typeof window !== 'undefined' &&\n      'IntersectionObserver' in window &&\n      'IntersectionObserverEntry' in window &&\n      'isIntersecting' in window.IntersectionObserverEntry.prototype) {\n      this.removeIO();\n      this.io = new IntersectionObserver(data => {\n        // because there will only ever be one instance\n        // of the element we are observing\n        // we can just use data[0]\n        if (data[0].isIntersecting) {\n          this.load();\n          this.removeIO();\n        }\n      });\n      this.io.observe(this.el);\n    }\n    else {\n      // fall back to setTimeout for Safari and IE\n      setTimeout(() => this.load(), 200);\n    }\n  }\n  load() {\n    this.loadError = this.onError;\n    this.loadSrc = this.src;\n    this.ionImgWillLoad.emit();\n  }\n  removeIO() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  render() {\n    return (h(Host, { class: getIonMode(this) }, h(\"img\", { decoding: \"async\", src: this.loadSrc, alt: this.alt, onLoad: this.onLoad, onError: this.loadError, part: \"image\" })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"src\": [\"srcChanged\"]\n  }; }\n};\nImg.style = imgCss;\n\nexport { Img as ion_img };\n"]}