{"version":3,"mappings":"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","names":["routes","path","component","_events_page_page__WEBPACK_IMPORTED_MODULE_0__","EventsPagePageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","EventsPagePageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_events_page_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_events_page_page__WEBPACK_IMPORTED_MODULE_1__","EventsPagePage","activatedRoute","events","profile","router","toastController","eventEmitterService","location","subsVar","unsubscribe","onPopState","onBackAction","id","snapshot","paramMap","get","title","addressOne","addressTwo","city","state","zip","date","dateCreated","time","description","photo","eventId","eventTitle","eventAddressOne","eventAddressTwo","eventCity","eventState","eventZip","eventDateCreated","eventDate","eventTime","eventDescription","eventPhoto","profileSub","getUserDetails","subscribe","details","eventsGoing","console","log","includes","going","presentGoingToast","goingToEventSub","goingToEvent","userEmail","updatedEvents","Object","values","eventsGoing$","next","getValue","presentNotGoingToast","notGoingToEventSub","notGoingToEvent","i","length","splice","create","message","duration","toast","present","_angular_router__WEBPACK_IMPORTED_MODULE_6__","_services_events_service__WEBPACK_IMPORTED_MODULE_2__","_services_profile_service__WEBPACK_IMPORTED_MODULE_3__","_ionic_angular__WEBPACK_IMPORTED_MODULE_7__","src_app_emitters_events_event_emitter_service__WEBPACK_IMPORTED_MODULE_4__","_angular_common__WEBPACK_IMPORTED_MODULE_8__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/pages/events/events-page/events-page-routing.module.ts","webpack:///src/app/pages/events/events-page/events-page.module.ts","webpack:///src/app/pages/events/events-page/events-page.page.ts","webpack:///src/app/pages/events/events-page/events-page.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EventsPagePage } from './events-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventsPagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EventsPagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EventsPagePageRoutingModule } from './events-page-routing.module';\n\nimport { EventsPagePage } from './events-page.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EventsPagePageRoutingModule\n  ],\n  declarations: [EventsPagePage]\n})\nexport class EventsPagePageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { EventsService } from '../../../services/events.service';\nimport { ProfileService } from '../../../services/profile.service';\nimport { EventsEventEmitterService } from 'src/app/emitters/events-event-emitter.service';\nimport { PlatformLocation } from '@angular/common';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-events-page',\n  templateUrl: './events-page.page.html',\n  styleUrls: ['./events-page.page.scss'],\n})\nexport class EventsPagePage implements OnInit, OnDestroy {\n\n  id;\n  userEmail;\n  going = false;\n\n  eventId;\n  eventTitle;\n  eventAddressOne;\n  eventAddressTwo;\n  eventCity;\n  eventState;\n  eventZip;\n  eventDateCreated;\n  eventDate;\n  eventTime;\n  eventDescription;\n  eventPhoto;\n\n  eventsSub: Subscription;\n  goingToEventSub: Subscription;\n  notGoingToEventSub: Subscription;\n  profileSub: Subscription;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private events: EventsService,\n    private profile: ProfileService,\n    private router: Router,\n    private toastController: ToastController,\n    private eventEmitterService: EventsEventEmitterService,\n    private location: PlatformLocation\n    ) { }\n\n  ngOnDestroy(): void {\n      // this.eventsSub.unsubscribe();\n      this.eventEmitterService.subsVar.unsubscribe();\n    }\n\n  ngOnInit() {\n\n    this.location.onPopState(() => {\n      this.eventEmitterService.onBackAction();\n    });\n\n    // tslint:disable-next-line: radix\n    const id  = this.activatedRoute.snapshot.paramMap.get('id');\n    // tslint:disable-next-line: radix\n    const title  = this.activatedRoute.snapshot.paramMap.get('title');\n    // tslint:disable-next-line: radix\n    const addressOne  = this.activatedRoute.snapshot.paramMap.get('addressOne');\n    // tslint:disable-next-line: radix\n    const addressTwo  = this.activatedRoute.snapshot.paramMap.get('addressTwo');\n    // tslint:disable-next-line: radix\n    const city  = this.activatedRoute.snapshot.paramMap.get('city');\n    // tslint:disable-next-line: radix\n    const state  = this.activatedRoute.snapshot.paramMap.get('state');\n    // tslint:disable-next-line: radix\n    const zip  = this.activatedRoute.snapshot.paramMap.get('zip');\n    // tslint:disable-next-line: radix\n    const date  = this.activatedRoute.snapshot.paramMap.get('date');\n    // tslint:disable-next-line: radix\n    const dateCreated  = this.activatedRoute.snapshot.paramMap.get('dateCreated');\n    // tslint:disable-next-line: radix\n    const time  = this.activatedRoute.snapshot.paramMap.get('time');\n      // tslint:disable-next-line: radix\n    const description  = this.activatedRoute.snapshot.paramMap.get('description');\n      // tslint:disable-next-line: radix\n    const photo  = this.activatedRoute.snapshot.paramMap.get('photo');\n      // tslint:disable-next-line: radix\n\n    this.eventId = id;\n    this.eventTitle = title;\n    this.eventAddressOne = addressOne;\n    this.eventAddressTwo = addressTwo;\n    this.eventCity = city;\n    this.eventState = state;\n    this.eventZip = zip;\n    this.eventDateCreated = dateCreated;\n    this.eventDate = date;\n    this.eventTime = time;\n    this.eventDescription = description;\n    this.eventPhoto = photo;\n\n    this.profileSub = this.profile.getUserDetails().subscribe(\n      details => {\n\n        // Get all the events that the user is going to.\n\n        this.id = details['_id'];\n        let eventsGoing = details['eventsGoing'];\n        console.log(eventsGoing);\n\n        if (eventsGoing.includes(this.eventId)) {\n          this.going = true;\n        } else {\n          this.going = false;\n        }\n\n        console.log();\n      }\n    );\n  }\n\n  goingToEvent() {\n\n    this.going = true;\n    this.presentGoingToast();\n    console.log(`Adding ${this.eventId} to this Users eventsGoing property`);\n\n    this.goingToEventSub = this.events.goingToEvent(this.eventId, this.userEmail, this.id)\n      .subscribe(events => {\n\n        let updatedEvents = [...Object.values(events['eventsGoing']), this.eventId];\n        this.events.eventsGoing$.next(updatedEvents);\n        console.log(this.events.eventsGoing$.getValue());\n\n        // this.events.getEventsGoing(this.id).subscribe(\n        //   eventsGoing => {\n        //     console.log(eventsGoing);\n        //   }\n        // );\n    });\n  }\n\n  notGoingToEvent() {\n    this.going = false;\n    this.presentNotGoingToast();\n    console.log(`Removing ${this.eventId} from this Users eventsGoing property`);;\n    this.notGoingToEventSub = this.events.notGoingToEvent(this.eventId, this.userEmail, this.id).subscribe(\n      events => {\n        const eventsGoing = this.events.eventsGoing$.getValue();\n\n        for (let i = 0; i < eventsGoing.length; i++) {\n          if (eventsGoing[i] === this.eventId) {\n            eventsGoing.splice(i, 1);\n          }\n        }\n        console.log(eventsGoing);\n\n        this.events.eventsGoing$.next(eventsGoing);\n      }\n    );\n  }\n\n  callEventEmitter() {\n    this.eventEmitterService.onBackAction();\n  }\n\n  async presentGoingToast() {\n    const toast = await this.toastController.create({\n      message: 'You are going to this Event. It has been saved to your \"Going\" list',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  async presentNotGoingToast() {\n    const toast = await this.toastController.create({\n      message: 'You are no longer going to event. It has been removed from your \"Going\" list',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n\n}\n","export default \"<!-- Mobile Header -->\\n<ion-header class=\\\"ion-hide-lg-up\\\">\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button></ion-back-button>\\n      </ion-buttons>\\n      <ion-title>{{eventTitle}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-grid>\\n\\n        <!-- Picture Header -->\\n        <ion-row style=\\\"\\n        background: url({{eventPhoto}});\\\" class=\\\"ion-hide-sm-up ion-justify-content-center event-image\\\">\\n        </ion-row>\\n        <ion-row class=\\\"ion-hide-sm-down ion-justify-content-center\\\">\\n          <ion-col class=\\\"ion-text-center\\\" style=\\\"margin: 2em 0em;\\\" size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n            <img height=\\\"350\\\" src=\\\"{{this.eventPhoto}}\\\">\\n          </ion-col>\\n        </ion-row>\\n\\n        <!-- Event Details -->\\n        <ion-row class=\\\"ion-justify-content-center ion-align-items-center\\\">\\n          <ion-col class=\\\"details\\\" size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n            <h3>Event Title</h3>\\n            <p>{{ eventTitle }}</p>\\n            <h3>Address </h3>\\n            <p>{{ eventAddressOne }} {{ eventAddressTwo }}, {{ eventCity }}, {{ eventState }}, {{ eventZip}}</p>\\n            <h3>Date</h3>\\n            <p>{{ eventDate }}</p>\\n            <h3>Time</h3>\\n            <p>{{ eventTime }}</p>\\n            <h3>Description</h3>\\n            <p>{{ eventDescription }}</p>\\n        </ion-col>\\n        </ion-row>\\n\\n        <!-- Going or Not Going sections? -->\\n\\n        <!-- GOING? -->\\n        <ion-row *ngIf=\\\"!going\\\" class=\\\"going ion-justify-content-center\\\">\\n            <ion-col class=\\\"ion-text-center\\\" size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n              <p class=\\\"going-text\\\">Do you want to go to this event?<br> By clicking 'Yes', this event will be added to your Your Events.</p>\\n              <ion-button class=\\\"going-button\\\" (click)=\\\"goingToEvent()\\\">\\n                   Yes.\\n                </ion-button><br><br>\\n              <a class=\\\"going-link\\\" routerLink=\\\"/home/events\\\" (click)=\\\"callEventEmitter()\\\">Go back to Events Page</a><br><br>\\n               <a class=\\\"going-link\\\" routerLink=\\\"/home/events/going\\\">View My Events</a>\\n                 </ion-col>\\n        </ion-row>\\n\\n        <!-- NOT GOING -->\\n        <ion-row *ngIf=\\\"going\\\" class=\\\"going ion-justify-content-center\\\">\\n              <ion-col class=\\\"ion-text-center\\\" size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n                <p class=\\\"going-text\\\">Do you want to go to this event?<br> By clicking 'No', this event will be deleted from your Your Events.</p>\\n                <ion-button class=\\\"not-going-button\\\" (click)=\\\"notGoingToEvent()\\\">\\n                 No.\\n                </ion-button><br><br>\\n                <a class=\\\"not-going-link\\\" routerLink=\\\"/home/events\\\" (click)=\\\"callEventEmitter()\\\">Go back to Events Page</a><br><br>\\n                <a class=\\\"not-going-link\\\" routerLink=\\\"/home/events/going\\\">View My Events</a>\\n               </ion-col>\\n      </ion-row>\\n\\n      </ion-grid>\\n</ion-content>\\n\";"]}