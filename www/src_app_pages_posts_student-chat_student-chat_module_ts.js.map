{"version":3,"file":"src_app_pages_posts_student-chat_student-chat_module_ts.js","mappings":"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","sources":["./src/app/pages/posts/student-chat/student-chat-routing.module.ts","./src/app/pages/posts/student-chat/student-chat.module.ts","./src/app/pages/posts/student-chat/student-chat.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StudentChatPage } from './student-chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StudentChatPage\n  },\n  {\n    path: 'chat-page/:chatId/:fullName/:profilePicture/:email',\n    loadChildren: () => import('./chat-page/chat-page.module').then( m => m.ChatPagePageModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StudentChatPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StudentChatPageRoutingModule } from './student-chat-routing.module';\n\nimport { StudentChatPage } from './student-chat.page';\nimport { NewMessageStudentPageModule } from 'src/app/modals/new-message-student/new-message-student.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StudentChatPageRoutingModule,\n    NewMessageStudentPageModule\n  ],\n  declarations: [StudentChatPage]\n})\nexport class StudentChatPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { NewMessageStudentPage } from 'src/app/modals/new-message-student/new-message-student.page';\nimport { StudentChatService } from 'src/app/services/student-chat.service';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport {formatDistanceToNow } from 'date-fns';\n\n\n@Component({\n  selector: 'app-student-chat',\n  templateUrl: './student-chat.page.html',\n  styleUrls: ['./student-chat.page.scss'],\n})\nexport class StudentChatPage implements OnInit {\n  fullName: string;\n  profilePicture: string;\n  email: string;\n  conversations;\n  mostRecentMessage;\n\n  constructor(\n    private router: Router,\n    private modal: ModalController,\n    private studentChat: StudentChatService,\n    private profile: ProfileService) { }\n\n  ngOnInit() {\n    this.profile.getUserDetails()\n      .subscribe( data => {\n        this.fullName = data['fullName'];\n        this.profilePicture = data['profilePicture'];\n        this.email = data['email'];\n        this.studentChat.conversations$.subscribe(\n          conversations => {\n            this.conversations = Object.values(conversations).reverse();\n            for (let convo of this.conversations) {\n              for (const message of convo.messages) {\n                message.date = formatDistanceToNow(new Date(message.date));\n              }\n              if (convo.requestingUserEmail === this.email) {\n                // console.log('The requesting users is the same user as the one who logged in on this app');\n                convo.isUser = true;\n              }\n              // Get the most recent message information for text and date\n              convo.lastMessage = convo.messages.slice(-1)[0];\n              convo.lastMessageText = convo.lastMessage.text;\n              convo.lastMessageTime = convo.lastMessage.date;\n            }\n        });\n  });\n}\n\n  chatPage(chatId) {\n    this.router.navigate(['home/posts/student-chat/chat-page', chatId, this.fullName, this.profilePicture, this.email]);\n  }\n\n  async newMessage() {\n\n    const newMessageModalConfig = await this.modal.create({\n      component: NewMessageStudentPage,\n      componentProps: {\n\n      }\n    });\n    await newMessageModalConfig.present();\n\n  }\n\n  delete(item) {\n\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}