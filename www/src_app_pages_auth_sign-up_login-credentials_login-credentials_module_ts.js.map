{"version":3,"file":"src_app_pages_auth_sign-up_login-credentials_login-credentials_module_ts.js","mappings":"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","sources":["./src/app/pages/auth/sign-up/login-credentials/login-credentials-routing.module.ts","./src/app/pages/auth/sign-up/login-credentials/login-credentials.module.ts","./src/app/pages/auth/sign-up/login-credentials/login-credentials.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginCredentialsPage } from './login-credentials.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginCredentialsPage\n  },\n  {\n    path: 'enter-code/:email',\n    loadChildren: () => import('../enter-code/enter-code.module').then(m => m.EnterCodePageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginCredentialsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginCredentialsPageRoutingModule } from './login-credentials-routing.module';\n\nimport { LoginCredentialsPage } from './login-credentials.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    LoginCredentialsPageRoutingModule\n  ],\n  declarations: [LoginCredentialsPage]\n})\nexport class LoginCredentialsPageModule {}\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IonInput, AlertController } from '@ionic/angular';\nimport { AuthService } from '../../../../services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login-credentials',\n  templateUrl: './login-credentials.page.html',\n  styleUrls: ['./login-credentials.page.scss'],\n})\nexport class LoginCredentialsPage implements OnInit, OnDestroy {\n\n  @ViewChild('autoFucousInput', {static: false})  inputElement: IonInput;\n  credentialsForm: FormGroup;\n  passwordsMatch = false;\n  code = '';\n  email;\n\n  validationMessasges = {\n    email: [\n      { type: 'email', message: 'Please enter a valid email address'}\n    ],\n    password: [\n      { type: 'password', message: 'Please enter a valid password.'}\n    ]\n  };\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private auth: AuthService,\n    private alert: AlertController\n    ) { }\n\n  ngOnInit() {\n    this.credentialsForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.compose([\n        Validators.minLength(8),\n        Validators.required,\n        // at least 1 number, 1 uppercase letter, and one lowercase letter\n        Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n     ])],\n     reTypePassword: ['', Validators.compose([\n      Validators.minLength(8),\n      Validators.required,\n      // at least 1 number, 1 uppercase letter, and one lowercase letter\n      Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n   ])]\n  });\n\n    this.formOnChanges();\n}\n\nngOnDestroy() {\n  console.log('Being Destroyed');\n}\n\nformOnChanges(): void {\n  console.log(this.credentialsForm);\n  this.credentialsForm.valueChanges\n  .subscribe(\n    data => {\n      console.log(data);\n\n      this.credentialsForm.statusChanges.subscribe(status => {\n        console.log(status);\n        if ( status === 'VALID') {\n          console.log('you did it bruh');\n          this.passwordsMatch = true;\n        }\n      });\n\n      if (this.credentialsForm.controls.password.value === this.credentialsForm.controls.reTypePassword.value &&\n        this.credentialsForm.controls.password.touched &&\n        this.credentialsForm.controls.email.valid) {\n        console.log('Passwords Match');\n    }\n\n      if (this.credentialsForm.controls.password.value !== this.credentialsForm.controls.reTypePassword.value) {\n      console.log('Passwords dont match');\n      this.passwordsMatch = false;\n  }\n    }\n  );\n}\n\n\n  enterCodePage(email, password) {\n    this.email = this.credentialsForm.controls.email.value;\n    this.auth.getLoginCredentials(email, password)\n    console.log('Going to Enter Code Page');\n    this.router.navigate(['/personal-info/profile-picture/upload-resume/login-credentials/enter-code/', this.email]);\n\n  }\n\n  async userAlreadyExistAlert() {\n    const alert = await this.alert.create({\n      cssClass: 'danger-alert',\n      message: 'This user already exists.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n\n\n  cancel() {\n    console.log('Sign up cancelled');\n    this.router.navigate(['']);\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}