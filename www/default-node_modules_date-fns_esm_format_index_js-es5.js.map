{"version":3,"sources":["webpack:///node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack:///node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack:///node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack:///node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack:///node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack:///node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack:///node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack:///node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack:///node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack:///node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack:///node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack:///node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack:///node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack:///node_modules/date-fns/esm/_lib/toInteger/index.js","webpack:///node_modules/date-fns/esm/addMilliseconds/index.js","webpack:///node_modules/date-fns/esm/format/index.js","webpack:///node_modules/date-fns/esm/isValid/index.js","webpack:///node_modules/date-fns/esm/subMilliseconds/index.js"],"names":["addLeadingZeros","number","targetLength","sign","output","Math","abs","toString","length","dayPeriodEnum","am","pm","midnight","noon","morning","afternoon","evening","night","formatters","G","date","token","localize","era","getUTCFullYear","width","y","signedYear","year","ordinalNumber","unit","Y","options","signedWeekYear","weekYear","twoDigitYear","R","isoWeekYear","u","Q","quarter","ceil","getUTCMonth","String","context","q","M","month","L","w","week","I","isoWeek","d","getUTCDate","D","dayOfYear","E","dayOfWeek","getUTCDay","day","e","localDayOfWeek","weekStartsOn","c","i","isoDayOfWeek","a","hours","getUTCHours","dayPeriodEnumValue","dayPeriod","b","B","h","H","K","k","m","getUTCMinutes","s","getUTCSeconds","S","X","_localize","originalDate","_originalDate","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","timestamp","floor","getTime","T","offset","dirtyDelimiter","absOffset","minutes","delimiter","toUpperCase","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","pow","dateLongFormatter","pattern","formatLong","timeLongFormatter","time","dateTimeLongFormatter","matchResult","match","datePattern","timePattern","dateTimeFormat","dateTime","replace","longFormatters","p","P","MILLISECONDS_IN_DAY","getUTCDayOfYear","dirtyDate","arguments","setUTCMonth","setUTCHours","startOfYearTimestamp","difference","MILLISECONDS_IN_WEEK","getUTCISOWeek","diff","round","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","Date","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getUTCWeek","getUTCWeekYear","dirtyOptions","locale","localeFirstWeekContainsDate","firstWeekContainsDate","defaultFirstWeekContainsDate","RangeError","firstWeekOfNextYear","firstWeekOfThisYear","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","format","input","concat","startOfUTCISOWeek","setUTCDate","startOfUTCISOWeekYear","fourthOfJanuary","startOfUTCWeek","localeWeekStartsOn","defaultWeekStartsOn","startOfUTCWeekYear","firstWeek","toInteger","dirtyNumber","NaN","Number","isNaN","addMilliseconds","dirtyAmount","amount","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","utcDate","formatterOptions","result","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","isValid","subMilliseconds"],"mappings":"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","file":"default-node_modules_date-fns_esm_format_index_js-es5.js","sourcesContent":["export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}"]}