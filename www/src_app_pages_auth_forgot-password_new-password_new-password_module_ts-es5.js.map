{"version":3,"mappings":"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","names":["routes","path","component","_new_password_page__WEBPACK_IMPORTED_MODULE_0__","loadChildren","__webpack_require__","then","m","ConfirmPageModule","NewPasswordPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","NewPasswordPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_new_password_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_new_password_page__WEBPACK_IMPORTED_MODULE_1__","NewPasswordPage","formBuilder","router","auth","activatedRoute","toast","_environments_environment__WEBPACK_IMPORTED_MODULE_3__","password","type","message","newPasswordForm","group","newPassword","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","reTypeNewPassword","userEmail","snapshot","paramMap","get","console","log","formOnChanges","valueChanges","subscribe","data","statusChanges","status","controls","value","touched","passwordsMatch","passwordMatchToast","email","presentToast","forgotPassword","navigate","create","duration","present","cssClass","_angular_router__WEBPACK_IMPORTED_MODULE_6__","src_app_services_auth_service__WEBPACK_IMPORTED_MODULE_2__","_ionic_angular__WEBPACK_IMPORTED_MODULE_7__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/pages/auth/forgot-password/new-password/new-password-routing.module.ts","webpack:///src/app/pages/auth/forgot-password/new-password/new-password.module.ts","webpack:///src/app/pages/auth/forgot-password/new-password/new-password.page.ts","webpack:///src/app/pages/auth/forgot-password/new-password/new-password.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewPasswordPage } from './new-password.page';\n\nconst routes: Routes = [\n  // 2nd of 3 forgot password pages\n  {\n    path: '',\n    component: NewPasswordPage\n  },\n\n  // to the last page of forgot password route, \"confirm\"\n  {\n    path: 'confirm',\n    loadChildren: () => import('../confirm/confirm.module').then(m => m.ConfirmPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewPasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewPasswordPageRoutingModule } from './new-password-routing.module';\n\nimport { NewPasswordPage } from './new-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    NewPasswordPageRoutingModule\n  ],\n  declarations: [NewPasswordPage]\n})\nexport class NewPasswordPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ToastController } from '@ionic/angular';\n\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../../environments/environment';\n\n\n@Component({\n  selector: 'app-new-password',\n  templateUrl: './new-password.page.html',\n  styleUrls: ['./new-password.page.scss'],\n})\nexport class NewPasswordPage implements OnInit {\n\n  BACKEND_URL = environment.url;\n  newPasswordForm: FormGroup;\n\n  passwordsMatch = false;\n  code: string;\n  userEmail: string;\n\n  validationMessasges = {\n    password: [\n      { type: 'password', message: 'Please enter a valid password.'}\n    ]\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private auth: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private toast: ToastController) { }\n\n  ngOnInit() {\n    this.newPasswordForm =  this.formBuilder.group({\n      newPassword: ['', Validators.required],\n      reTypeNewPassword: ['', Validators.required],\n    });\n\n    this.userEmail = this.activatedRoute.snapshot.paramMap.get('email');\n\n    console.log('Email: ' + this.userEmail);\n\n    this.formOnChanges();\n  }\n  formOnChanges(): void {\n    console.log(this.newPasswordForm);\n    this.newPasswordForm.valueChanges\n    .subscribe(\n      data => {\n        console.log(data);\n        this.newPasswordForm.statusChanges.subscribe(status => {\n          console.log(status);\n          if ( status === 'VALID') {\n            // console.log('you did it bruh');\n          }\n        });\n        console.log(this.newPasswordForm.controls.newPassword.value)\n        console.log(this.newPasswordForm.controls.reTypeNewPassword.value)\n        if (this.newPasswordForm.controls.newPassword.value === this.newPasswordForm.controls.reTypeNewPassword.value &&\n          this.newPasswordForm.controls.newPassword.touched) {\n            this.passwordsMatch = true;\n            console.log('Passwords Match');\n            this.passwordMatchToast();\n      }\n\n        if (this.newPasswordForm.controls.newPassword.value !== this.newPasswordForm.controls.reTypeNewPassword.value) {\n        console.log('Passwords DONT Match');\n        this.passwordsMatch = false;\n    }\n      }\n    );\n  }\n  async goToConfirmPage() {\n    const email = this.userEmail;\n    let newPassword = this.newPasswordForm.value.newPassword;\n    let reTypeNewPassword = this.newPasswordForm.value.reTypeNewPassword;\n\n    if (newPassword !== reTypeNewPassword) {\n      this.presentToast();\n      return console.log('passwords do not match');\n    }\n\n    await this.auth.forgotPassword(email, newPassword);\n\n    await console.log('Going to Confirm Password Change Page');\n    await this.router.navigate(['/enter-email/enter-code/:email/new-password/:email/confirm']);\n  }\n  async presentToast() {\n      const toast = await this.toast.create({\n        message: 'The two passwords you entered do not match. Please try again.',\n        duration: 2000\n      });\n      toast.present();\n  }\n  async passwordMatchToast() {\n      const toast = await this.toast.create({\n        message: 'Passwords Match!',\n        cssClass: 'success-toast',\n        duration: 2000\n      });\n      toast.present();\n  }\n  cancel() {\n    console.log('Forgotten password cancelled');\n    this.router.navigate(['']);\n  }\n  back() {\n    this.router.navigate(['/enter-email/enter-code']);\n  }\n\n}\n","export default \"<ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar mode=\\\"md\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title size=\\\"small\\\">Create New Password</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"spacer ion-hide-lg-down\\\"></div>\\n  <ion-grid class=\\\"ion-text-center\\\">\\n    <!-- Desktop Header -->\\n    <ion-row style=\\\"padding-top: 80px; margin-bottom: 40px;\\\" class=\\\"ion-hide-lg-down ion-justify-content-center\\\">\\n      <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n        <ion-toolbar class=\\\"desktop-toolbar\\\">\\n              <ion-buttons slot=\\\"start\\\">\\n                  <img height=\\\"50\\\" src=\\\"../../../../../assets/icon/Logo 2.0.svg\\\" alt=\\\"\\\" srcset=\\\"\\\">\\n              </ion-buttons>\\n              <ion-buttons slot=\\\"end\\\">\\n                <ion-button class=\\\"back-button\\\" (click)=\\\"back()\\\">\\n                  Back\\n                </ion-button>\\n              </ion-buttons>\\n        </ion-toolbar>\\n            <!-- <img height=\\\"50\\\" style=\\\"display: inline;\\\" src=\\\"../../../assets/icon/suitcase-blue.svg\\\" alt=\\\"\\\" srcset=\\\"\\\">\\n            <h1 style=\\\"display: inline; margin-left: 15px;\\\">Jobs</h1> -->\\n      </ion-col>\\n    </ion-row>\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col size=\\\"12\\\">\\n        <h6 class=\\\"text-header\\\">Please enter your new password. Your password needs to be <span>at least 8 characters long, with at least 1 uppercase letter and one number.</span></h6>\\n      </ion-col>\\n      <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"6\\\" size-xl=\\\"4\\\">\\n        <form [formGroup]=\\\"newPasswordForm\\\"(ngSubmit)=\\\"goToConfirmPage()\\\" >\\n            <ion-list class=\\\"line-input\\\">\\n\\n            <ion-item>\\n              <ion-input placeholder=\\\"Password\\\" formControlName=\\\"newPassword\\\" type=\\\"password\\\"></ion-input>\\n\\n                  <ion-button *ngIf=\\\"!passwordsMatch\\\" class=\\\"badPassword\\\" item-right>\\n                     <ion-icon style=\\\"color: #FF443B;\\\" name=\\\"close\\\"> </ion-icon>\\n                  </ion-button>\\n\\n                  <ion-button *ngIf=\\\"passwordsMatch\\\" class=\\\"goodPassword\\\" item-right>\\n                      <ion-icon style=\\\"color: #21df82;\\\" name=\\\"checkmark\\\"> </ion-icon>\\n                   </ion-button>\\n            </ion-item>\\n\\n\\n            <ion-item>\\n              <ion-input placeholder=\\\"Re-type Password\\\" formControlName=\\\"reTypeNewPassword\\\" type=\\\"password\\\"></ion-input>\\n\\n                  <ion-button *ngIf=\\\"!passwordsMatch\\\" class=\\\"badPassword\\\" item-right>\\n                     <ion-icon style=\\\"color: #FF443B;\\\" name=\\\"close\\\"> </ion-icon>\\n                  </ion-button>\\n\\n                  <ion-button *ngIf=\\\"passwordsMatch\\\" class=\\\"goodPassword\\\" item-right>\\n                      <ion-icon style=\\\"color: #21df82;\\\" name=\\\"checkmark\\\"> </ion-icon>\\n                   </ion-button>\\n            </ion-item>\\n\\n\\n            <ion-button [disabled]=\\\"!this.passwordsMatch\\\" type=\\\"submit\\\" class=\\\"orange-button\\\" >NEXT</ion-button><br>\\n            <ion-button (click)=\\\"cancel()\\\" class=\\\"cancel-button\\\" slot=\\\"end\\\">\\n                cancel\\n            </ion-button>\\n          </ion-list>\\n        </form>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";"]}