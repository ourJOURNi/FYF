{"version":3,"mappings":"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","names":["routes","path","component","_my_posts_page__WEBPACK_IMPORTED_MODULE_0__","MyPostsPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","MyPostsPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","_components_custom_component_module__WEBPACK_IMPORTED_MODULE_0__","_ionic_angular__WEBPACK_IMPORTED_MODULE_7__","_my_posts_routing_module__WEBPACK_IMPORTED_MODULE_1__","declarations","_my_posts_page__WEBPACK_IMPORTED_MODULE_2__","MyPostsPage","activatedRoute","router","posts","profile","toast","formBuilder","eventEmitterService","modal","location","onPopState","onBackAction","getUserDetails","subscribe","userID","details","userFullName","userEmail","userProfilePicture","commentForm","group","comment","email","snapshot","paramMap","get","console","log","myPosts","showShortDesciption","navigate","getMyPosts","allMyPosts","Object","values","data","reverse","post","date","Date","postID","reset","now","getPostInfo","postComments","isUser","canDeleteComment","canReport","repliesLength","replies","length","includeSeconds","addSuffix","commentsSubject$","next","create","message","duration","then","present","_angular_router__WEBPACK_IMPORTED_MODULE_8__","_services_post_service__WEBPACK_IMPORTED_MODULE_2__","src_app_services_profile_service__WEBPACK_IMPORTED_MODULE_3__","_ionic_angular__WEBPACK_IMPORTED_MODULE_9__","_angular_forms__WEBPACK_IMPORTED_MODULE_10__","src_app_emitters_post_page_emitter_service__WEBPACK_IMPORTED_MODULE_4__","_angular_common__WEBPACK_IMPORTED_MODULE_11__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/pages/posts/my-posts/my-posts-routing.module.ts","webpack:///src/app/pages/posts/my-posts/my-posts.module.ts","webpack:///src/app/pages/posts/my-posts/my-posts.page.ts","webpack:///src/app/pages/posts/my-posts/my-posts.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MyPostsPage } from './my-posts.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MyPostsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MyPostsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CustomComponentsModule } from '../../../components/custom-component.module';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MyPostsPageRoutingModule } from './my-posts-routing.module';\n\nimport { MyPostsPage } from './my-posts.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    CustomComponentsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    MyPostsPageRoutingModule\n  ],\n  declarations: [MyPostsPage]\n})\nexport class MyPostsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PostsService } from '../../../services/post.service';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { ToastController, ModalController } from '@ionic/angular';\nimport { format } from 'date-fns';\nimport { formatDistanceToNow } from 'date-fns';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { PostPageEmitterService } from 'src/app/emitters/post-page-emitter.service';\nimport { PlatformLocation } from '@angular/common';\n\n@Component({\n  selector: 'app-my-posts',\n  templateUrl: './my-posts.page.html',\n  styleUrls: ['./my-posts.page.scss'],\n})\nexport class MyPostsPage implements OnInit {\n\n  commentForm: FormGroup;\n  showShortDesciption = true\n  userEmail;\n  isUser = true;\n  allMyPosts = [];\n  userFullName: any;\n  userID: any;\n  userProfilePicture: any;\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private posts: PostsService,\n    private profile: ProfileService,\n    private toast: ToastController,\n    private formBuilder: FormBuilder,\n    private eventEmitterService: PostPageEmitterService,\n    private modal: ModalController,\n    private location: PlatformLocation) { }\n\n  ngOnInit() {\n    this.location.onPopState(() => {\n      this.eventEmitterService.onBackAction();\n    });\n\n    this.profile.getUserDetails().subscribe(\n      details => {\n        this.userID = details['_id'];\n        this.userFullName = details['fullName'];\n        this.userEmail = details['email'];\n        this.userProfilePicture = details['profilePicture'];\n\n      });\n\n      // To collect comment data\n    this.commentForm = this.formBuilder.group({\n      comment: ['']\n    });\n\n\n    const email = this.activatedRoute.snapshot.paramMap.get('email');\n    this.userEmail = email;\n    console.log(this.userEmail);\n\n    this.myPosts(this.userEmail);\n  }\n  alterDescriptionText() {\n  this.showShortDesciption = !this.showShortDesciption\n  }\n  addPost() {\n    this.router.navigate(['/home/posts/add-post']);\n  }\n  back() {\n    this.eventEmitterService.onBackAction();\n    this.router.navigate(['/home/posts']);\n  }\n  myPosts(userEmail) {\n    this.posts.getMyPosts(userEmail).subscribe(\n      data => {\n        this.allMyPosts = Object.values(data).reverse();\n        console.log(data);\n\n        for (const post of this.allMyPosts) {\n          post.date = format( new Date(post.date), 'MMMM do, yyyy');\n        }\n\n        return this.allMyPosts;\n      }\n    );\n  }\n  async comment(postID, userFullName, userEmail, userProfilePicture, comment) {\n\n    // Reset Comment Input\n    this.commentForm.reset();\n    const date = await Date.now();\n    console.log('Posting comment');\n    console.log('Post ID: ' + postID);\n\n    await this.posts.comment(\n      postID,\n      this.userFullName,\n      this.userEmail,\n      this.userProfilePicture,\n      comment\n    ).subscribe(\n      () => {this.posts.getPostInfo(postID).subscribe(\n        post => {\n          this.posts.getPostInfo(postID).subscribe(\n           post => {\n             for (let postComments of post['comments']) {\n\n               console.log(postComments);\n\n               postComments.isUser = false;\n               postComments.canDeleteComment = false;\n               postComments.canReport = true;\n\n                 // If this comment is from the logged in user, they can delete and edit\n               if (postComments.userEmail === this.userEmail) {\n                   postComments.isUser = true;\n                   postComments.canDeleteComment = true;\n                   postComments.canReport = false;\n                 }\n\n               postComments.repliesLength = postComments.replies.length;\n               postComments.date = formatDistanceToNow( new Date(postComments.date), {\n                 includeSeconds: true,\n                 addSuffix: false\n               });\n              }\n             this.posts.commentsSubject$.next(post['comments'].reverse());\n           });\n        });\n      }\n    );\n\n    await this.posts.getPostInfo(postID).subscribe(\n      post => {\n        for (let postComments of post['comments']) {\n          postComments.date = formatDistanceToNow( new Date(postComments.date), {\n            includeSeconds: true,\n            addSuffix: true\n          });\n         }\n        this.posts.commentsSubject$.next(post['comments'].reverse());\n      }\n    );\n\n    const toast = this.toast.create({\n      message: 'Your comment has been added.',\n      duration: 1500\n    });\n\n    toast.then(toast => toast.present());\n\n    await this.router.navigate(['/home/posts/post-page', postID]);\n  }\n}\n","export default \" <!-- Mobile Toolbar -->\\n <ion-header class=\\\"ion-hide-lg-up\\\">\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button></ion-back-button>\\n      </ion-buttons>\\n    <ion-title>My Posts</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <!-- fab placed to the bottom end -->\\n  <ion-fab class=\\\"ion-hide-lg-up\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n      <ion-fab-button (click)=\\\"addPost()\\\">\\n        <ion-icon name=\\\"add\\\" size=\\\"large\\\"></ion-icon>\\n      </ion-fab-button>\\n  </ion-fab>\\n    <!-- Desktop -->\\n  <ion-grid class=\\\"ion-hide-md-down\\\">\\n    <!-- Desktop Header -->\\n    <ion-row style=\\\"padding-top: 80px; margin-bottom: 40px;\\\" class=\\\"ion-hide-lg-down ion-justify-content-center\\\">\\n      <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n        <ion-toolbar class=\\\"desktop-toolbar\\\">\\n              <ion-buttons slot=\\\"start\\\">\\n                  <h1>My Posts</h1>\\n              </ion-buttons>\\n              <ion-buttons slot=\\\"end\\\">\\n                <ion-button class=\\\"add-button\\\"  (click)=\\\"addPost()\\\">\\n                  Add Post\\n                </ion-button>\\n                <ion-button class=\\\"blue-button\\\"  (click)=\\\"back()\\\">\\n                  Back\\n                </ion-button>\\n              </ion-buttons>\\n        </ion-toolbar>\\n            <!-- <img height=\\\"50\\\" style=\\\"display: inline;\\\" src=\\\"../../../assets/icon/suitcase-blue.svg\\\" alt=\\\"\\\" srcset=\\\"\\\">\\n            <h1 style=\\\"display: inline; margin-left: 15px;\\\">Jobs</h1> -->\\n      </ion-col>\\n    </ion-row>\\n    <ion-row class=\\\"ion-justify-content-center\\\" style=\\\"margin-top: 1%;\\\">\\n      <ion-col\\n      class=\\\"no-posts ion-align-items-center\\\"\\n      *ngIf=\\\"allMyPosts.length === 0\\\"\\n      size-xs=\\\"11\\\" size-sm=\\\"9\\\" size-md=\\\"8\\\" size-lg=\\\"7\\\">\\n      <div>\\n        <p style=\\\"font-size: 1.2em;\\\">You currently do not have any posts. Please click the Add Post button to create a Post.</p>\\n      </div>\\n      </ion-col>\\n\\n    <!-- Posts -->\\n    <ion-col size-xs=\\\"11\\\" size-sm=\\\"10\\\" size-md=\\\"10\\\" size-lg=\\\"8\\\" size-xl=\\\"6\\\">\\n      <div class=\\\"post\\\" *ngFor=\\\"let post of allMyPosts\\\" style=\\\"margin-top: 1%;\\\">\\n        <!-- Profile Header -->\\n        <ion-row class=\\\"ion-justify-content-center\\\">\\n              <!-- Profile Picture -->\\n              <ion-col size=\\\"1\\\">\\n                <img src=\\\"{{post.creatorProfilePicture}}\\\" style=\\\"background: #999; border-radius: 100px; height: 35xpx; width: 35px;\\\">\\n              </ion-col>\\n\\n              <!-- Post Creator's Name -->\\n              <ion-col size=\\\"10\\\">\\n                <p class=\\\"post-name\\\">{{post.creatorName}}</p>\\n                <p class=\\\"post-date\\\">{{post.date}}</p>\\n              </ion-col>\\n\\n        </ion-row>\\n        <!-- Post Content -->\\n        <ion-row class=\\\"ion-justify-content-center\\\">\\n          <!-- (click)=\\\"postPage(post)\\\"  -->\\n          <!-- 1080x1350 -->\\n          <ion-col size=\\\"11\\\">\\n            <p class=\\\"post-title\\\">{{post.title}}</p>\\n            <div class=\\\"hashtags\\\">\\n              <p class=\\\"hashtag\\\" *ngFor=\\\"let tag of post.hashtags\\\">\\n                #{{tag}}\\n              </p>\\n            </div>\\n            <p class=\\\"no-tags\\\" *ngIf=\\\"post.hashtags.length === 0\\\">\\n              No #hashtags for this post\\n            </p>\\n            <p [ngClass]=\\\"{'show-less': showShortDesciption}\\\" class=\\\"post-content\\\">{{post.post}}</p>\\n            <span class=\\\"ellipsis\\\" *ngIf=\\\"post.post.length > 400 && showShortDesciption\\\">...</span>\\n            <button *ngIf=\\\"post.post.length > 400\\\" class=\\\"show-more-or-less-button\\\" type=\\\"button\\\" (click)=\\\"alterDescriptionText()\\\">\\n              {{ showShortDesciption ? 'SHOW ALL': 'SHOW LESS' }}\\n            </button>\\n          </ion-col>\\n        </ion-row>\\n        <!-- Comment -->\\n        <ion-row class=\\\"ion-justify-content-center\\\">\\n          <ion-col size=\\\"12\\\">\\n            <ion-item  style=\\\"height: auto;\\\" lines=\\\"none\\\">\\n              <form (ngSubmit)=\\\"comment(post._id, this.userFullName, this.userEmail, this.userProfilePicture, this.commentForm.value)\\\" [formGroup]=\\\"commentForm\\\">\\n                <ion-textarea\\n                    class=\\\"comment-input-mobile\\\"\\n                    autogrow=\\\"true\\\"\\n                    autocapitalize=\\\"true\\\"\\n                    rows=\\\"5\\\"\\n                    spellcheck=\\\"true\\\"\\n                    wrap=\\\"soft\\\"\\n                    type=\\\"text\\\"\\n                    #postComment\\n                    placeholder=\\\"Add a Comment\\\" formControlName=\\\"comment\\\">\\n                </ion-textarea>\\n                <!-- Comment Post Button -->\\n                <ion-button\\n                  style=\\\"float: right;\\\"\\n                  *ngIf=\\\"postComment.value.length >= 2;\\\"\\n                  class=\\\"comment-post-button\\\"\\n                  name=\\\"send\\\"\\n                  type=\\\"submit\\\">Post Comment\\n                </ion-button>\\n              </form>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <!-- Post Buttons -->\\n        <ion-row class=\\\"ion-justify-content-center\\\">\\n          <!-- Upvote & Downvote-->\\n          <ion-col size=\\\"8\\\">\\n            <app-up-down-vote-buttons [postID]=\\\"post._id\\\" [postEmail]=\\\"post.creatorEmail\\\"></app-up-down-vote-buttons>\\n          </ion-col>\\n          <!-- Follow & Comment -->\\n          <ion-col size=\\\"3\\\">\\n            <app-follow-comment-buttons [postID]=\\\"post._id\\\" [commentLength]=\\\"post.comments.length\\\"></app-follow-comment-buttons>\\n          </ion-col>\\n        </ion-row>\\n      </div>\\n    </ion-col>\\n\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";"]}